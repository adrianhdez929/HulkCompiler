Grammar:

Rule 0     S' -> program
Rule 1     program -> program_decl_list
Rule 2     program_decl_list -> program_level_decl program_decl_list
Rule 3     program_decl_list -> empty
Rule 4     program_decl_list -> inst_list
Rule 5     program_level_decl -> protocol_declaration
Rule 6     program_level_decl -> function_declaration
Rule 7     program_level_decl -> type_declaration
Rule 8     inst_list -> inst SEMICOLON inst_list
Rule 9     inst_list -> inst SEMICOLON
Rule 10    inst_list -> inst
Rule 11    inst -> LPAREN var_dec RPAREN
Rule 12    inst -> expression
Rule 13    inst -> flux_control
Rule 14    inst -> scope_list
Rule 15    var_dec -> LET var_init_list IN var_decl_expr
Rule 16    var_decl_expr -> LPAREN var_dec RPAREN
Rule 17    var_decl_expr -> expression
Rule 18    var_decl_expr -> flux_control
Rule 19    var_decl_expr -> scope
Rule 20    var_init_list -> var_init COMMA var_init_list
Rule 21    var_init_list -> var_init
Rule 22    var_init -> identifier ASSIGN inst type_downcast
Rule 23    var_init -> identifier ASSIGN inst
Rule 24    identifier -> fully_typed_param
Rule 25    identifier -> atom
Rule 26    fully_typed_param -> IDENTIFIER type_anotation
Rule 27    type_anotation -> COLON BOOLEAN_TYPE
Rule 28    type_anotation -> COLON NUMBER_TYPE
Rule 29    type_anotation -> COLON IDENTIFIER
Rule 30    scope_list -> scope scope_list
Rule 31    scope_list -> scope
Rule 32    scope -> LBRACE RBRACE
Rule 33    scope -> LBRACE inst_list RBRACE
Rule 34    expression -> var_dec
Rule 35    expression -> LPAREN var_asign RPAREN
Rule 36    expression -> var_asign
Rule 37    expression -> atom ESPACEDCONCAT expression  [precedence=left, level=4]
Rule 38    expression -> atom CONCAT expression  [precedence=left, level=4]
Rule 39    expression -> aritmetic_operation
Rule 40    aritmetic_operation -> term
Rule 41    aritmetic_operation -> term MINUS aritmetic_operation  [precedence=left, level=4]
Rule 42    aritmetic_operation -> term PLUS aritmetic_operation  [precedence=left, level=4]
Rule 43    term -> factor
Rule 44    term -> factor MODULE term  [precedence=left, level=5]
Rule 45    term -> factor DIVIDE term  [precedence=left, level=5]
Rule 46    term -> factor MULTIPLY term  [precedence=left, level=5]
Rule 47    factor -> PLUS factor  [precedence=right, level=8]
Rule 48    factor -> MINUS factor  [precedence=right, level=8]
Rule 49    factor -> base_exponent
Rule 50    factor -> factor ASTERPOWER base_exponent  [precedence=right, level=6]
Rule 51    factor -> factor POWER base_exponent  [precedence=right, level=6]
Rule 52    base_exponent -> LPAREN aritmetic_operation RPAREN
Rule 53    base_exponent -> identifier
Rule 54    atom -> NUMBER
Rule 55    atom -> STRING
Rule 56    atom -> build_in_consts
Rule 57    atom -> build_in_functions
Rule 58    atom -> boolean_value
Rule 59    atom -> type_instanciation
Rule 60    atom -> var_method
Rule 61    atom -> vector
Rule 62    atom -> var_use
Rule 63    atom -> function_call
Rule 64    var_asign -> var_use ASSIGN expression
Rule 65    var_asign -> var_use DEST_ASSIGN expression
Rule 66    function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration
Rule 67    function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration
Rule 68    function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON
Rule 69    function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON
Rule 70    function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
Rule 71    function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration
Rule 72    function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration
Rule 73    function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration
Rule 74    function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON
Rule 75    function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON
Rule 76    function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration
Rule 77    function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration
Rule 78    function_full_declaration -> scope
Rule 79    function_inline_declaration -> RETURN inst SEMICOLON
Rule 80    conditional -> IF full_conditional
Rule 81    conditional -> IF inline_conditional
Rule 82    inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement
Rule 83    full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement
Rule 84    else_elif_statement -> ELSE full_else
Rule 85    else_elif_statement -> ELSE inline_else
Rule 86    else_elif_statement -> ELIF full_conditional
Rule 87    else_elif_statement -> ELIF inline_conditional
Rule 88    inline_else -> expression
Rule 89    full_else -> scope
Rule 90    while_loop -> WHILE LPAREN expression RPAREN expression
Rule 91    while_loop -> WHILE LPAREN expression RPAREN scope
Rule 92    while_loop -> WHILE LPAREN conditional_expression RPAREN expression
Rule 93    while_loop -> WHILE LPAREN conditional_expression RPAREN scope
Rule 94    for_loop -> FOR LPAREN identifier IN expression RPAREN expression
Rule 95    for_loop -> FOR LPAREN identifier IN expression RPAREN scope
Rule 96    conditional_expression -> condition
Rule 97    conditional_expression -> NOT condition  [precedence=right, level=7]
Rule 98    conditional_expression -> condition OR conditional_expression  [precedence=left, level=1]
Rule 99    conditional_expression -> condition AND conditional_expression  [precedence=left, level=1]
Rule 100   condition -> LPAREN conditional_expression RPAREN
Rule 101   condition -> IDENTIFIER IS identifier
Rule 102   condition -> comparation
Rule 103   comparation -> expression NOT_EQUAL expression  [precedence=left, level=2]
Rule 104   comparation -> expression EQUAL expression  [precedence=left, level=2]
Rule 105   comparation -> expression LESS_EQUAL expression  [precedence=left, level=3]
Rule 106   comparation -> expression GREATER_EQUAL expression  [precedence=left, level=3]
Rule 107   comparation -> expression LESS_THAN expression  [precedence=left, level=3]
Rule 108   comparation -> expression GREATER_THAN expression  [precedence=left, level=3]
Rule 109   boolean_value -> FALSE
Rule 110   boolean_value -> TRUE
Rule 111   type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON
Rule 112   type_declaration -> TYPE IDENTIFIER inherits_type decl_body
Rule 113   type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON
Rule 114   type_declaration -> TYPE IDENTIFIER decl_body
Rule 115   type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
Rule 116   type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body
Rule 117   type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON
Rule 118   type_declaration -> TYPE IDENTIFIER parameters decl_body
Rule 119   parameters -> LPAREN arguments_list RPAREN
Rule 120   inherits_type -> INHERITS IDENTIFIER parameters
Rule 121   inherits_type -> INHERITS IDENTIFIER
Rule 122   decl_body -> LBRACE decl_list RBRACE
Rule 123   decl_body -> LBRACE RBRACE
Rule 124   decl_list -> decl SEMICOLON decl_list
Rule 125   decl_list -> decl SEMICOLON
Rule 126   decl -> method_declaration
Rule 127   decl -> atribute_declaration
Rule 128   atribute_declaration -> identifier ASSIGN expression type_downcast
Rule 129   atribute_declaration -> identifier ASSIGN expression
Rule 130   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
Rule 131   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
Rule 132   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
Rule 133   method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration
Rule 134   method_declaration -> IDENTIFIER parameters type_anotation RETURN expression
Rule 135   method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration
Rule 136   method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression
Rule 137   method_declaration -> IDENTIFIER parameters function_full_declaration
Rule 138   method_declaration -> IDENTIFIER parameters RETURN expression
Rule 139   function_call -> IDENTIFIER LPAREN RPAREN
Rule 140   function_call -> IDENTIFIER LPAREN arguments_list RPAREN
Rule 141   type_instanciation -> NEW IDENTIFIER LPAREN RPAREN
Rule 142   type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN
Rule 143   type_downcast -> AS identifier
Rule 144   arguments_list -> argument COMMA arguments_list
Rule 145   arguments_list -> argument
Rule 146   argument -> conditional
Rule 147   argument -> expression
Rule 148   var_use -> atom LBRACKET expression RBRACKET
Rule 149   var_use -> var_attr
Rule 150   var_use -> IDENTIFIER
Rule 151   var_attr -> IDENTIFIER DOT var_attr
Rule 152   var_attr -> IDENTIFIER DOT IDENTIFIER
Rule 153   var_method -> IDENTIFIER DOT function_call
Rule 154   flux_control -> for_loop
Rule 155   flux_control -> conditional
Rule 156   flux_control -> while_loop
Rule 157   protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
Rule 158   protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
Rule 159   protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON
Rule 160   protocol_declaration -> PROTOCOL IDENTIFIER protocol_body
Rule 161   protocol_body -> LBRACE virtual_method_list RBRACE
Rule 162   virtual_method_list -> virtual_method SEMICOLON virtual_method_list
Rule 163   virtual_method_list -> virtual_method SEMICOLON
Rule 164   virtual_method -> IDENTIFIER parameters type_anotation
Rule 165   virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation
Rule 166   vector -> LBRACKET vector_decl RBRACKET
Rule 167   vector_decl -> expression OR identifier IN expression
Rule 168   vector_decl -> expression SINCETHAT identifier IN expression
Rule 169   vector_decl -> arguments_list
Rule 170   build_in_range -> RANGE LPAREN argument COMMA argument RPAREN
Rule 171   build_in_print -> PRINT LPAREN argument RPAREN
Rule 172   build_in_functions -> RAND LPAREN RPAREN
Rule 173   build_in_functions -> LOG LPAREN argument COMMA argument RPAREN
Rule 174   build_in_functions -> EXP LPAREN argument RPAREN
Rule 175   build_in_functions -> COS LPAREN argument RPAREN
Rule 176   build_in_functions -> SIN LPAREN argument RPAREN
Rule 177   build_in_functions -> SQRT LPAREN argument RPAREN
Rule 178   build_in_functions -> build_in_print
Rule 179   build_in_functions -> build_in_range
Rule 180   build_in_consts -> E_CONST
Rule 181   build_in_consts -> PI_CONST
Rule 182   empty -> <empty>

Terminals, with rules where they appear:

AND                  : 99
AS                   : 143
ASSIGN               : 22 23 64 128 129
ASTERPOWER           : 50
BOOLEAN_TYPE         : 27
COLON                : 27 28 29
COMMA                : 20 144 170 173
CONCAT               : 38
COS                  : 175
DEST_ASSIGN          : 65
DIVIDE               : 45
DOT                  : 151 152 153
ELIF                 : 86 87
ELSE                 : 84 85
EQUAL                : 104
ESPACEDCONCAT        : 37
EXP                  : 174
EXTENDS              : 157 158
E_CONST              : 180
FALSE                : 109
FOR                  : 94 95
FUNCTION             : 66 67 68 69 70 71 72 73 74 75 76 77
GREATER_EQUAL        : 106
GREATER_THAN         : 108
IDENTIFIER           : 26 29 66 67 68 69 70 71 72 73 74 75 76 77 101 111 112 113 114 115 116 117 118 120 121 130 131 132 133 134 135 136 137 138 139 140 141 142 150 151 152 152 153 157 157 158 158 159 160 164 165
IF                   : 80 81
IN                   : 15 94 95 167 168
INHERITS             : 120 121
IS                   : 101
LBRACE               : 32 33 122 123 161
LBRACKET             : 148 166
LESS_EQUAL           : 105
LESS_THAN            : 107
LET                  : 15
LOG                  : 173
LPAREN               : 11 16 35 52 66 68 70 72 74 76 82 83 90 91 92 93 94 95 100 119 130 131 132 135 136 139 140 141 142 165 170 171 172 173 174 175 176 177
MINUS                : 41 48
MODULE               : 44
MULTIPLY             : 46
NEW                  : 141 142
NOT                  : 97
NOT_EQUAL            : 103
NUMBER               : 54
NUMBER_TYPE          : 28
OR                   : 98 167
PI_CONST             : 181
PLUS                 : 42 47
POWER                : 51
PRINT                : 171
PROTOCOL             : 157 158 159 160
RAND                 : 172
RANGE                : 170
RBRACE               : 32 33 122 123 161
RBRACKET             : 148 166
RETURN               : 79 131 132 134 136 138
RPAREN               : 11 16 35 52 66 68 70 72 74 76 82 83 90 91 92 93 94 95 100 119 130 131 132 135 136 139 140 141 142 165 170 171 172 173 174 175 176 177
SEMICOLON            : 8 9 68 69 74 75 79 111 113 115 117 124 125 157 159 162 163
SIN                  : 176
SINCETHAT            : 168
SQRT                 : 177
STRING               : 55
TRUE                 : 110
TYPE                 : 111 112 113 114 115 116 117 118
WHILE                : 90 91 92 93
error                : 

Nonterminals, with rules where they appear:

argument             : 144 145 170 170 171 173 173 174 175 176 177
arguments_list       : 119 140 142 144 169
aritmetic_operation  : 39 41 42 52
atom                 : 25 37 38 148
atribute_declaration : 127
base_exponent        : 49 50 51
boolean_value        : 58
build_in_consts      : 56
build_in_functions   : 57
build_in_print       : 178
build_in_range       : 179
comparation          : 102
condition            : 96 97 98 99
conditional          : 146 155
conditional_expression : 82 83 92 93 98 99 100 131
decl                 : 124 125
decl_body            : 111 112 113 114 115 116 117 118
decl_list            : 122 124
else_elif_statement  : 82 83
empty                : 3
expression           : 12 17 37 38 64 65 82 88 90 90 91 92 94 94 95 103 103 104 104 105 105 106 106 107 107 108 108 128 129 132 134 136 138 147 148 167 167 168 168
factor               : 43 44 45 46 47 48 50 51
flux_control         : 13 18
for_loop             : 154
full_conditional     : 80 86
full_else            : 84
fully_typed_param    : 24
function_call        : 63 153
function_declaration : 6
function_full_declaration : 68 69 70 71 74 75 76 77 130 133 135 137
function_inline_declaration : 66 67 72 73
identifier           : 22 23 53 94 95 101 128 129 143 167 168
inherits_type        : 111 112 115 116
inline_conditional   : 81 87
inline_else          : 85
inst                 : 8 9 10 22 23 79
inst_list            : 4 8 33
method_declaration   : 126
parameters           : 67 69 71 73 75 77 115 116 117 118 120 133 134 137 138 164
program              : 0
program_decl_list    : 1 2
program_level_decl   : 2
protocol_body        : 157 158 159 160
protocol_declaration : 5
scope                : 19 30 31 78 89 91 93 95
scope_list           : 14 30 83
term                 : 40 41 42 44 45 46
type_anotation       : 26 66 67 68 69 70 71 130 131 132 133 134 164 165
type_declaration     : 7
type_downcast        : 22 128
type_instanciation   : 59
var_asign            : 35 36
var_attr             : 149 151
var_dec              : 11 16 34
var_decl_expr        : 15
var_init             : 20 21
var_init_list        : 15 20
var_method           : 60
var_use              : 62 64 65
vector               : 61
vector_decl          : 166
virtual_method       : 162 163
virtual_method_list  : 161 162
while_loop           : 156


state 0

    (0) S' -> . program
    (1) program -> . program_decl_list
    (2) program_decl_list -> . program_level_decl program_decl_list
    (3) program_decl_list -> . empty
    (4) program_decl_list -> . inst_list
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (182) empty -> .
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (157) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (158) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (159) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (160) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (66) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration
    (67) function_declaration -> . FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration
    (68) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON
    (69) function_declaration -> . FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON
    (70) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (71) function_declaration -> . FUNCTION IDENTIFIER parameters type_anotation function_full_declaration
    (72) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration
    (73) function_declaration -> . FUNCTION IDENTIFIER parameters function_inline_declaration
    (74) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON
    (75) function_declaration -> . FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON
    (76) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration
    (77) function_declaration -> . FUNCTION IDENTIFIER parameters function_full_declaration
    (111) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body SEMICOLON
    (112) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body
    (113) type_declaration -> . TYPE IDENTIFIER decl_body SEMICOLON
    (114) type_declaration -> . TYPE IDENTIFIER decl_body
    (115) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (116) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body
    (117) type_declaration -> . TYPE IDENTIFIER parameters decl_body SEMICOLON
    (118) type_declaration -> . TYPE IDENTIFIER parameters decl_body
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 182 (empty -> .)
    PROTOCOL        shift and go to state 10
    FUNCTION        shift and go to state 12
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    LBRACE          shift and go to state 44
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    program                        shift and go to state 1
    program_decl_list              shift and go to state 2
    program_level_decl             shift and go to state 3
    empty                          shift and go to state 4
    inst_list                      shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    scope                          shift and go to state 25
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 1

    (0) S' -> program .


state 2

    (1) program -> program_decl_list .
    $end            reduce using rule 1 (program -> program_decl_list .)


state 3

    (2) program_decl_list -> program_level_decl . program_decl_list
    (2) program_decl_list -> . program_level_decl program_decl_list
    (3) program_decl_list -> . empty
    (4) program_decl_list -> . inst_list
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (182) empty -> .
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (157) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (158) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (159) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (160) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (66) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration
    (67) function_declaration -> . FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration
    (68) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON
    (69) function_declaration -> . FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON
    (70) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (71) function_declaration -> . FUNCTION IDENTIFIER parameters type_anotation function_full_declaration
    (72) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration
    (73) function_declaration -> . FUNCTION IDENTIFIER parameters function_inline_declaration
    (74) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON
    (75) function_declaration -> . FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON
    (76) function_declaration -> . FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration
    (77) function_declaration -> . FUNCTION IDENTIFIER parameters function_full_declaration
    (111) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body SEMICOLON
    (112) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body
    (113) type_declaration -> . TYPE IDENTIFIER decl_body SEMICOLON
    (114) type_declaration -> . TYPE IDENTIFIER decl_body
    (115) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (116) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body
    (117) type_declaration -> . TYPE IDENTIFIER parameters decl_body SEMICOLON
    (118) type_declaration -> . TYPE IDENTIFIER parameters decl_body
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 182 (empty -> .)
    PROTOCOL        shift and go to state 10
    FUNCTION        shift and go to state 12
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    LBRACE          shift and go to state 44
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    program_level_decl             shift and go to state 3
    program_decl_list              shift and go to state 65
    empty                          shift and go to state 4
    inst_list                      shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    scope                          shift and go to state 25
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 4

    (3) program_decl_list -> empty .
    $end            reduce using rule 3 (program_decl_list -> empty .)


state 5

    (4) program_decl_list -> inst_list .
    $end            reduce using rule 4 (program_decl_list -> inst_list .)


state 6

    (5) program_level_decl -> protocol_declaration .
    PROTOCOL        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FUNCTION        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TYPE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LPAREN          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LET             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NUMBER          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    STRING          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FOR             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IF              reduce using rule 5 (program_level_decl -> protocol_declaration .)
    WHILE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACE          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IDENTIFIER      reduce using rule 5 (program_level_decl -> protocol_declaration .)
    E_CONST         reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PI_CONST        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RAND            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LOG             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    EXP             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    COS             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SIN             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SQRT            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FALSE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TRUE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NEW             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACKET        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PRINT           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RANGE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PLUS            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    MINUS           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    $end            reduce using rule 5 (program_level_decl -> protocol_declaration .)


state 7

    (6) program_level_decl -> function_declaration .
    PROTOCOL        reduce using rule 6 (program_level_decl -> function_declaration .)
    FUNCTION        reduce using rule 6 (program_level_decl -> function_declaration .)
    TYPE            reduce using rule 6 (program_level_decl -> function_declaration .)
    LPAREN          reduce using rule 6 (program_level_decl -> function_declaration .)
    LET             reduce using rule 6 (program_level_decl -> function_declaration .)
    NUMBER          reduce using rule 6 (program_level_decl -> function_declaration .)
    STRING          reduce using rule 6 (program_level_decl -> function_declaration .)
    FOR             reduce using rule 6 (program_level_decl -> function_declaration .)
    IF              reduce using rule 6 (program_level_decl -> function_declaration .)
    WHILE           reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACE          reduce using rule 6 (program_level_decl -> function_declaration .)
    IDENTIFIER      reduce using rule 6 (program_level_decl -> function_declaration .)
    E_CONST         reduce using rule 6 (program_level_decl -> function_declaration .)
    PI_CONST        reduce using rule 6 (program_level_decl -> function_declaration .)
    RAND            reduce using rule 6 (program_level_decl -> function_declaration .)
    LOG             reduce using rule 6 (program_level_decl -> function_declaration .)
    EXP             reduce using rule 6 (program_level_decl -> function_declaration .)
    COS             reduce using rule 6 (program_level_decl -> function_declaration .)
    SIN             reduce using rule 6 (program_level_decl -> function_declaration .)
    SQRT            reduce using rule 6 (program_level_decl -> function_declaration .)
    FALSE           reduce using rule 6 (program_level_decl -> function_declaration .)
    TRUE            reduce using rule 6 (program_level_decl -> function_declaration .)
    NEW             reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACKET        reduce using rule 6 (program_level_decl -> function_declaration .)
    PRINT           reduce using rule 6 (program_level_decl -> function_declaration .)
    RANGE           reduce using rule 6 (program_level_decl -> function_declaration .)
    PLUS            reduce using rule 6 (program_level_decl -> function_declaration .)
    MINUS           reduce using rule 6 (program_level_decl -> function_declaration .)
    $end            reduce using rule 6 (program_level_decl -> function_declaration .)


state 8

    (7) program_level_decl -> type_declaration .
    PROTOCOL        reduce using rule 7 (program_level_decl -> type_declaration .)
    FUNCTION        reduce using rule 7 (program_level_decl -> type_declaration .)
    TYPE            reduce using rule 7 (program_level_decl -> type_declaration .)
    LPAREN          reduce using rule 7 (program_level_decl -> type_declaration .)
    LET             reduce using rule 7 (program_level_decl -> type_declaration .)
    NUMBER          reduce using rule 7 (program_level_decl -> type_declaration .)
    STRING          reduce using rule 7 (program_level_decl -> type_declaration .)
    FOR             reduce using rule 7 (program_level_decl -> type_declaration .)
    IF              reduce using rule 7 (program_level_decl -> type_declaration .)
    WHILE           reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACE          reduce using rule 7 (program_level_decl -> type_declaration .)
    IDENTIFIER      reduce using rule 7 (program_level_decl -> type_declaration .)
    E_CONST         reduce using rule 7 (program_level_decl -> type_declaration .)
    PI_CONST        reduce using rule 7 (program_level_decl -> type_declaration .)
    RAND            reduce using rule 7 (program_level_decl -> type_declaration .)
    LOG             reduce using rule 7 (program_level_decl -> type_declaration .)
    EXP             reduce using rule 7 (program_level_decl -> type_declaration .)
    COS             reduce using rule 7 (program_level_decl -> type_declaration .)
    SIN             reduce using rule 7 (program_level_decl -> type_declaration .)
    SQRT            reduce using rule 7 (program_level_decl -> type_declaration .)
    FALSE           reduce using rule 7 (program_level_decl -> type_declaration .)
    TRUE            reduce using rule 7 (program_level_decl -> type_declaration .)
    NEW             reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACKET        reduce using rule 7 (program_level_decl -> type_declaration .)
    PRINT           reduce using rule 7 (program_level_decl -> type_declaration .)
    RANGE           reduce using rule 7 (program_level_decl -> type_declaration .)
    PLUS            reduce using rule 7 (program_level_decl -> type_declaration .)
    MINUS           reduce using rule 7 (program_level_decl -> type_declaration .)
    $end            reduce using rule 7 (program_level_decl -> type_declaration .)


state 9

    (8) inst_list -> inst . SEMICOLON inst_list
    (9) inst_list -> inst . SEMICOLON
    (10) inst_list -> inst .
    SEMICOLON       shift and go to state 66
    $end            reduce using rule 10 (inst_list -> inst .)
    RBRACE          reduce using rule 10 (inst_list -> inst .)


state 10

    (157) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (158) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (159) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body SEMICOLON
    (160) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 67


state 11

    (150) var_use -> IDENTIFIER .
    (153) var_method -> IDENTIFIER . DOT function_call
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 150 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 150 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 150 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 150 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 150 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 150 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 150 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 150 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 150 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 150 (var_use -> IDENTIFIER .)
    $end            reduce using rule 150 (var_use -> IDENTIFIER .)
    RBRACE          reduce using rule 150 (var_use -> IDENTIFIER .)
    OR              reduce using rule 150 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 150 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 150 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 150 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 150 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 150 (var_use -> IDENTIFIER .)
    AS              reduce using rule 150 (var_use -> IDENTIFIER .)
    IN              reduce using rule 150 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 150 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 150 (var_use -> IDENTIFIER .)
    AND             reduce using rule 150 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 68
    LPAREN          shift and go to state 69
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70

state 12

    (66) function_declaration -> FUNCTION . IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration
    (67) function_declaration -> FUNCTION . IDENTIFIER parameters type_anotation function_inline_declaration
    (68) function_declaration -> FUNCTION . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON
    (69) function_declaration -> FUNCTION . IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON
    (70) function_declaration -> FUNCTION . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (71) function_declaration -> FUNCTION . IDENTIFIER parameters type_anotation function_full_declaration
    (72) function_declaration -> FUNCTION . IDENTIFIER LPAREN RPAREN function_inline_declaration
    (73) function_declaration -> FUNCTION . IDENTIFIER parameters function_inline_declaration
    (74) function_declaration -> FUNCTION . IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON
    (75) function_declaration -> FUNCTION . IDENTIFIER parameters function_full_declaration SEMICOLON
    (76) function_declaration -> FUNCTION . IDENTIFIER LPAREN RPAREN function_full_declaration
    (77) function_declaration -> FUNCTION . IDENTIFIER parameters function_full_declaration
    IDENTIFIER      shift and go to state 72


state 13

    (11) inst -> LPAREN . var_dec RPAREN
    (35) expression -> LPAREN . var_asign RPAREN
    (52) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 26
    IDENTIFIER      shift and go to state 78
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 73
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    var_dec                        shift and go to state 74
    var_asign                      shift and go to state 75
    aritmetic_operation            shift and go to state 76
    var_use                        shift and go to state 27
    term                           shift and go to state 37
    atom                           shift and go to state 77
    var_attr                       shift and go to state 46
    factor                         shift and go to state 60
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    base_exponent                  shift and go to state 63
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 14

    (111) type_declaration -> TYPE . IDENTIFIER inherits_type decl_body SEMICOLON
    (112) type_declaration -> TYPE . IDENTIFIER inherits_type decl_body
    (113) type_declaration -> TYPE . IDENTIFIER decl_body SEMICOLON
    (114) type_declaration -> TYPE . IDENTIFIER decl_body
    (115) type_declaration -> TYPE . IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (116) type_declaration -> TYPE . IDENTIFIER parameters inherits_type decl_body
    (117) type_declaration -> TYPE . IDENTIFIER parameters decl_body SEMICOLON
    (118) type_declaration -> TYPE . IDENTIFIER parameters decl_body
    IDENTIFIER      shift and go to state 79


state 15

    (34) expression -> var_dec .
    SEMICOLON       reduce using rule 34 (expression -> var_dec .)
    $end            reduce using rule 34 (expression -> var_dec .)
    RBRACE          reduce using rule 34 (expression -> var_dec .)
    OR              reduce using rule 34 (expression -> var_dec .)
    SINCETHAT       reduce using rule 34 (expression -> var_dec .)
    COMMA           reduce using rule 34 (expression -> var_dec .)
    RBRACKET        reduce using rule 34 (expression -> var_dec .)
    RPAREN          reduce using rule 34 (expression -> var_dec .)
    NOT_EQUAL       reduce using rule 34 (expression -> var_dec .)
    EQUAL           reduce using rule 34 (expression -> var_dec .)
    LESS_EQUAL      reduce using rule 34 (expression -> var_dec .)
    GREATER_EQUAL   reduce using rule 34 (expression -> var_dec .)
    LESS_THAN       reduce using rule 34 (expression -> var_dec .)
    GREATER_THAN    reduce using rule 34 (expression -> var_dec .)
    AS              reduce using rule 34 (expression -> var_dec .)
    IN              reduce using rule 34 (expression -> var_dec .)
    ELSE            reduce using rule 34 (expression -> var_dec .)
    ELIF            reduce using rule 34 (expression -> var_dec .)
    AND             reduce using rule 34 (expression -> var_dec .)


state 16

    (12) inst -> expression .
    SEMICOLON       reduce using rule 12 (inst -> expression .)
    $end            reduce using rule 12 (inst -> expression .)
    RBRACE          reduce using rule 12 (inst -> expression .)
    AS              reduce using rule 12 (inst -> expression .)
    COMMA           reduce using rule 12 (inst -> expression .)
    IN              reduce using rule 12 (inst -> expression .)


state 17

    (13) inst -> flux_control .
    SEMICOLON       reduce using rule 13 (inst -> flux_control .)
    $end            reduce using rule 13 (inst -> flux_control .)
    RBRACE          reduce using rule 13 (inst -> flux_control .)
    AS              reduce using rule 13 (inst -> flux_control .)
    COMMA           reduce using rule 13 (inst -> flux_control .)
    IN              reduce using rule 13 (inst -> flux_control .)


state 18

    (14) inst -> scope_list .
    SEMICOLON       reduce using rule 14 (inst -> scope_list .)
    $end            reduce using rule 14 (inst -> scope_list .)
    RBRACE          reduce using rule 14 (inst -> scope_list .)
    AS              reduce using rule 14 (inst -> scope_list .)
    COMMA           reduce using rule 14 (inst -> scope_list .)
    IN              reduce using rule 14 (inst -> scope_list .)


state 19

    (36) expression -> var_asign .
    SEMICOLON       reduce using rule 36 (expression -> var_asign .)
    $end            reduce using rule 36 (expression -> var_asign .)
    RBRACE          reduce using rule 36 (expression -> var_asign .)
    OR              reduce using rule 36 (expression -> var_asign .)
    SINCETHAT       reduce using rule 36 (expression -> var_asign .)
    COMMA           reduce using rule 36 (expression -> var_asign .)
    RBRACKET        reduce using rule 36 (expression -> var_asign .)
    RPAREN          reduce using rule 36 (expression -> var_asign .)
    NOT_EQUAL       reduce using rule 36 (expression -> var_asign .)
    EQUAL           reduce using rule 36 (expression -> var_asign .)
    LESS_EQUAL      reduce using rule 36 (expression -> var_asign .)
    GREATER_EQUAL   reduce using rule 36 (expression -> var_asign .)
    LESS_THAN       reduce using rule 36 (expression -> var_asign .)
    GREATER_THAN    reduce using rule 36 (expression -> var_asign .)
    AS              reduce using rule 36 (expression -> var_asign .)
    IN              reduce using rule 36 (expression -> var_asign .)
    ELSE            reduce using rule 36 (expression -> var_asign .)
    ELIF            reduce using rule 36 (expression -> var_asign .)
    AND             reduce using rule 36 (expression -> var_asign .)


state 20

    (37) expression -> atom . ESPACEDCONCAT expression
    (38) expression -> atom . CONCAT expression
    (148) var_use -> atom . LBRACKET expression RBRACKET
    (25) identifier -> atom .
    ESPACEDCONCAT   shift and go to state 80
    CONCAT          shift and go to state 81
    LBRACKET        shift and go to state 82
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    SEMICOLON       reduce using rule 25 (identifier -> atom .)
    $end            reduce using rule 25 (identifier -> atom .)
    RBRACE          reduce using rule 25 (identifier -> atom .)
    OR              reduce using rule 25 (identifier -> atom .)
    SINCETHAT       reduce using rule 25 (identifier -> atom .)
    COMMA           reduce using rule 25 (identifier -> atom .)
    RBRACKET        reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 25 (identifier -> atom .)
    EQUAL           reduce using rule 25 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 25 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> atom .)
    LESS_THAN       reduce using rule 25 (identifier -> atom .)
    GREATER_THAN    reduce using rule 25 (identifier -> atom .)
    AS              reduce using rule 25 (identifier -> atom .)
    IN              reduce using rule 25 (identifier -> atom .)
    ELSE            reduce using rule 25 (identifier -> atom .)
    ELIF            reduce using rule 25 (identifier -> atom .)
    AND             reduce using rule 25 (identifier -> atom .)


state 21

    (39) expression -> aritmetic_operation .
    SEMICOLON       reduce using rule 39 (expression -> aritmetic_operation .)
    $end            reduce using rule 39 (expression -> aritmetic_operation .)
    RBRACE          reduce using rule 39 (expression -> aritmetic_operation .)
    OR              reduce using rule 39 (expression -> aritmetic_operation .)
    SINCETHAT       reduce using rule 39 (expression -> aritmetic_operation .)
    COMMA           reduce using rule 39 (expression -> aritmetic_operation .)
    RBRACKET        reduce using rule 39 (expression -> aritmetic_operation .)
    RPAREN          reduce using rule 39 (expression -> aritmetic_operation .)
    NOT_EQUAL       reduce using rule 39 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 39 (expression -> aritmetic_operation .)
    AS              reduce using rule 39 (expression -> aritmetic_operation .)
    IN              reduce using rule 39 (expression -> aritmetic_operation .)
    ELSE            reduce using rule 39 (expression -> aritmetic_operation .)
    ELIF            reduce using rule 39 (expression -> aritmetic_operation .)
    AND             reduce using rule 39 (expression -> aritmetic_operation .)


state 22

    (154) flux_control -> for_loop .
    SEMICOLON       reduce using rule 154 (flux_control -> for_loop .)
    $end            reduce using rule 154 (flux_control -> for_loop .)
    RBRACE          reduce using rule 154 (flux_control -> for_loop .)
    OR              reduce using rule 154 (flux_control -> for_loop .)
    SINCETHAT       reduce using rule 154 (flux_control -> for_loop .)
    COMMA           reduce using rule 154 (flux_control -> for_loop .)
    RBRACKET        reduce using rule 154 (flux_control -> for_loop .)
    RPAREN          reduce using rule 154 (flux_control -> for_loop .)
    NOT_EQUAL       reduce using rule 154 (flux_control -> for_loop .)
    EQUAL           reduce using rule 154 (flux_control -> for_loop .)
    LESS_EQUAL      reduce using rule 154 (flux_control -> for_loop .)
    GREATER_EQUAL   reduce using rule 154 (flux_control -> for_loop .)
    LESS_THAN       reduce using rule 154 (flux_control -> for_loop .)
    GREATER_THAN    reduce using rule 154 (flux_control -> for_loop .)
    AS              reduce using rule 154 (flux_control -> for_loop .)
    IN              reduce using rule 154 (flux_control -> for_loop .)
    ELSE            reduce using rule 154 (flux_control -> for_loop .)
    ELIF            reduce using rule 154 (flux_control -> for_loop .)
    AND             reduce using rule 154 (flux_control -> for_loop .)


state 23

    (155) flux_control -> conditional .
    SEMICOLON       reduce using rule 155 (flux_control -> conditional .)
    $end            reduce using rule 155 (flux_control -> conditional .)
    RBRACE          reduce using rule 155 (flux_control -> conditional .)
    OR              reduce using rule 155 (flux_control -> conditional .)
    SINCETHAT       reduce using rule 155 (flux_control -> conditional .)
    COMMA           reduce using rule 155 (flux_control -> conditional .)
    RBRACKET        reduce using rule 155 (flux_control -> conditional .)
    RPAREN          reduce using rule 155 (flux_control -> conditional .)
    NOT_EQUAL       reduce using rule 155 (flux_control -> conditional .)
    EQUAL           reduce using rule 155 (flux_control -> conditional .)
    LESS_EQUAL      reduce using rule 155 (flux_control -> conditional .)
    GREATER_EQUAL   reduce using rule 155 (flux_control -> conditional .)
    LESS_THAN       reduce using rule 155 (flux_control -> conditional .)
    GREATER_THAN    reduce using rule 155 (flux_control -> conditional .)
    AS              reduce using rule 155 (flux_control -> conditional .)
    IN              reduce using rule 155 (flux_control -> conditional .)
    ELSE            reduce using rule 155 (flux_control -> conditional .)
    ELIF            reduce using rule 155 (flux_control -> conditional .)
    AND             reduce using rule 155 (flux_control -> conditional .)


state 24

    (156) flux_control -> while_loop .
    SEMICOLON       reduce using rule 156 (flux_control -> while_loop .)
    $end            reduce using rule 156 (flux_control -> while_loop .)
    RBRACE          reduce using rule 156 (flux_control -> while_loop .)
    OR              reduce using rule 156 (flux_control -> while_loop .)
    SINCETHAT       reduce using rule 156 (flux_control -> while_loop .)
    COMMA           reduce using rule 156 (flux_control -> while_loop .)
    RBRACKET        reduce using rule 156 (flux_control -> while_loop .)
    RPAREN          reduce using rule 156 (flux_control -> while_loop .)
    NOT_EQUAL       reduce using rule 156 (flux_control -> while_loop .)
    EQUAL           reduce using rule 156 (flux_control -> while_loop .)
    LESS_EQUAL      reduce using rule 156 (flux_control -> while_loop .)
    GREATER_EQUAL   reduce using rule 156 (flux_control -> while_loop .)
    LESS_THAN       reduce using rule 156 (flux_control -> while_loop .)
    GREATER_THAN    reduce using rule 156 (flux_control -> while_loop .)
    AS              reduce using rule 156 (flux_control -> while_loop .)
    IN              reduce using rule 156 (flux_control -> while_loop .)
    ELSE            reduce using rule 156 (flux_control -> while_loop .)
    ELIF            reduce using rule 156 (flux_control -> while_loop .)
    AND             reduce using rule 156 (flux_control -> while_loop .)


state 25

    (30) scope_list -> scope . scope_list
    (31) scope_list -> scope .
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    SEMICOLON       reduce using rule 31 (scope_list -> scope .)
    $end            reduce using rule 31 (scope_list -> scope .)
    RBRACE          reduce using rule 31 (scope_list -> scope .)
    AS              reduce using rule 31 (scope_list -> scope .)
    COMMA           reduce using rule 31 (scope_list -> scope .)
    IN              reduce using rule 31 (scope_list -> scope .)
    ELSE            reduce using rule 31 (scope_list -> scope .)
    ELIF            reduce using rule 31 (scope_list -> scope .)
    LBRACE          shift and go to state 44

    scope                          shift and go to state 25
    scope_list                     shift and go to state 83

state 26

    (15) var_dec -> LET . var_init_list IN var_decl_expr
    (20) var_init_list -> . var_init COMMA var_init_list
    (21) var_init_list -> . var_init
    (22) var_init -> . identifier ASSIGN inst type_downcast
    (23) var_init -> . identifier ASSIGN inst
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    var_init_list                  shift and go to state 84
    var_init                       shift and go to state 85
    identifier                     shift and go to state 86
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 27

    (64) var_asign -> var_use . ASSIGN expression
    (65) var_asign -> var_use . DEST_ASSIGN expression
    (62) atom -> var_use .
    ASSIGN          shift and go to state 90
    DEST_ASSIGN     shift and go to state 91
    ESPACEDCONCAT   reduce using rule 62 (atom -> var_use .)
    CONCAT          reduce using rule 62 (atom -> var_use .)
    LBRACKET        reduce using rule 62 (atom -> var_use .)
    MODULE          reduce using rule 62 (atom -> var_use .)
    DIVIDE          reduce using rule 62 (atom -> var_use .)
    MULTIPLY        reduce using rule 62 (atom -> var_use .)
    ASTERPOWER      reduce using rule 62 (atom -> var_use .)
    POWER           reduce using rule 62 (atom -> var_use .)
    MINUS           reduce using rule 62 (atom -> var_use .)
    PLUS            reduce using rule 62 (atom -> var_use .)
    SEMICOLON       reduce using rule 62 (atom -> var_use .)
    $end            reduce using rule 62 (atom -> var_use .)
    RPAREN          reduce using rule 62 (atom -> var_use .)
    RBRACE          reduce using rule 62 (atom -> var_use .)
    OR              reduce using rule 62 (atom -> var_use .)
    SINCETHAT       reduce using rule 62 (atom -> var_use .)
    COMMA           reduce using rule 62 (atom -> var_use .)
    RBRACKET        reduce using rule 62 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 62 (atom -> var_use .)
    EQUAL           reduce using rule 62 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 62 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 62 (atom -> var_use .)
    LESS_THAN       reduce using rule 62 (atom -> var_use .)
    GREATER_THAN    reduce using rule 62 (atom -> var_use .)
    AS              reduce using rule 62 (atom -> var_use .)
    IN              reduce using rule 62 (atom -> var_use .)
    ELSE            reduce using rule 62 (atom -> var_use .)
    ELIF            reduce using rule 62 (atom -> var_use .)
    AND             reduce using rule 62 (atom -> var_use .)


state 28

    (54) atom -> NUMBER .
    ESPACEDCONCAT   reduce using rule 54 (atom -> NUMBER .)
    CONCAT          reduce using rule 54 (atom -> NUMBER .)
    LBRACKET        reduce using rule 54 (atom -> NUMBER .)
    MODULE          reduce using rule 54 (atom -> NUMBER .)
    DIVIDE          reduce using rule 54 (atom -> NUMBER .)
    MULTIPLY        reduce using rule 54 (atom -> NUMBER .)
    ASTERPOWER      reduce using rule 54 (atom -> NUMBER .)
    POWER           reduce using rule 54 (atom -> NUMBER .)
    MINUS           reduce using rule 54 (atom -> NUMBER .)
    PLUS            reduce using rule 54 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 54 (atom -> NUMBER .)
    $end            reduce using rule 54 (atom -> NUMBER .)
    RPAREN          reduce using rule 54 (atom -> NUMBER .)
    ASSIGN          reduce using rule 54 (atom -> NUMBER .)
    RBRACE          reduce using rule 54 (atom -> NUMBER .)
    OR              reduce using rule 54 (atom -> NUMBER .)
    SINCETHAT       reduce using rule 54 (atom -> NUMBER .)
    COMMA           reduce using rule 54 (atom -> NUMBER .)
    RBRACKET        reduce using rule 54 (atom -> NUMBER .)
    NOT_EQUAL       reduce using rule 54 (atom -> NUMBER .)
    EQUAL           reduce using rule 54 (atom -> NUMBER .)
    LESS_EQUAL      reduce using rule 54 (atom -> NUMBER .)
    GREATER_EQUAL   reduce using rule 54 (atom -> NUMBER .)
    LESS_THAN       reduce using rule 54 (atom -> NUMBER .)
    GREATER_THAN    reduce using rule 54 (atom -> NUMBER .)
    AS              reduce using rule 54 (atom -> NUMBER .)
    IN              reduce using rule 54 (atom -> NUMBER .)
    ELSE            reduce using rule 54 (atom -> NUMBER .)
    ELIF            reduce using rule 54 (atom -> NUMBER .)
    AND             reduce using rule 54 (atom -> NUMBER .)


state 29

    (55) atom -> STRING .
    ESPACEDCONCAT   reduce using rule 55 (atom -> STRING .)
    CONCAT          reduce using rule 55 (atom -> STRING .)
    LBRACKET        reduce using rule 55 (atom -> STRING .)
    MODULE          reduce using rule 55 (atom -> STRING .)
    DIVIDE          reduce using rule 55 (atom -> STRING .)
    MULTIPLY        reduce using rule 55 (atom -> STRING .)
    ASTERPOWER      reduce using rule 55 (atom -> STRING .)
    POWER           reduce using rule 55 (atom -> STRING .)
    MINUS           reduce using rule 55 (atom -> STRING .)
    PLUS            reduce using rule 55 (atom -> STRING .)
    SEMICOLON       reduce using rule 55 (atom -> STRING .)
    $end            reduce using rule 55 (atom -> STRING .)
    RPAREN          reduce using rule 55 (atom -> STRING .)
    ASSIGN          reduce using rule 55 (atom -> STRING .)
    RBRACE          reduce using rule 55 (atom -> STRING .)
    OR              reduce using rule 55 (atom -> STRING .)
    SINCETHAT       reduce using rule 55 (atom -> STRING .)
    COMMA           reduce using rule 55 (atom -> STRING .)
    RBRACKET        reduce using rule 55 (atom -> STRING .)
    NOT_EQUAL       reduce using rule 55 (atom -> STRING .)
    EQUAL           reduce using rule 55 (atom -> STRING .)
    LESS_EQUAL      reduce using rule 55 (atom -> STRING .)
    GREATER_EQUAL   reduce using rule 55 (atom -> STRING .)
    LESS_THAN       reduce using rule 55 (atom -> STRING .)
    GREATER_THAN    reduce using rule 55 (atom -> STRING .)
    AS              reduce using rule 55 (atom -> STRING .)
    IN              reduce using rule 55 (atom -> STRING .)
    ELSE            reduce using rule 55 (atom -> STRING .)
    ELIF            reduce using rule 55 (atom -> STRING .)
    AND             reduce using rule 55 (atom -> STRING .)


state 30

    (56) atom -> build_in_consts .
    ESPACEDCONCAT   reduce using rule 56 (atom -> build_in_consts .)
    CONCAT          reduce using rule 56 (atom -> build_in_consts .)
    LBRACKET        reduce using rule 56 (atom -> build_in_consts .)
    MODULE          reduce using rule 56 (atom -> build_in_consts .)
    DIVIDE          reduce using rule 56 (atom -> build_in_consts .)
    MULTIPLY        reduce using rule 56 (atom -> build_in_consts .)
    ASTERPOWER      reduce using rule 56 (atom -> build_in_consts .)
    POWER           reduce using rule 56 (atom -> build_in_consts .)
    MINUS           reduce using rule 56 (atom -> build_in_consts .)
    PLUS            reduce using rule 56 (atom -> build_in_consts .)
    SEMICOLON       reduce using rule 56 (atom -> build_in_consts .)
    $end            reduce using rule 56 (atom -> build_in_consts .)
    RPAREN          reduce using rule 56 (atom -> build_in_consts .)
    ASSIGN          reduce using rule 56 (atom -> build_in_consts .)
    RBRACE          reduce using rule 56 (atom -> build_in_consts .)
    OR              reduce using rule 56 (atom -> build_in_consts .)
    SINCETHAT       reduce using rule 56 (atom -> build_in_consts .)
    COMMA           reduce using rule 56 (atom -> build_in_consts .)
    RBRACKET        reduce using rule 56 (atom -> build_in_consts .)
    NOT_EQUAL       reduce using rule 56 (atom -> build_in_consts .)
    EQUAL           reduce using rule 56 (atom -> build_in_consts .)
    LESS_EQUAL      reduce using rule 56 (atom -> build_in_consts .)
    GREATER_EQUAL   reduce using rule 56 (atom -> build_in_consts .)
    LESS_THAN       reduce using rule 56 (atom -> build_in_consts .)
    GREATER_THAN    reduce using rule 56 (atom -> build_in_consts .)
    AS              reduce using rule 56 (atom -> build_in_consts .)
    IN              reduce using rule 56 (atom -> build_in_consts .)
    ELSE            reduce using rule 56 (atom -> build_in_consts .)
    ELIF            reduce using rule 56 (atom -> build_in_consts .)
    AND             reduce using rule 56 (atom -> build_in_consts .)


state 31

    (57) atom -> build_in_functions .
    ESPACEDCONCAT   reduce using rule 57 (atom -> build_in_functions .)
    CONCAT          reduce using rule 57 (atom -> build_in_functions .)
    LBRACKET        reduce using rule 57 (atom -> build_in_functions .)
    MODULE          reduce using rule 57 (atom -> build_in_functions .)
    DIVIDE          reduce using rule 57 (atom -> build_in_functions .)
    MULTIPLY        reduce using rule 57 (atom -> build_in_functions .)
    ASTERPOWER      reduce using rule 57 (atom -> build_in_functions .)
    POWER           reduce using rule 57 (atom -> build_in_functions .)
    MINUS           reduce using rule 57 (atom -> build_in_functions .)
    PLUS            reduce using rule 57 (atom -> build_in_functions .)
    SEMICOLON       reduce using rule 57 (atom -> build_in_functions .)
    $end            reduce using rule 57 (atom -> build_in_functions .)
    RPAREN          reduce using rule 57 (atom -> build_in_functions .)
    ASSIGN          reduce using rule 57 (atom -> build_in_functions .)
    RBRACE          reduce using rule 57 (atom -> build_in_functions .)
    OR              reduce using rule 57 (atom -> build_in_functions .)
    SINCETHAT       reduce using rule 57 (atom -> build_in_functions .)
    COMMA           reduce using rule 57 (atom -> build_in_functions .)
    RBRACKET        reduce using rule 57 (atom -> build_in_functions .)
    NOT_EQUAL       reduce using rule 57 (atom -> build_in_functions .)
    EQUAL           reduce using rule 57 (atom -> build_in_functions .)
    LESS_EQUAL      reduce using rule 57 (atom -> build_in_functions .)
    GREATER_EQUAL   reduce using rule 57 (atom -> build_in_functions .)
    LESS_THAN       reduce using rule 57 (atom -> build_in_functions .)
    GREATER_THAN    reduce using rule 57 (atom -> build_in_functions .)
    AS              reduce using rule 57 (atom -> build_in_functions .)
    IN              reduce using rule 57 (atom -> build_in_functions .)
    ELSE            reduce using rule 57 (atom -> build_in_functions .)
    ELIF            reduce using rule 57 (atom -> build_in_functions .)
    AND             reduce using rule 57 (atom -> build_in_functions .)


state 32

    (58) atom -> boolean_value .
    ESPACEDCONCAT   reduce using rule 58 (atom -> boolean_value .)
    CONCAT          reduce using rule 58 (atom -> boolean_value .)
    LBRACKET        reduce using rule 58 (atom -> boolean_value .)
    MODULE          reduce using rule 58 (atom -> boolean_value .)
    DIVIDE          reduce using rule 58 (atom -> boolean_value .)
    MULTIPLY        reduce using rule 58 (atom -> boolean_value .)
    ASTERPOWER      reduce using rule 58 (atom -> boolean_value .)
    POWER           reduce using rule 58 (atom -> boolean_value .)
    MINUS           reduce using rule 58 (atom -> boolean_value .)
    PLUS            reduce using rule 58 (atom -> boolean_value .)
    SEMICOLON       reduce using rule 58 (atom -> boolean_value .)
    $end            reduce using rule 58 (atom -> boolean_value .)
    RPAREN          reduce using rule 58 (atom -> boolean_value .)
    ASSIGN          reduce using rule 58 (atom -> boolean_value .)
    RBRACE          reduce using rule 58 (atom -> boolean_value .)
    OR              reduce using rule 58 (atom -> boolean_value .)
    SINCETHAT       reduce using rule 58 (atom -> boolean_value .)
    COMMA           reduce using rule 58 (atom -> boolean_value .)
    RBRACKET        reduce using rule 58 (atom -> boolean_value .)
    NOT_EQUAL       reduce using rule 58 (atom -> boolean_value .)
    EQUAL           reduce using rule 58 (atom -> boolean_value .)
    LESS_EQUAL      reduce using rule 58 (atom -> boolean_value .)
    GREATER_EQUAL   reduce using rule 58 (atom -> boolean_value .)
    LESS_THAN       reduce using rule 58 (atom -> boolean_value .)
    GREATER_THAN    reduce using rule 58 (atom -> boolean_value .)
    AS              reduce using rule 58 (atom -> boolean_value .)
    IN              reduce using rule 58 (atom -> boolean_value .)
    ELSE            reduce using rule 58 (atom -> boolean_value .)
    ELIF            reduce using rule 58 (atom -> boolean_value .)
    AND             reduce using rule 58 (atom -> boolean_value .)


state 33

    (59) atom -> type_instanciation .
    ESPACEDCONCAT   reduce using rule 59 (atom -> type_instanciation .)
    CONCAT          reduce using rule 59 (atom -> type_instanciation .)
    LBRACKET        reduce using rule 59 (atom -> type_instanciation .)
    MODULE          reduce using rule 59 (atom -> type_instanciation .)
    DIVIDE          reduce using rule 59 (atom -> type_instanciation .)
    MULTIPLY        reduce using rule 59 (atom -> type_instanciation .)
    ASTERPOWER      reduce using rule 59 (atom -> type_instanciation .)
    POWER           reduce using rule 59 (atom -> type_instanciation .)
    MINUS           reduce using rule 59 (atom -> type_instanciation .)
    PLUS            reduce using rule 59 (atom -> type_instanciation .)
    SEMICOLON       reduce using rule 59 (atom -> type_instanciation .)
    $end            reduce using rule 59 (atom -> type_instanciation .)
    RPAREN          reduce using rule 59 (atom -> type_instanciation .)
    ASSIGN          reduce using rule 59 (atom -> type_instanciation .)
    RBRACE          reduce using rule 59 (atom -> type_instanciation .)
    OR              reduce using rule 59 (atom -> type_instanciation .)
    SINCETHAT       reduce using rule 59 (atom -> type_instanciation .)
    COMMA           reduce using rule 59 (atom -> type_instanciation .)
    RBRACKET        reduce using rule 59 (atom -> type_instanciation .)
    NOT_EQUAL       reduce using rule 59 (atom -> type_instanciation .)
    EQUAL           reduce using rule 59 (atom -> type_instanciation .)
    LESS_EQUAL      reduce using rule 59 (atom -> type_instanciation .)
    GREATER_EQUAL   reduce using rule 59 (atom -> type_instanciation .)
    LESS_THAN       reduce using rule 59 (atom -> type_instanciation .)
    GREATER_THAN    reduce using rule 59 (atom -> type_instanciation .)
    AS              reduce using rule 59 (atom -> type_instanciation .)
    IN              reduce using rule 59 (atom -> type_instanciation .)
    ELSE            reduce using rule 59 (atom -> type_instanciation .)
    ELIF            reduce using rule 59 (atom -> type_instanciation .)
    AND             reduce using rule 59 (atom -> type_instanciation .)


state 34

    (60) atom -> var_method .
    ESPACEDCONCAT   reduce using rule 60 (atom -> var_method .)
    CONCAT          reduce using rule 60 (atom -> var_method .)
    LBRACKET        reduce using rule 60 (atom -> var_method .)
    MODULE          reduce using rule 60 (atom -> var_method .)
    DIVIDE          reduce using rule 60 (atom -> var_method .)
    MULTIPLY        reduce using rule 60 (atom -> var_method .)
    ASTERPOWER      reduce using rule 60 (atom -> var_method .)
    POWER           reduce using rule 60 (atom -> var_method .)
    MINUS           reduce using rule 60 (atom -> var_method .)
    PLUS            reduce using rule 60 (atom -> var_method .)
    SEMICOLON       reduce using rule 60 (atom -> var_method .)
    $end            reduce using rule 60 (atom -> var_method .)
    RPAREN          reduce using rule 60 (atom -> var_method .)
    ASSIGN          reduce using rule 60 (atom -> var_method .)
    RBRACE          reduce using rule 60 (atom -> var_method .)
    OR              reduce using rule 60 (atom -> var_method .)
    SINCETHAT       reduce using rule 60 (atom -> var_method .)
    COMMA           reduce using rule 60 (atom -> var_method .)
    RBRACKET        reduce using rule 60 (atom -> var_method .)
    NOT_EQUAL       reduce using rule 60 (atom -> var_method .)
    EQUAL           reduce using rule 60 (atom -> var_method .)
    LESS_EQUAL      reduce using rule 60 (atom -> var_method .)
    GREATER_EQUAL   reduce using rule 60 (atom -> var_method .)
    LESS_THAN       reduce using rule 60 (atom -> var_method .)
    GREATER_THAN    reduce using rule 60 (atom -> var_method .)
    AS              reduce using rule 60 (atom -> var_method .)
    IN              reduce using rule 60 (atom -> var_method .)
    ELSE            reduce using rule 60 (atom -> var_method .)
    ELIF            reduce using rule 60 (atom -> var_method .)
    AND             reduce using rule 60 (atom -> var_method .)


state 35

    (61) atom -> vector .
    ESPACEDCONCAT   reduce using rule 61 (atom -> vector .)
    CONCAT          reduce using rule 61 (atom -> vector .)
    LBRACKET        reduce using rule 61 (atom -> vector .)
    MODULE          reduce using rule 61 (atom -> vector .)
    DIVIDE          reduce using rule 61 (atom -> vector .)
    MULTIPLY        reduce using rule 61 (atom -> vector .)
    ASTERPOWER      reduce using rule 61 (atom -> vector .)
    POWER           reduce using rule 61 (atom -> vector .)
    MINUS           reduce using rule 61 (atom -> vector .)
    PLUS            reduce using rule 61 (atom -> vector .)
    SEMICOLON       reduce using rule 61 (atom -> vector .)
    $end            reduce using rule 61 (atom -> vector .)
    RPAREN          reduce using rule 61 (atom -> vector .)
    ASSIGN          reduce using rule 61 (atom -> vector .)
    RBRACE          reduce using rule 61 (atom -> vector .)
    OR              reduce using rule 61 (atom -> vector .)
    SINCETHAT       reduce using rule 61 (atom -> vector .)
    COMMA           reduce using rule 61 (atom -> vector .)
    RBRACKET        reduce using rule 61 (atom -> vector .)
    NOT_EQUAL       reduce using rule 61 (atom -> vector .)
    EQUAL           reduce using rule 61 (atom -> vector .)
    LESS_EQUAL      reduce using rule 61 (atom -> vector .)
    GREATER_EQUAL   reduce using rule 61 (atom -> vector .)
    LESS_THAN       reduce using rule 61 (atom -> vector .)
    GREATER_THAN    reduce using rule 61 (atom -> vector .)
    AS              reduce using rule 61 (atom -> vector .)
    IN              reduce using rule 61 (atom -> vector .)
    ELSE            reduce using rule 61 (atom -> vector .)
    ELIF            reduce using rule 61 (atom -> vector .)
    AND             reduce using rule 61 (atom -> vector .)


state 36

    (63) atom -> function_call .
    ESPACEDCONCAT   reduce using rule 63 (atom -> function_call .)
    CONCAT          reduce using rule 63 (atom -> function_call .)
    LBRACKET        reduce using rule 63 (atom -> function_call .)
    MODULE          reduce using rule 63 (atom -> function_call .)
    DIVIDE          reduce using rule 63 (atom -> function_call .)
    MULTIPLY        reduce using rule 63 (atom -> function_call .)
    ASTERPOWER      reduce using rule 63 (atom -> function_call .)
    POWER           reduce using rule 63 (atom -> function_call .)
    MINUS           reduce using rule 63 (atom -> function_call .)
    PLUS            reduce using rule 63 (atom -> function_call .)
    SEMICOLON       reduce using rule 63 (atom -> function_call .)
    $end            reduce using rule 63 (atom -> function_call .)
    RPAREN          reduce using rule 63 (atom -> function_call .)
    ASSIGN          reduce using rule 63 (atom -> function_call .)
    RBRACE          reduce using rule 63 (atom -> function_call .)
    OR              reduce using rule 63 (atom -> function_call .)
    SINCETHAT       reduce using rule 63 (atom -> function_call .)
    COMMA           reduce using rule 63 (atom -> function_call .)
    RBRACKET        reduce using rule 63 (atom -> function_call .)
    NOT_EQUAL       reduce using rule 63 (atom -> function_call .)
    EQUAL           reduce using rule 63 (atom -> function_call .)
    LESS_EQUAL      reduce using rule 63 (atom -> function_call .)
    GREATER_EQUAL   reduce using rule 63 (atom -> function_call .)
    LESS_THAN       reduce using rule 63 (atom -> function_call .)
    GREATER_THAN    reduce using rule 63 (atom -> function_call .)
    AS              reduce using rule 63 (atom -> function_call .)
    IN              reduce using rule 63 (atom -> function_call .)
    ELSE            reduce using rule 63 (atom -> function_call .)
    ELIF            reduce using rule 63 (atom -> function_call .)
    AND             reduce using rule 63 (atom -> function_call .)


state 37

    (40) aritmetic_operation -> term .
    (41) aritmetic_operation -> term . MINUS aritmetic_operation
    (42) aritmetic_operation -> term . PLUS aritmetic_operation
    SEMICOLON       reduce using rule 40 (aritmetic_operation -> term .)
    $end            reduce using rule 40 (aritmetic_operation -> term .)
    RPAREN          reduce using rule 40 (aritmetic_operation -> term .)
    RBRACE          reduce using rule 40 (aritmetic_operation -> term .)
    OR              reduce using rule 40 (aritmetic_operation -> term .)
    SINCETHAT       reduce using rule 40 (aritmetic_operation -> term .)
    COMMA           reduce using rule 40 (aritmetic_operation -> term .)
    RBRACKET        reduce using rule 40 (aritmetic_operation -> term .)
    NOT_EQUAL       reduce using rule 40 (aritmetic_operation -> term .)
    EQUAL           reduce using rule 40 (aritmetic_operation -> term .)
    LESS_EQUAL      reduce using rule 40 (aritmetic_operation -> term .)
    GREATER_EQUAL   reduce using rule 40 (aritmetic_operation -> term .)
    LESS_THAN       reduce using rule 40 (aritmetic_operation -> term .)
    GREATER_THAN    reduce using rule 40 (aritmetic_operation -> term .)
    AS              reduce using rule 40 (aritmetic_operation -> term .)
    IN              reduce using rule 40 (aritmetic_operation -> term .)
    ELSE            reduce using rule 40 (aritmetic_operation -> term .)
    ELIF            reduce using rule 40 (aritmetic_operation -> term .)
    AND             reduce using rule 40 (aritmetic_operation -> term .)
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93


state 38

    (48) factor -> MINUS . factor
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    factor                         shift and go to state 94
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 39

    (47) factor -> PLUS . factor
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    factor                         shift and go to state 95
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 40

    (94) for_loop -> FOR . LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> FOR . LPAREN identifier IN expression RPAREN scope
    LPAREN          shift and go to state 96


state 41

    (53) base_exponent -> identifier .
    MODULE          reduce using rule 53 (base_exponent -> identifier .)
    DIVIDE          reduce using rule 53 (base_exponent -> identifier .)
    MULTIPLY        reduce using rule 53 (base_exponent -> identifier .)
    ASTERPOWER      reduce using rule 53 (base_exponent -> identifier .)
    POWER           reduce using rule 53 (base_exponent -> identifier .)
    MINUS           reduce using rule 53 (base_exponent -> identifier .)
    PLUS            reduce using rule 53 (base_exponent -> identifier .)
    SEMICOLON       reduce using rule 53 (base_exponent -> identifier .)
    $end            reduce using rule 53 (base_exponent -> identifier .)
    RPAREN          reduce using rule 53 (base_exponent -> identifier .)
    RBRACE          reduce using rule 53 (base_exponent -> identifier .)
    OR              reduce using rule 53 (base_exponent -> identifier .)
    SINCETHAT       reduce using rule 53 (base_exponent -> identifier .)
    COMMA           reduce using rule 53 (base_exponent -> identifier .)
    RBRACKET        reduce using rule 53 (base_exponent -> identifier .)
    NOT_EQUAL       reduce using rule 53 (base_exponent -> identifier .)
    EQUAL           reduce using rule 53 (base_exponent -> identifier .)
    LESS_EQUAL      reduce using rule 53 (base_exponent -> identifier .)
    GREATER_EQUAL   reduce using rule 53 (base_exponent -> identifier .)
    LESS_THAN       reduce using rule 53 (base_exponent -> identifier .)
    GREATER_THAN    reduce using rule 53 (base_exponent -> identifier .)
    AS              reduce using rule 53 (base_exponent -> identifier .)
    IN              reduce using rule 53 (base_exponent -> identifier .)
    ELSE            reduce using rule 53 (base_exponent -> identifier .)
    ELIF            reduce using rule 53 (base_exponent -> identifier .)
    AND             reduce using rule 53 (base_exponent -> identifier .)


state 42

    (80) conditional -> IF . full_conditional
    (81) conditional -> IF . inline_conditional
    (83) full_conditional -> . LPAREN conditional_expression RPAREN scope_list else_elif_statement
    (82) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 99

    full_conditional               shift and go to state 97
    inline_conditional             shift and go to state 98

state 43

    (90) while_loop -> WHILE . LPAREN expression RPAREN expression
    (91) while_loop -> WHILE . LPAREN expression RPAREN scope
    (92) while_loop -> WHILE . LPAREN conditional_expression RPAREN expression
    (93) while_loop -> WHILE . LPAREN conditional_expression RPAREN scope
    LPAREN          shift and go to state 100


state 44

    (32) scope -> LBRACE . RBRACE
    (33) scope -> LBRACE . inst_list RBRACE
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RBRACE          shift and go to state 101
    LPAREN          shift and go to state 13
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    LBRACE          shift and go to state 44
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    inst_list                      shift and go to state 102
    inst                           shift and go to state 9
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    scope                          shift and go to state 25
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 45

    (166) vector -> LBRACKET . vector_decl RBRACKET
    (167) vector_decl -> . expression OR identifier IN expression
    (168) vector_decl -> . expression SINCETHAT identifier IN expression
    (169) vector_decl -> . arguments_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (146) argument -> . conditional
    (147) argument -> . expression
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    IF              shift and go to state 42
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    vector_decl                    shift and go to state 103
    expression                     shift and go to state 104
    identifier                     shift and go to state 41
    arguments_list                 shift and go to state 105
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    argument                       shift and go to state 107
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    conditional                    shift and go to state 108
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 46

    (149) var_use -> var_attr .
    ASSIGN          reduce using rule 149 (var_use -> var_attr .)
    DEST_ASSIGN     reduce using rule 149 (var_use -> var_attr .)
    ESPACEDCONCAT   reduce using rule 149 (var_use -> var_attr .)
    CONCAT          reduce using rule 149 (var_use -> var_attr .)
    LBRACKET        reduce using rule 149 (var_use -> var_attr .)
    MODULE          reduce using rule 149 (var_use -> var_attr .)
    DIVIDE          reduce using rule 149 (var_use -> var_attr .)
    MULTIPLY        reduce using rule 149 (var_use -> var_attr .)
    ASTERPOWER      reduce using rule 149 (var_use -> var_attr .)
    POWER           reduce using rule 149 (var_use -> var_attr .)
    MINUS           reduce using rule 149 (var_use -> var_attr .)
    PLUS            reduce using rule 149 (var_use -> var_attr .)
    SEMICOLON       reduce using rule 149 (var_use -> var_attr .)
    $end            reduce using rule 149 (var_use -> var_attr .)
    RPAREN          reduce using rule 149 (var_use -> var_attr .)
    RBRACE          reduce using rule 149 (var_use -> var_attr .)
    OR              reduce using rule 149 (var_use -> var_attr .)
    SINCETHAT       reduce using rule 149 (var_use -> var_attr .)
    COMMA           reduce using rule 149 (var_use -> var_attr .)
    RBRACKET        reduce using rule 149 (var_use -> var_attr .)
    NOT_EQUAL       reduce using rule 149 (var_use -> var_attr .)
    EQUAL           reduce using rule 149 (var_use -> var_attr .)
    LESS_EQUAL      reduce using rule 149 (var_use -> var_attr .)
    GREATER_EQUAL   reduce using rule 149 (var_use -> var_attr .)
    LESS_THAN       reduce using rule 149 (var_use -> var_attr .)
    GREATER_THAN    reduce using rule 149 (var_use -> var_attr .)
    AS              reduce using rule 149 (var_use -> var_attr .)
    IN              reduce using rule 149 (var_use -> var_attr .)
    ELSE            reduce using rule 149 (var_use -> var_attr .)
    ELIF            reduce using rule 149 (var_use -> var_attr .)
    AND             reduce using rule 149 (var_use -> var_attr .)


state 47

    (180) build_in_consts -> E_CONST .
    ESPACEDCONCAT   reduce using rule 180 (build_in_consts -> E_CONST .)
    CONCAT          reduce using rule 180 (build_in_consts -> E_CONST .)
    LBRACKET        reduce using rule 180 (build_in_consts -> E_CONST .)
    MODULE          reduce using rule 180 (build_in_consts -> E_CONST .)
    DIVIDE          reduce using rule 180 (build_in_consts -> E_CONST .)
    MULTIPLY        reduce using rule 180 (build_in_consts -> E_CONST .)
    ASTERPOWER      reduce using rule 180 (build_in_consts -> E_CONST .)
    POWER           reduce using rule 180 (build_in_consts -> E_CONST .)
    MINUS           reduce using rule 180 (build_in_consts -> E_CONST .)
    PLUS            reduce using rule 180 (build_in_consts -> E_CONST .)
    SEMICOLON       reduce using rule 180 (build_in_consts -> E_CONST .)
    $end            reduce using rule 180 (build_in_consts -> E_CONST .)
    RPAREN          reduce using rule 180 (build_in_consts -> E_CONST .)
    ASSIGN          reduce using rule 180 (build_in_consts -> E_CONST .)
    RBRACE          reduce using rule 180 (build_in_consts -> E_CONST .)
    OR              reduce using rule 180 (build_in_consts -> E_CONST .)
    SINCETHAT       reduce using rule 180 (build_in_consts -> E_CONST .)
    COMMA           reduce using rule 180 (build_in_consts -> E_CONST .)
    RBRACKET        reduce using rule 180 (build_in_consts -> E_CONST .)
    NOT_EQUAL       reduce using rule 180 (build_in_consts -> E_CONST .)
    EQUAL           reduce using rule 180 (build_in_consts -> E_CONST .)
    LESS_EQUAL      reduce using rule 180 (build_in_consts -> E_CONST .)
    GREATER_EQUAL   reduce using rule 180 (build_in_consts -> E_CONST .)
    LESS_THAN       reduce using rule 180 (build_in_consts -> E_CONST .)
    GREATER_THAN    reduce using rule 180 (build_in_consts -> E_CONST .)
    AS              reduce using rule 180 (build_in_consts -> E_CONST .)
    IN              reduce using rule 180 (build_in_consts -> E_CONST .)
    ELSE            reduce using rule 180 (build_in_consts -> E_CONST .)
    ELIF            reduce using rule 180 (build_in_consts -> E_CONST .)
    AND             reduce using rule 180 (build_in_consts -> E_CONST .)


state 48

    (181) build_in_consts -> PI_CONST .
    ESPACEDCONCAT   reduce using rule 181 (build_in_consts -> PI_CONST .)
    CONCAT          reduce using rule 181 (build_in_consts -> PI_CONST .)
    LBRACKET        reduce using rule 181 (build_in_consts -> PI_CONST .)
    MODULE          reduce using rule 181 (build_in_consts -> PI_CONST .)
    DIVIDE          reduce using rule 181 (build_in_consts -> PI_CONST .)
    MULTIPLY        reduce using rule 181 (build_in_consts -> PI_CONST .)
    ASTERPOWER      reduce using rule 181 (build_in_consts -> PI_CONST .)
    POWER           reduce using rule 181 (build_in_consts -> PI_CONST .)
    MINUS           reduce using rule 181 (build_in_consts -> PI_CONST .)
    PLUS            reduce using rule 181 (build_in_consts -> PI_CONST .)
    SEMICOLON       reduce using rule 181 (build_in_consts -> PI_CONST .)
    $end            reduce using rule 181 (build_in_consts -> PI_CONST .)
    RPAREN          reduce using rule 181 (build_in_consts -> PI_CONST .)
    ASSIGN          reduce using rule 181 (build_in_consts -> PI_CONST .)
    RBRACE          reduce using rule 181 (build_in_consts -> PI_CONST .)
    OR              reduce using rule 181 (build_in_consts -> PI_CONST .)
    SINCETHAT       reduce using rule 181 (build_in_consts -> PI_CONST .)
    COMMA           reduce using rule 181 (build_in_consts -> PI_CONST .)
    RBRACKET        reduce using rule 181 (build_in_consts -> PI_CONST .)
    NOT_EQUAL       reduce using rule 181 (build_in_consts -> PI_CONST .)
    EQUAL           reduce using rule 181 (build_in_consts -> PI_CONST .)
    LESS_EQUAL      reduce using rule 181 (build_in_consts -> PI_CONST .)
    GREATER_EQUAL   reduce using rule 181 (build_in_consts -> PI_CONST .)
    LESS_THAN       reduce using rule 181 (build_in_consts -> PI_CONST .)
    GREATER_THAN    reduce using rule 181 (build_in_consts -> PI_CONST .)
    AS              reduce using rule 181 (build_in_consts -> PI_CONST .)
    IN              reduce using rule 181 (build_in_consts -> PI_CONST .)
    ELSE            reduce using rule 181 (build_in_consts -> PI_CONST .)
    ELIF            reduce using rule 181 (build_in_consts -> PI_CONST .)
    AND             reduce using rule 181 (build_in_consts -> PI_CONST .)


state 49

    (172) build_in_functions -> RAND . LPAREN RPAREN
    LPAREN          shift and go to state 109


state 50

    (173) build_in_functions -> LOG . LPAREN argument COMMA argument RPAREN
    LPAREN          shift and go to state 110


state 51

    (174) build_in_functions -> EXP . LPAREN argument RPAREN
    LPAREN          shift and go to state 111


state 52

    (175) build_in_functions -> COS . LPAREN argument RPAREN
    LPAREN          shift and go to state 112


state 53

    (176) build_in_functions -> SIN . LPAREN argument RPAREN
    LPAREN          shift and go to state 113


state 54

    (177) build_in_functions -> SQRT . LPAREN argument RPAREN
    LPAREN          shift and go to state 114


state 55

    (178) build_in_functions -> build_in_print .
    ESPACEDCONCAT   reduce using rule 178 (build_in_functions -> build_in_print .)
    CONCAT          reduce using rule 178 (build_in_functions -> build_in_print .)
    LBRACKET        reduce using rule 178 (build_in_functions -> build_in_print .)
    MODULE          reduce using rule 178 (build_in_functions -> build_in_print .)
    DIVIDE          reduce using rule 178 (build_in_functions -> build_in_print .)
    MULTIPLY        reduce using rule 178 (build_in_functions -> build_in_print .)
    ASTERPOWER      reduce using rule 178 (build_in_functions -> build_in_print .)
    POWER           reduce using rule 178 (build_in_functions -> build_in_print .)
    MINUS           reduce using rule 178 (build_in_functions -> build_in_print .)
    PLUS            reduce using rule 178 (build_in_functions -> build_in_print .)
    SEMICOLON       reduce using rule 178 (build_in_functions -> build_in_print .)
    $end            reduce using rule 178 (build_in_functions -> build_in_print .)
    RPAREN          reduce using rule 178 (build_in_functions -> build_in_print .)
    ASSIGN          reduce using rule 178 (build_in_functions -> build_in_print .)
    RBRACE          reduce using rule 178 (build_in_functions -> build_in_print .)
    OR              reduce using rule 178 (build_in_functions -> build_in_print .)
    SINCETHAT       reduce using rule 178 (build_in_functions -> build_in_print .)
    COMMA           reduce using rule 178 (build_in_functions -> build_in_print .)
    RBRACKET        reduce using rule 178 (build_in_functions -> build_in_print .)
    NOT_EQUAL       reduce using rule 178 (build_in_functions -> build_in_print .)
    EQUAL           reduce using rule 178 (build_in_functions -> build_in_print .)
    LESS_EQUAL      reduce using rule 178 (build_in_functions -> build_in_print .)
    GREATER_EQUAL   reduce using rule 178 (build_in_functions -> build_in_print .)
    LESS_THAN       reduce using rule 178 (build_in_functions -> build_in_print .)
    GREATER_THAN    reduce using rule 178 (build_in_functions -> build_in_print .)
    AS              reduce using rule 178 (build_in_functions -> build_in_print .)
    IN              reduce using rule 178 (build_in_functions -> build_in_print .)
    ELSE            reduce using rule 178 (build_in_functions -> build_in_print .)
    ELIF            reduce using rule 178 (build_in_functions -> build_in_print .)
    AND             reduce using rule 178 (build_in_functions -> build_in_print .)


state 56

    (179) build_in_functions -> build_in_range .
    ESPACEDCONCAT   reduce using rule 179 (build_in_functions -> build_in_range .)
    CONCAT          reduce using rule 179 (build_in_functions -> build_in_range .)
    LBRACKET        reduce using rule 179 (build_in_functions -> build_in_range .)
    MODULE          reduce using rule 179 (build_in_functions -> build_in_range .)
    DIVIDE          reduce using rule 179 (build_in_functions -> build_in_range .)
    MULTIPLY        reduce using rule 179 (build_in_functions -> build_in_range .)
    ASTERPOWER      reduce using rule 179 (build_in_functions -> build_in_range .)
    POWER           reduce using rule 179 (build_in_functions -> build_in_range .)
    MINUS           reduce using rule 179 (build_in_functions -> build_in_range .)
    PLUS            reduce using rule 179 (build_in_functions -> build_in_range .)
    SEMICOLON       reduce using rule 179 (build_in_functions -> build_in_range .)
    $end            reduce using rule 179 (build_in_functions -> build_in_range .)
    RPAREN          reduce using rule 179 (build_in_functions -> build_in_range .)
    ASSIGN          reduce using rule 179 (build_in_functions -> build_in_range .)
    RBRACE          reduce using rule 179 (build_in_functions -> build_in_range .)
    OR              reduce using rule 179 (build_in_functions -> build_in_range .)
    SINCETHAT       reduce using rule 179 (build_in_functions -> build_in_range .)
    COMMA           reduce using rule 179 (build_in_functions -> build_in_range .)
    RBRACKET        reduce using rule 179 (build_in_functions -> build_in_range .)
    NOT_EQUAL       reduce using rule 179 (build_in_functions -> build_in_range .)
    EQUAL           reduce using rule 179 (build_in_functions -> build_in_range .)
    LESS_EQUAL      reduce using rule 179 (build_in_functions -> build_in_range .)
    GREATER_EQUAL   reduce using rule 179 (build_in_functions -> build_in_range .)
    LESS_THAN       reduce using rule 179 (build_in_functions -> build_in_range .)
    GREATER_THAN    reduce using rule 179 (build_in_functions -> build_in_range .)
    AS              reduce using rule 179 (build_in_functions -> build_in_range .)
    IN              reduce using rule 179 (build_in_functions -> build_in_range .)
    ELSE            reduce using rule 179 (build_in_functions -> build_in_range .)
    ELIF            reduce using rule 179 (build_in_functions -> build_in_range .)
    AND             reduce using rule 179 (build_in_functions -> build_in_range .)


state 57

    (109) boolean_value -> FALSE .
    ESPACEDCONCAT   reduce using rule 109 (boolean_value -> FALSE .)
    CONCAT          reduce using rule 109 (boolean_value -> FALSE .)
    LBRACKET        reduce using rule 109 (boolean_value -> FALSE .)
    MODULE          reduce using rule 109 (boolean_value -> FALSE .)
    DIVIDE          reduce using rule 109 (boolean_value -> FALSE .)
    MULTIPLY        reduce using rule 109 (boolean_value -> FALSE .)
    ASTERPOWER      reduce using rule 109 (boolean_value -> FALSE .)
    POWER           reduce using rule 109 (boolean_value -> FALSE .)
    MINUS           reduce using rule 109 (boolean_value -> FALSE .)
    PLUS            reduce using rule 109 (boolean_value -> FALSE .)
    SEMICOLON       reduce using rule 109 (boolean_value -> FALSE .)
    $end            reduce using rule 109 (boolean_value -> FALSE .)
    RPAREN          reduce using rule 109 (boolean_value -> FALSE .)
    ASSIGN          reduce using rule 109 (boolean_value -> FALSE .)
    RBRACE          reduce using rule 109 (boolean_value -> FALSE .)
    OR              reduce using rule 109 (boolean_value -> FALSE .)
    SINCETHAT       reduce using rule 109 (boolean_value -> FALSE .)
    COMMA           reduce using rule 109 (boolean_value -> FALSE .)
    RBRACKET        reduce using rule 109 (boolean_value -> FALSE .)
    NOT_EQUAL       reduce using rule 109 (boolean_value -> FALSE .)
    EQUAL           reduce using rule 109 (boolean_value -> FALSE .)
    LESS_EQUAL      reduce using rule 109 (boolean_value -> FALSE .)
    GREATER_EQUAL   reduce using rule 109 (boolean_value -> FALSE .)
    LESS_THAN       reduce using rule 109 (boolean_value -> FALSE .)
    GREATER_THAN    reduce using rule 109 (boolean_value -> FALSE .)
    AS              reduce using rule 109 (boolean_value -> FALSE .)
    IN              reduce using rule 109 (boolean_value -> FALSE .)
    ELSE            reduce using rule 109 (boolean_value -> FALSE .)
    ELIF            reduce using rule 109 (boolean_value -> FALSE .)
    AND             reduce using rule 109 (boolean_value -> FALSE .)


state 58

    (110) boolean_value -> TRUE .
    ESPACEDCONCAT   reduce using rule 110 (boolean_value -> TRUE .)
    CONCAT          reduce using rule 110 (boolean_value -> TRUE .)
    LBRACKET        reduce using rule 110 (boolean_value -> TRUE .)
    MODULE          reduce using rule 110 (boolean_value -> TRUE .)
    DIVIDE          reduce using rule 110 (boolean_value -> TRUE .)
    MULTIPLY        reduce using rule 110 (boolean_value -> TRUE .)
    ASTERPOWER      reduce using rule 110 (boolean_value -> TRUE .)
    POWER           reduce using rule 110 (boolean_value -> TRUE .)
    MINUS           reduce using rule 110 (boolean_value -> TRUE .)
    PLUS            reduce using rule 110 (boolean_value -> TRUE .)
    SEMICOLON       reduce using rule 110 (boolean_value -> TRUE .)
    $end            reduce using rule 110 (boolean_value -> TRUE .)
    RPAREN          reduce using rule 110 (boolean_value -> TRUE .)
    ASSIGN          reduce using rule 110 (boolean_value -> TRUE .)
    RBRACE          reduce using rule 110 (boolean_value -> TRUE .)
    OR              reduce using rule 110 (boolean_value -> TRUE .)
    SINCETHAT       reduce using rule 110 (boolean_value -> TRUE .)
    COMMA           reduce using rule 110 (boolean_value -> TRUE .)
    RBRACKET        reduce using rule 110 (boolean_value -> TRUE .)
    NOT_EQUAL       reduce using rule 110 (boolean_value -> TRUE .)
    EQUAL           reduce using rule 110 (boolean_value -> TRUE .)
    LESS_EQUAL      reduce using rule 110 (boolean_value -> TRUE .)
    GREATER_EQUAL   reduce using rule 110 (boolean_value -> TRUE .)
    LESS_THAN       reduce using rule 110 (boolean_value -> TRUE .)
    GREATER_THAN    reduce using rule 110 (boolean_value -> TRUE .)
    AS              reduce using rule 110 (boolean_value -> TRUE .)
    IN              reduce using rule 110 (boolean_value -> TRUE .)
    ELSE            reduce using rule 110 (boolean_value -> TRUE .)
    ELIF            reduce using rule 110 (boolean_value -> TRUE .)
    AND             reduce using rule 110 (boolean_value -> TRUE .)


state 59

    (141) type_instanciation -> NEW . IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> NEW . IDENTIFIER LPAREN arguments_list RPAREN
    IDENTIFIER      shift and go to state 115


state 60

    (43) term -> factor .
    (44) term -> factor . MODULE term
    (45) term -> factor . DIVIDE term
    (46) term -> factor . MULTIPLY term
    (50) factor -> factor . ASTERPOWER base_exponent
    (51) factor -> factor . POWER base_exponent
    MINUS           reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    SEMICOLON       reduce using rule 43 (term -> factor .)
    $end            reduce using rule 43 (term -> factor .)
    RPAREN          reduce using rule 43 (term -> factor .)
    RBRACE          reduce using rule 43 (term -> factor .)
    OR              reduce using rule 43 (term -> factor .)
    SINCETHAT       reduce using rule 43 (term -> factor .)
    COMMA           reduce using rule 43 (term -> factor .)
    RBRACKET        reduce using rule 43 (term -> factor .)
    NOT_EQUAL       reduce using rule 43 (term -> factor .)
    EQUAL           reduce using rule 43 (term -> factor .)
    LESS_EQUAL      reduce using rule 43 (term -> factor .)
    GREATER_EQUAL   reduce using rule 43 (term -> factor .)
    LESS_THAN       reduce using rule 43 (term -> factor .)
    GREATER_THAN    reduce using rule 43 (term -> factor .)
    AS              reduce using rule 43 (term -> factor .)
    IN              reduce using rule 43 (term -> factor .)
    ELSE            reduce using rule 43 (term -> factor .)
    ELIF            reduce using rule 43 (term -> factor .)
    AND             reduce using rule 43 (term -> factor .)
    MODULE          shift and go to state 116
    DIVIDE          shift and go to state 117
    MULTIPLY        shift and go to state 118
    ASTERPOWER      shift and go to state 119
    POWER           shift and go to state 120


state 61

    (171) build_in_print -> PRINT . LPAREN argument RPAREN
    LPAREN          shift and go to state 121


state 62

    (170) build_in_range -> RANGE . LPAREN argument COMMA argument RPAREN
    LPAREN          shift and go to state 122


state 63

    (49) factor -> base_exponent .
    MODULE          reduce using rule 49 (factor -> base_exponent .)
    DIVIDE          reduce using rule 49 (factor -> base_exponent .)
    MULTIPLY        reduce using rule 49 (factor -> base_exponent .)
    ASTERPOWER      reduce using rule 49 (factor -> base_exponent .)
    POWER           reduce using rule 49 (factor -> base_exponent .)
    MINUS           reduce using rule 49 (factor -> base_exponent .)
    PLUS            reduce using rule 49 (factor -> base_exponent .)
    SEMICOLON       reduce using rule 49 (factor -> base_exponent .)
    $end            reduce using rule 49 (factor -> base_exponent .)
    RPAREN          reduce using rule 49 (factor -> base_exponent .)
    RBRACE          reduce using rule 49 (factor -> base_exponent .)
    OR              reduce using rule 49 (factor -> base_exponent .)
    SINCETHAT       reduce using rule 49 (factor -> base_exponent .)
    COMMA           reduce using rule 49 (factor -> base_exponent .)
    RBRACKET        reduce using rule 49 (factor -> base_exponent .)
    NOT_EQUAL       reduce using rule 49 (factor -> base_exponent .)
    EQUAL           reduce using rule 49 (factor -> base_exponent .)
    LESS_EQUAL      reduce using rule 49 (factor -> base_exponent .)
    GREATER_EQUAL   reduce using rule 49 (factor -> base_exponent .)
    LESS_THAN       reduce using rule 49 (factor -> base_exponent .)
    GREATER_THAN    reduce using rule 49 (factor -> base_exponent .)
    AS              reduce using rule 49 (factor -> base_exponent .)
    IN              reduce using rule 49 (factor -> base_exponent .)
    ELSE            reduce using rule 49 (factor -> base_exponent .)
    ELIF            reduce using rule 49 (factor -> base_exponent .)
    AND             reduce using rule 49 (factor -> base_exponent .)


state 64

    (24) identifier -> fully_typed_param .
    MODULE          reduce using rule 24 (identifier -> fully_typed_param .)
    DIVIDE          reduce using rule 24 (identifier -> fully_typed_param .)
    MULTIPLY        reduce using rule 24 (identifier -> fully_typed_param .)
    ASTERPOWER      reduce using rule 24 (identifier -> fully_typed_param .)
    POWER           reduce using rule 24 (identifier -> fully_typed_param .)
    MINUS           reduce using rule 24 (identifier -> fully_typed_param .)
    PLUS            reduce using rule 24 (identifier -> fully_typed_param .)
    SEMICOLON       reduce using rule 24 (identifier -> fully_typed_param .)
    $end            reduce using rule 24 (identifier -> fully_typed_param .)
    RPAREN          reduce using rule 24 (identifier -> fully_typed_param .)
    ASSIGN          reduce using rule 24 (identifier -> fully_typed_param .)
    RBRACE          reduce using rule 24 (identifier -> fully_typed_param .)
    OR              reduce using rule 24 (identifier -> fully_typed_param .)
    SINCETHAT       reduce using rule 24 (identifier -> fully_typed_param .)
    COMMA           reduce using rule 24 (identifier -> fully_typed_param .)
    RBRACKET        reduce using rule 24 (identifier -> fully_typed_param .)
    NOT_EQUAL       reduce using rule 24 (identifier -> fully_typed_param .)
    EQUAL           reduce using rule 24 (identifier -> fully_typed_param .)
    LESS_EQUAL      reduce using rule 24 (identifier -> fully_typed_param .)
    GREATER_EQUAL   reduce using rule 24 (identifier -> fully_typed_param .)
    LESS_THAN       reduce using rule 24 (identifier -> fully_typed_param .)
    GREATER_THAN    reduce using rule 24 (identifier -> fully_typed_param .)
    AS              reduce using rule 24 (identifier -> fully_typed_param .)
    IN              reduce using rule 24 (identifier -> fully_typed_param .)
    ELSE            reduce using rule 24 (identifier -> fully_typed_param .)
    ELIF            reduce using rule 24 (identifier -> fully_typed_param .)
    AND             reduce using rule 24 (identifier -> fully_typed_param .)


state 65

    (2) program_decl_list -> program_level_decl program_decl_list .
    $end            reduce using rule 2 (program_decl_list -> program_level_decl program_decl_list .)


state 66

    (8) inst_list -> inst SEMICOLON . inst_list
    (9) inst_list -> inst SEMICOLON .
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 9 (inst_list -> inst SEMICOLON .)
    RBRACE          reduce using rule 9 (inst_list -> inst SEMICOLON .)
    LPAREN          shift and go to state 13
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    LBRACE          shift and go to state 44
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    inst                           shift and go to state 9
    inst_list                      shift and go to state 123
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    scope                          shift and go to state 25
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 67

    (157) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body SEMICOLON
    (158) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body
    (159) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body SEMICOLON
    (160) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body
    (161) protocol_body -> . LBRACE virtual_method_list RBRACE
    EXTENDS         shift and go to state 124
    LBRACE          shift and go to state 126

    protocol_body                  shift and go to state 125

state 68

    (153) var_method -> IDENTIFIER DOT . function_call
    (151) var_attr -> IDENTIFIER DOT . var_attr
    (152) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 127

    function_call                  shift and go to state 128
    var_attr                       shift and go to state 129

state 69

    (139) function_call -> IDENTIFIER LPAREN . RPAREN
    (140) function_call -> IDENTIFIER LPAREN . arguments_list RPAREN
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 130
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    arguments_list                 shift and go to state 131
    argument                       shift and go to state 107
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 70

    (26) fully_typed_param -> IDENTIFIER type_anotation .
    MODULE          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    DIVIDE          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    MULTIPLY        reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ASTERPOWER      reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    POWER           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    MINUS           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    PLUS            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    SEMICOLON       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    $end            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    RPAREN          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ASSIGN          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    RBRACE          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    OR              reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    SINCETHAT       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    COMMA           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    RBRACKET        reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    NOT_EQUAL       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    EQUAL           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    LESS_EQUAL      reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    GREATER_EQUAL   reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    LESS_THAN       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    GREATER_THAN    reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    AS              reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    IN              reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ELSE            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ELIF            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    AND             reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)


state 71

    (27) type_anotation -> COLON . BOOLEAN_TYPE
    (28) type_anotation -> COLON . NUMBER_TYPE
    (29) type_anotation -> COLON . IDENTIFIER
    BOOLEAN_TYPE    shift and go to state 133
    NUMBER_TYPE     shift and go to state 134
    IDENTIFIER      shift and go to state 135


state 72

    (66) function_declaration -> FUNCTION IDENTIFIER . LPAREN RPAREN type_anotation function_inline_declaration
    (67) function_declaration -> FUNCTION IDENTIFIER . parameters type_anotation function_inline_declaration
    (68) function_declaration -> FUNCTION IDENTIFIER . LPAREN RPAREN type_anotation function_full_declaration SEMICOLON
    (69) function_declaration -> FUNCTION IDENTIFIER . parameters type_anotation function_full_declaration SEMICOLON
    (70) function_declaration -> FUNCTION IDENTIFIER . LPAREN RPAREN type_anotation function_full_declaration
    (71) function_declaration -> FUNCTION IDENTIFIER . parameters type_anotation function_full_declaration
    (72) function_declaration -> FUNCTION IDENTIFIER . LPAREN RPAREN function_inline_declaration
    (73) function_declaration -> FUNCTION IDENTIFIER . parameters function_inline_declaration
    (74) function_declaration -> FUNCTION IDENTIFIER . LPAREN RPAREN function_full_declaration SEMICOLON
    (75) function_declaration -> FUNCTION IDENTIFIER . parameters function_full_declaration SEMICOLON
    (76) function_declaration -> FUNCTION IDENTIFIER . LPAREN RPAREN function_full_declaration
    (77) function_declaration -> FUNCTION IDENTIFIER . parameters function_full_declaration
    (119) parameters -> . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 136

    parameters                     shift and go to state 137

state 73

    (52) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    aritmetic_operation            shift and go to state 76
    term                           shift and go to state 37
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 74

    (11) inst -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 138


state 75

    (35) expression -> LPAREN var_asign . RPAREN
    RPAREN          shift and go to state 139


state 76

    (52) base_exponent -> LPAREN aritmetic_operation . RPAREN
    RPAREN          shift and go to state 140


state 77

    (148) var_use -> atom . LBRACKET expression RBRACKET
    (25) identifier -> atom .
    LBRACKET        shift and go to state 82
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)


state 78

    (150) var_use -> IDENTIFIER .
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (153) var_method -> IDENTIFIER . DOT function_call
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 150 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 150 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 150 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 150 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 150 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 150 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 150 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 150 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 141
    LPAREN          shift and go to state 69
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70

state 79

    (111) type_declaration -> TYPE IDENTIFIER . inherits_type decl_body SEMICOLON
    (112) type_declaration -> TYPE IDENTIFIER . inherits_type decl_body
    (113) type_declaration -> TYPE IDENTIFIER . decl_body SEMICOLON
    (114) type_declaration -> TYPE IDENTIFIER . decl_body
    (115) type_declaration -> TYPE IDENTIFIER . parameters inherits_type decl_body SEMICOLON
    (116) type_declaration -> TYPE IDENTIFIER . parameters inherits_type decl_body
    (117) type_declaration -> TYPE IDENTIFIER . parameters decl_body SEMICOLON
    (118) type_declaration -> TYPE IDENTIFIER . parameters decl_body
    (120) inherits_type -> . INHERITS IDENTIFIER parameters
    (121) inherits_type -> . INHERITS IDENTIFIER
    (122) decl_body -> . LBRACE decl_list RBRACE
    (123) decl_body -> . LBRACE RBRACE
    (119) parameters -> . LPAREN arguments_list RPAREN
    INHERITS        shift and go to state 145
    LBRACE          shift and go to state 146
    LPAREN          shift and go to state 147

    inherits_type                  shift and go to state 142
    decl_body                      shift and go to state 143
    parameters                     shift and go to state 144

state 80

    (37) expression -> atom ESPACEDCONCAT . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    atom                           shift and go to state 20
    expression                     shift and go to state 148
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 81

    (38) expression -> atom CONCAT . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    atom                           shift and go to state 20
    expression                     shift and go to state 149
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 82

    (148) var_use -> atom LBRACKET . expression RBRACKET
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    atom                           shift and go to state 20
    expression                     shift and go to state 150
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 83

    (30) scope_list -> scope scope_list .
    SEMICOLON       reduce using rule 30 (scope_list -> scope scope_list .)
    $end            reduce using rule 30 (scope_list -> scope scope_list .)
    RBRACE          reduce using rule 30 (scope_list -> scope scope_list .)
    AS              reduce using rule 30 (scope_list -> scope scope_list .)
    COMMA           reduce using rule 30 (scope_list -> scope scope_list .)
    IN              reduce using rule 30 (scope_list -> scope scope_list .)
    ELSE            reduce using rule 30 (scope_list -> scope scope_list .)
    ELIF            reduce using rule 30 (scope_list -> scope scope_list .)


state 84

    (15) var_dec -> LET var_init_list . IN var_decl_expr
    IN              shift and go to state 151


state 85

    (20) var_init_list -> var_init . COMMA var_init_list
    (21) var_init_list -> var_init .
    COMMA           shift and go to state 152
    IN              reduce using rule 21 (var_init_list -> var_init .)


state 86

    (22) var_init -> identifier . ASSIGN inst type_downcast
    (23) var_init -> identifier . ASSIGN inst
    ASSIGN          shift and go to state 153


state 87

    (25) identifier -> atom .
    (148) var_use -> atom . LBRACKET expression RBRACKET
    ASSIGN          reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    SEMICOLON       reduce using rule 25 (identifier -> atom .)
    $end            reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)
    RBRACE          reduce using rule 25 (identifier -> atom .)
    OR              reduce using rule 25 (identifier -> atom .)
    SINCETHAT       reduce using rule 25 (identifier -> atom .)
    COMMA           reduce using rule 25 (identifier -> atom .)
    RBRACKET        reduce using rule 25 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 25 (identifier -> atom .)
    EQUAL           reduce using rule 25 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 25 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> atom .)
    LESS_THAN       reduce using rule 25 (identifier -> atom .)
    GREATER_THAN    reduce using rule 25 (identifier -> atom .)
    AS              reduce using rule 25 (identifier -> atom .)
    IN              reduce using rule 25 (identifier -> atom .)
    ELSE            reduce using rule 25 (identifier -> atom .)
    ELIF            reduce using rule 25 (identifier -> atom .)
    AND             reduce using rule 25 (identifier -> atom .)
    LBRACKET        shift and go to state 82


state 88

    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (153) var_method -> IDENTIFIER . DOT function_call
    (150) var_use -> IDENTIFIER .
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    DOT             shift and go to state 68
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 150 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 150 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 150 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 150 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 150 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 150 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 150 (var_use -> IDENTIFIER .)
    $end            reduce using rule 150 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 150 (var_use -> IDENTIFIER .)
    RBRACE          reduce using rule 150 (var_use -> IDENTIFIER .)
    OR              reduce using rule 150 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 150 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 150 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 150 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 150 (var_use -> IDENTIFIER .)
    AS              reduce using rule 150 (var_use -> IDENTIFIER .)
    IN              reduce using rule 150 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 150 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 150 (var_use -> IDENTIFIER .)
    AND             reduce using rule 150 (var_use -> IDENTIFIER .)
    LPAREN          shift and go to state 69
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70

state 89

    (62) atom -> var_use .
    LBRACKET        reduce using rule 62 (atom -> var_use .)
    ASSIGN          reduce using rule 62 (atom -> var_use .)
    ASTERPOWER      reduce using rule 62 (atom -> var_use .)
    POWER           reduce using rule 62 (atom -> var_use .)
    MODULE          reduce using rule 62 (atom -> var_use .)
    DIVIDE          reduce using rule 62 (atom -> var_use .)
    MULTIPLY        reduce using rule 62 (atom -> var_use .)
    MINUS           reduce using rule 62 (atom -> var_use .)
    PLUS            reduce using rule 62 (atom -> var_use .)
    SEMICOLON       reduce using rule 62 (atom -> var_use .)
    $end            reduce using rule 62 (atom -> var_use .)
    RPAREN          reduce using rule 62 (atom -> var_use .)
    RBRACE          reduce using rule 62 (atom -> var_use .)
    OR              reduce using rule 62 (atom -> var_use .)
    SINCETHAT       reduce using rule 62 (atom -> var_use .)
    COMMA           reduce using rule 62 (atom -> var_use .)
    RBRACKET        reduce using rule 62 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 62 (atom -> var_use .)
    EQUAL           reduce using rule 62 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 62 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 62 (atom -> var_use .)
    LESS_THAN       reduce using rule 62 (atom -> var_use .)
    GREATER_THAN    reduce using rule 62 (atom -> var_use .)
    AS              reduce using rule 62 (atom -> var_use .)
    IN              reduce using rule 62 (atom -> var_use .)
    ELSE            reduce using rule 62 (atom -> var_use .)
    ELIF            reduce using rule 62 (atom -> var_use .)
    AND             reduce using rule 62 (atom -> var_use .)


state 90

    (64) var_asign -> var_use ASSIGN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    var_use                        shift and go to state 27
    expression                     shift and go to state 154
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 91

    (65) var_asign -> var_use DEST_ASSIGN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    var_use                        shift and go to state 27
    expression                     shift and go to state 155
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 92

    (41) aritmetic_operation -> term MINUS . aritmetic_operation
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    term                           shift and go to state 37
    aritmetic_operation            shift and go to state 156
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 93

    (42) aritmetic_operation -> term PLUS . aritmetic_operation
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    term                           shift and go to state 37
    aritmetic_operation            shift and go to state 157
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 94

    (48) factor -> MINUS factor .
    (50) factor -> factor . ASTERPOWER base_exponent
    (51) factor -> factor . POWER base_exponent
    MODULE          reduce using rule 48 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 48 (factor -> MINUS factor .)
    MULTIPLY        reduce using rule 48 (factor -> MINUS factor .)
    ASTERPOWER      reduce using rule 48 (factor -> MINUS factor .)
    POWER           reduce using rule 48 (factor -> MINUS factor .)
    MINUS           reduce using rule 48 (factor -> MINUS factor .)
    PLUS            reduce using rule 48 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 48 (factor -> MINUS factor .)
    $end            reduce using rule 48 (factor -> MINUS factor .)
    RPAREN          reduce using rule 48 (factor -> MINUS factor .)
    RBRACE          reduce using rule 48 (factor -> MINUS factor .)
    OR              reduce using rule 48 (factor -> MINUS factor .)
    SINCETHAT       reduce using rule 48 (factor -> MINUS factor .)
    COMMA           reduce using rule 48 (factor -> MINUS factor .)
    RBRACKET        reduce using rule 48 (factor -> MINUS factor .)
    NOT_EQUAL       reduce using rule 48 (factor -> MINUS factor .)
    EQUAL           reduce using rule 48 (factor -> MINUS factor .)
    LESS_EQUAL      reduce using rule 48 (factor -> MINUS factor .)
    GREATER_EQUAL   reduce using rule 48 (factor -> MINUS factor .)
    LESS_THAN       reduce using rule 48 (factor -> MINUS factor .)
    GREATER_THAN    reduce using rule 48 (factor -> MINUS factor .)
    AS              reduce using rule 48 (factor -> MINUS factor .)
    IN              reduce using rule 48 (factor -> MINUS factor .)
    ELSE            reduce using rule 48 (factor -> MINUS factor .)
    ELIF            reduce using rule 48 (factor -> MINUS factor .)
    AND             reduce using rule 48 (factor -> MINUS factor .)


state 95

    (47) factor -> PLUS factor .
    (50) factor -> factor . ASTERPOWER base_exponent
    (51) factor -> factor . POWER base_exponent
    MODULE          reduce using rule 47 (factor -> PLUS factor .)
    DIVIDE          reduce using rule 47 (factor -> PLUS factor .)
    MULTIPLY        reduce using rule 47 (factor -> PLUS factor .)
    ASTERPOWER      reduce using rule 47 (factor -> PLUS factor .)
    POWER           reduce using rule 47 (factor -> PLUS factor .)
    MINUS           reduce using rule 47 (factor -> PLUS factor .)
    PLUS            reduce using rule 47 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 47 (factor -> PLUS factor .)
    $end            reduce using rule 47 (factor -> PLUS factor .)
    RPAREN          reduce using rule 47 (factor -> PLUS factor .)
    RBRACE          reduce using rule 47 (factor -> PLUS factor .)
    OR              reduce using rule 47 (factor -> PLUS factor .)
    SINCETHAT       reduce using rule 47 (factor -> PLUS factor .)
    COMMA           reduce using rule 47 (factor -> PLUS factor .)
    RBRACKET        reduce using rule 47 (factor -> PLUS factor .)
    NOT_EQUAL       reduce using rule 47 (factor -> PLUS factor .)
    EQUAL           reduce using rule 47 (factor -> PLUS factor .)
    LESS_EQUAL      reduce using rule 47 (factor -> PLUS factor .)
    GREATER_EQUAL   reduce using rule 47 (factor -> PLUS factor .)
    LESS_THAN       reduce using rule 47 (factor -> PLUS factor .)
    GREATER_THAN    reduce using rule 47 (factor -> PLUS factor .)
    AS              reduce using rule 47 (factor -> PLUS factor .)
    IN              reduce using rule 47 (factor -> PLUS factor .)
    ELSE            reduce using rule 47 (factor -> PLUS factor .)
    ELIF            reduce using rule 47 (factor -> PLUS factor .)
    AND             reduce using rule 47 (factor -> PLUS factor .)


state 96

    (94) for_loop -> FOR LPAREN . identifier IN expression RPAREN expression
    (95) for_loop -> FOR LPAREN . identifier IN expression RPAREN scope
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    identifier                     shift and go to state 158
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 97

    (80) conditional -> IF full_conditional .
    SEMICOLON       reduce using rule 80 (conditional -> IF full_conditional .)
    $end            reduce using rule 80 (conditional -> IF full_conditional .)
    RBRACE          reduce using rule 80 (conditional -> IF full_conditional .)
    COMMA           reduce using rule 80 (conditional -> IF full_conditional .)
    RBRACKET        reduce using rule 80 (conditional -> IF full_conditional .)
    RPAREN          reduce using rule 80 (conditional -> IF full_conditional .)
    OR              reduce using rule 80 (conditional -> IF full_conditional .)
    SINCETHAT       reduce using rule 80 (conditional -> IF full_conditional .)
    NOT_EQUAL       reduce using rule 80 (conditional -> IF full_conditional .)
    EQUAL           reduce using rule 80 (conditional -> IF full_conditional .)
    LESS_EQUAL      reduce using rule 80 (conditional -> IF full_conditional .)
    GREATER_EQUAL   reduce using rule 80 (conditional -> IF full_conditional .)
    LESS_THAN       reduce using rule 80 (conditional -> IF full_conditional .)
    GREATER_THAN    reduce using rule 80 (conditional -> IF full_conditional .)
    AS              reduce using rule 80 (conditional -> IF full_conditional .)
    IN              reduce using rule 80 (conditional -> IF full_conditional .)
    ELSE            reduce using rule 80 (conditional -> IF full_conditional .)
    ELIF            reduce using rule 80 (conditional -> IF full_conditional .)
    AND             reduce using rule 80 (conditional -> IF full_conditional .)


state 98

    (81) conditional -> IF inline_conditional .
    SEMICOLON       reduce using rule 81 (conditional -> IF inline_conditional .)
    $end            reduce using rule 81 (conditional -> IF inline_conditional .)
    RBRACE          reduce using rule 81 (conditional -> IF inline_conditional .)
    COMMA           reduce using rule 81 (conditional -> IF inline_conditional .)
    RBRACKET        reduce using rule 81 (conditional -> IF inline_conditional .)
    RPAREN          reduce using rule 81 (conditional -> IF inline_conditional .)
    OR              reduce using rule 81 (conditional -> IF inline_conditional .)
    SINCETHAT       reduce using rule 81 (conditional -> IF inline_conditional .)
    NOT_EQUAL       reduce using rule 81 (conditional -> IF inline_conditional .)
    EQUAL           reduce using rule 81 (conditional -> IF inline_conditional .)
    LESS_EQUAL      reduce using rule 81 (conditional -> IF inline_conditional .)
    GREATER_EQUAL   reduce using rule 81 (conditional -> IF inline_conditional .)
    LESS_THAN       reduce using rule 81 (conditional -> IF inline_conditional .)
    GREATER_THAN    reduce using rule 81 (conditional -> IF inline_conditional .)
    AS              reduce using rule 81 (conditional -> IF inline_conditional .)
    IN              reduce using rule 81 (conditional -> IF inline_conditional .)
    ELSE            reduce using rule 81 (conditional -> IF inline_conditional .)
    ELIF            reduce using rule 81 (conditional -> IF inline_conditional .)
    AND             reduce using rule 81 (conditional -> IF inline_conditional .)


state 99

    (83) full_conditional -> LPAREN . conditional_expression RPAREN scope_list else_elif_statement
    (82) inline_conditional -> LPAREN . conditional_expression RPAREN expression else_elif_statement
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 163
    LPAREN          shift and go to state 159
    IDENTIFIER      shift and go to state 164
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    conditional_expression         shift and go to state 160
    expression                     shift and go to state 161
    condition                      shift and go to state 162
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 100

    (90) while_loop -> WHILE LPAREN . expression RPAREN expression
    (91) while_loop -> WHILE LPAREN . expression RPAREN scope
    (92) while_loop -> WHILE LPAREN . conditional_expression RPAREN expression
    (93) while_loop -> WHILE LPAREN . conditional_expression RPAREN scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 166
    NOT             shift and go to state 163
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 164
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 167
    conditional_expression         shift and go to state 168
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    condition                      shift and go to state 162
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 101

    (32) scope -> LBRACE RBRACE .
    LBRACE          reduce using rule 32 (scope -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 32 (scope -> LBRACE RBRACE .)
    $end            reduce using rule 32 (scope -> LBRACE RBRACE .)
    RBRACE          reduce using rule 32 (scope -> LBRACE RBRACE .)
    AS              reduce using rule 32 (scope -> LBRACE RBRACE .)
    COMMA           reduce using rule 32 (scope -> LBRACE RBRACE .)
    IN              reduce using rule 32 (scope -> LBRACE RBRACE .)
    ELSE            reduce using rule 32 (scope -> LBRACE RBRACE .)
    ELIF            reduce using rule 32 (scope -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 32 (scope -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 32 (scope -> LBRACE RBRACE .)
    TYPE            reduce using rule 32 (scope -> LBRACE RBRACE .)
    LPAREN          reduce using rule 32 (scope -> LBRACE RBRACE .)
    LET             reduce using rule 32 (scope -> LBRACE RBRACE .)
    NUMBER          reduce using rule 32 (scope -> LBRACE RBRACE .)
    STRING          reduce using rule 32 (scope -> LBRACE RBRACE .)
    FOR             reduce using rule 32 (scope -> LBRACE RBRACE .)
    IF              reduce using rule 32 (scope -> LBRACE RBRACE .)
    WHILE           reduce using rule 32 (scope -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 32 (scope -> LBRACE RBRACE .)
    E_CONST         reduce using rule 32 (scope -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 32 (scope -> LBRACE RBRACE .)
    RAND            reduce using rule 32 (scope -> LBRACE RBRACE .)
    LOG             reduce using rule 32 (scope -> LBRACE RBRACE .)
    EXP             reduce using rule 32 (scope -> LBRACE RBRACE .)
    COS             reduce using rule 32 (scope -> LBRACE RBRACE .)
    SIN             reduce using rule 32 (scope -> LBRACE RBRACE .)
    SQRT            reduce using rule 32 (scope -> LBRACE RBRACE .)
    FALSE           reduce using rule 32 (scope -> LBRACE RBRACE .)
    TRUE            reduce using rule 32 (scope -> LBRACE RBRACE .)
    NEW             reduce using rule 32 (scope -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 32 (scope -> LBRACE RBRACE .)
    PRINT           reduce using rule 32 (scope -> LBRACE RBRACE .)
    RANGE           reduce using rule 32 (scope -> LBRACE RBRACE .)
    PLUS            reduce using rule 32 (scope -> LBRACE RBRACE .)
    MINUS           reduce using rule 32 (scope -> LBRACE RBRACE .)
    OR              reduce using rule 32 (scope -> LBRACE RBRACE .)
    SINCETHAT       reduce using rule 32 (scope -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 32 (scope -> LBRACE RBRACE .)
    RPAREN          reduce using rule 32 (scope -> LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 32 (scope -> LBRACE RBRACE .)
    EQUAL           reduce using rule 32 (scope -> LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 32 (scope -> LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 32 (scope -> LBRACE RBRACE .)
    LESS_THAN       reduce using rule 32 (scope -> LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 32 (scope -> LBRACE RBRACE .)
    AND             reduce using rule 32 (scope -> LBRACE RBRACE .)


state 102

    (33) scope -> LBRACE inst_list . RBRACE
    RBRACE          shift and go to state 169


state 103

    (166) vector -> LBRACKET vector_decl . RBRACKET
    RBRACKET        shift and go to state 170


state 104

    (167) vector_decl -> expression . OR identifier IN expression
    (168) vector_decl -> expression . SINCETHAT identifier IN expression
    (147) argument -> expression .
    OR              shift and go to state 171
    SINCETHAT       shift and go to state 172
    COMMA           reduce using rule 147 (argument -> expression .)
    RBRACKET        reduce using rule 147 (argument -> expression .)


state 105

    (169) vector_decl -> arguments_list .
    RBRACKET        reduce using rule 169 (vector_decl -> arguments_list .)


state 106

    (35) expression -> LPAREN . var_asign RPAREN
    (52) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IDENTIFIER      shift and go to state 78
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 73
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    var_asign                      shift and go to state 75
    aritmetic_operation            shift and go to state 76
    var_use                        shift and go to state 27
    term                           shift and go to state 37
    atom                           shift and go to state 77
    var_attr                       shift and go to state 46
    factor                         shift and go to state 60
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    base_exponent                  shift and go to state 63
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 107

    (144) arguments_list -> argument . COMMA arguments_list
    (145) arguments_list -> argument .
    COMMA           shift and go to state 173
    RBRACKET        reduce using rule 145 (arguments_list -> argument .)
    RPAREN          reduce using rule 145 (arguments_list -> argument .)


state 108

    (146) argument -> conditional .
    COMMA           reduce using rule 146 (argument -> conditional .)
    RBRACKET        reduce using rule 146 (argument -> conditional .)
    RPAREN          reduce using rule 146 (argument -> conditional .)


state 109

    (172) build_in_functions -> RAND LPAREN . RPAREN
    RPAREN          shift and go to state 174


state 110

    (173) build_in_functions -> LOG LPAREN . argument COMMA argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 175
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 111

    (174) build_in_functions -> EXP LPAREN . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 176
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 112

    (175) build_in_functions -> COS LPAREN . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 177
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 113

    (176) build_in_functions -> SIN LPAREN . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 178
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 114

    (177) build_in_functions -> SQRT LPAREN . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 179
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 115

    (141) type_instanciation -> NEW IDENTIFIER . LPAREN RPAREN
    (142) type_instanciation -> NEW IDENTIFIER . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 180


state 116

    (44) term -> factor MODULE . term
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    factor                         shift and go to state 60
    term                           shift and go to state 181
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 117

    (45) term -> factor DIVIDE . term
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    factor                         shift and go to state 60
    term                           shift and go to state 182
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 118

    (46) term -> factor MULTIPLY . term
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    factor                         shift and go to state 60
    term                           shift and go to state 183
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 119

    (50) factor -> factor ASTERPOWER . base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    base_exponent                  shift and go to state 184
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 120

    (51) factor -> factor POWER . base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    base_exponent                  shift and go to state 185
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 121

    (171) build_in_print -> PRINT LPAREN . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 186
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 122

    (170) build_in_range -> RANGE LPAREN . argument COMMA argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 187
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 123

    (8) inst_list -> inst SEMICOLON inst_list .
    $end            reduce using rule 8 (inst_list -> inst SEMICOLON inst_list .)
    RBRACE          reduce using rule 8 (inst_list -> inst SEMICOLON inst_list .)


state 124

    (157) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body SEMICOLON
    (158) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 188


state 125

    (159) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body . SEMICOLON
    (160) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 189
    PROTOCOL        reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TYPE            reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LET             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    STRING          reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FOR             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IF              reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    WHILE           reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RAND            reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LOG             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    EXP             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    COS             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SIN             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SQRT            reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FALSE           reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TRUE            reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NEW             reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PRINT           reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RANGE           reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PLUS            reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    MINUS           reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    $end            reduce using rule 160 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)


state 126

    (161) protocol_body -> LBRACE . virtual_method_list RBRACE
    (162) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (163) virtual_method_list -> . virtual_method SEMICOLON
    (164) virtual_method -> . IDENTIFIER parameters type_anotation
    (165) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    IDENTIFIER      shift and go to state 192

    virtual_method_list            shift and go to state 190
    virtual_method                 shift and go to state 191

state 127

    (152) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LPAREN          shift and go to state 69
    DOT             shift and go to state 193


state 128

    (153) var_method -> IDENTIFIER DOT function_call .
    ESPACEDCONCAT   reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    CONCAT          reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    LBRACKET        reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    MODULE          reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    DIVIDE          reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    MULTIPLY        reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    ASTERPOWER      reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    POWER           reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    MINUS           reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    PLUS            reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    SEMICOLON       reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    $end            reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    RPAREN          reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    ASSIGN          reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    RBRACE          reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    OR              reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    SINCETHAT       reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    COMMA           reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    RBRACKET        reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    NOT_EQUAL       reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    EQUAL           reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    LESS_EQUAL      reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_EQUAL   reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    LESS_THAN       reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_THAN    reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    AS              reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    IN              reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    ELSE            reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    ELIF            reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)
    AND             reduce using rule 153 (var_method -> IDENTIFIER DOT function_call .)


state 129

    (151) var_attr -> IDENTIFIER DOT var_attr .
    ASSIGN          reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    DEST_ASSIGN     reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    ESPACEDCONCAT   reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    CONCAT          reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    LBRACKET        reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    MODULE          reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    DIVIDE          reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    MULTIPLY        reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    ASTERPOWER      reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    POWER           reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    MINUS           reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    PLUS            reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    SEMICOLON       reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    $end            reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    RPAREN          reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    RBRACE          reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    OR              reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    SINCETHAT       reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    COMMA           reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    RBRACKET        reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    NOT_EQUAL       reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    EQUAL           reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_EQUAL      reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_EQUAL   reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_THAN       reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_THAN    reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    AS              reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    IN              reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    ELSE            reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    ELIF            reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)
    AND             reduce using rule 151 (var_attr -> IDENTIFIER DOT var_attr .)


state 130

    (139) function_call -> IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 131

    (140) function_call -> IDENTIFIER LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 194


state 132

    (147) argument -> expression .
    COMMA           reduce using rule 147 (argument -> expression .)
    RPAREN          reduce using rule 147 (argument -> expression .)
    RBRACKET        reduce using rule 147 (argument -> expression .)


state 133

    (27) type_anotation -> COLON BOOLEAN_TYPE .
    MODULE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    DIVIDE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    MULTIPLY        reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ASTERPOWER      reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    POWER           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    MINUS           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    PLUS            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    SEMICOLON       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    $end            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RBRACE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    OR              reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    SINCETHAT       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    COMMA           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RBRACKET        reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RPAREN          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    NOT_EQUAL       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    EQUAL           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    LESS_EQUAL      reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    GREATER_EQUAL   reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    LESS_THAN       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    GREATER_THAN    reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    AS              reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    IN              reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ELSE            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ELIF            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    AND             reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ASSIGN          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RETURN          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    LBRACE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)


state 134

    (28) type_anotation -> COLON NUMBER_TYPE .
    MODULE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    DIVIDE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    MULTIPLY        reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ASTERPOWER      reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    POWER           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    MINUS           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    PLUS            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    SEMICOLON       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    $end            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RBRACE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    OR              reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    SINCETHAT       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    COMMA           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RBRACKET        reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RPAREN          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    NOT_EQUAL       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    EQUAL           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    LESS_EQUAL      reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    GREATER_EQUAL   reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    LESS_THAN       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    GREATER_THAN    reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    AS              reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    IN              reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ELSE            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ELIF            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    AND             reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ASSIGN          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RETURN          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    LBRACE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)


state 135

    (29) type_anotation -> COLON IDENTIFIER .
    MODULE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    DIVIDE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    MULTIPLY        reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ASTERPOWER      reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    POWER           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    MINUS           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    PLUS            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    SEMICOLON       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    $end            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RBRACE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    OR              reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    SINCETHAT       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    COMMA           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RBRACKET        reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RPAREN          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    EQUAL           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    LESS_EQUAL      reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    GREATER_THAN    reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    AS              reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    IN              reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ELSE            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ELIF            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    AND             reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ASSIGN          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RETURN          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    LBRACE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)


state 136

    (66) function_declaration -> FUNCTION IDENTIFIER LPAREN . RPAREN type_anotation function_inline_declaration
    (68) function_declaration -> FUNCTION IDENTIFIER LPAREN . RPAREN type_anotation function_full_declaration SEMICOLON
    (70) function_declaration -> FUNCTION IDENTIFIER LPAREN . RPAREN type_anotation function_full_declaration
    (72) function_declaration -> FUNCTION IDENTIFIER LPAREN . RPAREN function_inline_declaration
    (74) function_declaration -> FUNCTION IDENTIFIER LPAREN . RPAREN function_full_declaration SEMICOLON
    (76) function_declaration -> FUNCTION IDENTIFIER LPAREN . RPAREN function_full_declaration
    (119) parameters -> LPAREN . arguments_list RPAREN
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 195
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    arguments_list                 shift and go to state 196
    argument                       shift and go to state 107
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 137

    (67) function_declaration -> FUNCTION IDENTIFIER parameters . type_anotation function_inline_declaration
    (69) function_declaration -> FUNCTION IDENTIFIER parameters . type_anotation function_full_declaration SEMICOLON
    (71) function_declaration -> FUNCTION IDENTIFIER parameters . type_anotation function_full_declaration
    (73) function_declaration -> FUNCTION IDENTIFIER parameters . function_inline_declaration
    (75) function_declaration -> FUNCTION IDENTIFIER parameters . function_full_declaration SEMICOLON
    (77) function_declaration -> FUNCTION IDENTIFIER parameters . function_full_declaration
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (79) function_inline_declaration -> . RETURN inst SEMICOLON
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    COLON           shift and go to state 71
    RETURN          shift and go to state 200
    LBRACE          shift and go to state 44

    type_anotation                 shift and go to state 197
    function_inline_declaration    shift and go to state 198
    function_full_declaration      shift and go to state 199
    scope                          shift and go to state 201

state 138

    (11) inst -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    RBRACE          reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)


state 139

    (35) expression -> LPAREN var_asign RPAREN .
    SEMICOLON       reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    $end            reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    RBRACE          reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    OR              reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    SINCETHAT       reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    COMMA           reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    RBRACKET        reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    RPAREN          reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    NOT_EQUAL       reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    EQUAL           reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    LESS_EQUAL      reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    GREATER_EQUAL   reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    LESS_THAN       reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    GREATER_THAN    reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    AS              reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    IN              reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    ELSE            reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    ELIF            reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)
    AND             reduce using rule 35 (expression -> LPAREN var_asign RPAREN .)


state 140

    (52) base_exponent -> LPAREN aritmetic_operation RPAREN .
    MODULE          reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    DIVIDE          reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MULTIPLY        reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ASTERPOWER      reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    POWER           reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MINUS           reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    PLUS            reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SEMICOLON       reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    $end            reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RPAREN          reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RBRACE          reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    OR              reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SINCETHAT       reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    COMMA           reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RBRACKET        reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    NOT_EQUAL       reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    EQUAL           reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_EQUAL      reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_EQUAL   reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_THAN       reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_THAN    reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AS              reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    IN              reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELSE            reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELIF            reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AND             reduce using rule 52 (base_exponent -> LPAREN aritmetic_operation RPAREN .)


state 141

    (151) var_attr -> IDENTIFIER DOT . var_attr
    (152) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (153) var_method -> IDENTIFIER DOT . function_call
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    IDENTIFIER      shift and go to state 202

    var_attr                       shift and go to state 129
    function_call                  shift and go to state 128

state 142

    (111) type_declaration -> TYPE IDENTIFIER inherits_type . decl_body SEMICOLON
    (112) type_declaration -> TYPE IDENTIFIER inherits_type . decl_body
    (122) decl_body -> . LBRACE decl_list RBRACE
    (123) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 146

    decl_body                      shift and go to state 203

state 143

    (113) type_declaration -> TYPE IDENTIFIER decl_body . SEMICOLON
    (114) type_declaration -> TYPE IDENTIFIER decl_body .
    SEMICOLON       shift and go to state 204
    PROTOCOL        reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FUNCTION        reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    TYPE            reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LPAREN          reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LET             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    NUMBER          reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    STRING          reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FOR             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    IF              reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    WHILE           reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LBRACE          reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    IDENTIFIER      reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    E_CONST         reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PI_CONST        reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    RAND            reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LOG             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    EXP             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    COS             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    SIN             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    SQRT            reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FALSE           reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    TRUE            reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    NEW             reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LBRACKET        reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PRINT           reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    RANGE           reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PLUS            reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    MINUS           reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)
    $end            reduce using rule 114 (type_declaration -> TYPE IDENTIFIER decl_body .)


state 144

    (115) type_declaration -> TYPE IDENTIFIER parameters . inherits_type decl_body SEMICOLON
    (116) type_declaration -> TYPE IDENTIFIER parameters . inherits_type decl_body
    (117) type_declaration -> TYPE IDENTIFIER parameters . decl_body SEMICOLON
    (118) type_declaration -> TYPE IDENTIFIER parameters . decl_body
    (120) inherits_type -> . INHERITS IDENTIFIER parameters
    (121) inherits_type -> . INHERITS IDENTIFIER
    (122) decl_body -> . LBRACE decl_list RBRACE
    (123) decl_body -> . LBRACE RBRACE
    INHERITS        shift and go to state 145
    LBRACE          shift and go to state 146

    inherits_type                  shift and go to state 205
    decl_body                      shift and go to state 206

state 145

    (120) inherits_type -> INHERITS . IDENTIFIER parameters
    (121) inherits_type -> INHERITS . IDENTIFIER
    IDENTIFIER      shift and go to state 207


state 146

    (122) decl_body -> LBRACE . decl_list RBRACE
    (123) decl_body -> LBRACE . RBRACE
    (124) decl_list -> . decl SEMICOLON decl_list
    (125) decl_list -> . decl SEMICOLON
    (126) decl -> . method_declaration
    (127) decl -> . atribute_declaration
    (130) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (131) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (132) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (133) method_declaration -> . IDENTIFIER parameters type_anotation function_full_declaration
    (134) method_declaration -> . IDENTIFIER parameters type_anotation RETURN expression
    (135) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (136) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (137) method_declaration -> . IDENTIFIER parameters function_full_declaration
    (138) method_declaration -> . IDENTIFIER parameters RETURN expression
    (128) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (129) atribute_declaration -> . identifier ASSIGN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          shift and go to state 209
    IDENTIFIER      shift and go to state 213
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    decl_list                      shift and go to state 208
    decl                           shift and go to state 210
    method_declaration             shift and go to state 211
    atribute_declaration           shift and go to state 212
    identifier                     shift and go to state 214
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 147

    (119) parameters -> LPAREN . arguments_list RPAREN
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    arguments_list                 shift and go to state 196
    argument                       shift and go to state 107
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 148

    (37) expression -> atom ESPACEDCONCAT expression .
    SEMICOLON       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    $end            reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    RBRACE          reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    OR              reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    SINCETHAT       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    COMMA           reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    RBRACKET        reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    RPAREN          reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    EQUAL           reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    LESS_THAN       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_THAN    reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    AS              reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    IN              reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    ELSE            reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    ELIF            reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    AND             reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)


state 149

    (38) expression -> atom CONCAT expression .
    SEMICOLON       reduce using rule 38 (expression -> atom CONCAT expression .)
    $end            reduce using rule 38 (expression -> atom CONCAT expression .)
    RBRACE          reduce using rule 38 (expression -> atom CONCAT expression .)
    OR              reduce using rule 38 (expression -> atom CONCAT expression .)
    SINCETHAT       reduce using rule 38 (expression -> atom CONCAT expression .)
    COMMA           reduce using rule 38 (expression -> atom CONCAT expression .)
    RBRACKET        reduce using rule 38 (expression -> atom CONCAT expression .)
    RPAREN          reduce using rule 38 (expression -> atom CONCAT expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> atom CONCAT expression .)
    EQUAL           reduce using rule 38 (expression -> atom CONCAT expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> atom CONCAT expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> atom CONCAT expression .)
    LESS_THAN       reduce using rule 38 (expression -> atom CONCAT expression .)
    GREATER_THAN    reduce using rule 38 (expression -> atom CONCAT expression .)
    AS              reduce using rule 38 (expression -> atom CONCAT expression .)
    IN              reduce using rule 38 (expression -> atom CONCAT expression .)
    ELSE            reduce using rule 38 (expression -> atom CONCAT expression .)
    ELIF            reduce using rule 38 (expression -> atom CONCAT expression .)
    AND             reduce using rule 38 (expression -> atom CONCAT expression .)


state 150

    (148) var_use -> atom LBRACKET expression . RBRACKET
    RBRACKET        shift and go to state 215


state 151

    (15) var_dec -> LET var_init_list IN . var_decl_expr
    (16) var_decl_expr -> . LPAREN var_dec RPAREN
    (17) var_decl_expr -> . expression
    (18) var_decl_expr -> . flux_control
    (19) var_decl_expr -> . scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 217
    LBRACE          shift and go to state 44
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    var_decl_expr                  shift and go to state 216
    var_dec                        shift and go to state 15
    expression                     shift and go to state 218
    flux_control                   shift and go to state 219
    scope                          shift and go to state 220
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 152

    (20) var_init_list -> var_init COMMA . var_init_list
    (20) var_init_list -> . var_init COMMA var_init_list
    (21) var_init_list -> . var_init
    (22) var_init -> . identifier ASSIGN inst type_downcast
    (23) var_init -> . identifier ASSIGN inst
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    var_init                       shift and go to state 85
    var_init_list                  shift and go to state 221
    identifier                     shift and go to state 86
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 153

    (22) var_init -> identifier ASSIGN . inst type_downcast
    (23) var_init -> identifier ASSIGN . inst
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    LBRACE          shift and go to state 44
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    identifier                     shift and go to state 41
    inst                           shift and go to state 222
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    scope                          shift and go to state 25
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 154

    (64) var_asign -> var_use ASSIGN expression .
    SEMICOLON       reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    $end            reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    RPAREN          reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    RBRACE          reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    OR              reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    SINCETHAT       reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    COMMA           reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    RBRACKET        reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    NOT_EQUAL       reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    EQUAL           reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    LESS_EQUAL      reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    LESS_THAN       reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    GREATER_THAN    reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    AS              reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    IN              reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    ELSE            reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    ELIF            reduce using rule 64 (var_asign -> var_use ASSIGN expression .)
    AND             reduce using rule 64 (var_asign -> var_use ASSIGN expression .)


state 155

    (65) var_asign -> var_use DEST_ASSIGN expression .
    SEMICOLON       reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    $end            reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    RPAREN          reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    RBRACE          reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    OR              reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    SINCETHAT       reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    COMMA           reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    RBRACKET        reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    EQUAL           reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_THAN       reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_THAN    reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    AS              reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    IN              reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    ELSE            reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    ELIF            reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)
    AND             reduce using rule 65 (var_asign -> var_use DEST_ASSIGN expression .)


state 156

    (41) aritmetic_operation -> term MINUS aritmetic_operation .
    SEMICOLON       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    $end            reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RPAREN          reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RBRACE          reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    OR              reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    SINCETHAT       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    COMMA           reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RBRACKET        reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    EQUAL           reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_THAN       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AS              reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    IN              reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELSE            reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELIF            reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AND             reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)


state 157

    (42) aritmetic_operation -> term PLUS aritmetic_operation .
    SEMICOLON       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    $end            reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RPAREN          reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RBRACE          reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    OR              reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    SINCETHAT       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    COMMA           reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RBRACKET        reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    EQUAL           reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_THAN       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AS              reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    IN              reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELSE            reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELIF            reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AND             reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)


state 158

    (94) for_loop -> FOR LPAREN identifier . IN expression RPAREN expression
    (95) for_loop -> FOR LPAREN identifier . IN expression RPAREN scope
    IN              shift and go to state 223


state 159

    (100) condition -> LPAREN . conditional_expression RPAREN
    (35) expression -> LPAREN . var_asign RPAREN
    (52) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 163
    LPAREN          shift and go to state 159
    IDENTIFIER      shift and go to state 227
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    LET             shift and go to state 26
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    conditional_expression         shift and go to state 224
    var_asign                      shift and go to state 225
    aritmetic_operation            shift and go to state 226
    condition                      shift and go to state 162
    var_use                        shift and go to state 27
    expression                     shift and go to state 161
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    atom                           shift and go to state 228
    var_attr                       shift and go to state 46
    factor                         shift and go to state 60
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    base_exponent                  shift and go to state 63
    var_dec                        shift and go to state 15
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    fully_typed_param              shift and go to state 64

state 160

    (83) full_conditional -> LPAREN conditional_expression . RPAREN scope_list else_elif_statement
    (82) inline_conditional -> LPAREN conditional_expression . RPAREN expression else_elif_statement
    RPAREN          shift and go to state 229


state 161

    (103) comparation -> expression . NOT_EQUAL expression
    (104) comparation -> expression . EQUAL expression
    (105) comparation -> expression . LESS_EQUAL expression
    (106) comparation -> expression . GREATER_EQUAL expression
    (107) comparation -> expression . LESS_THAN expression
    (108) comparation -> expression . GREATER_THAN expression
    NOT_EQUAL       shift and go to state 230
    EQUAL           shift and go to state 231
    LESS_EQUAL      shift and go to state 232
    GREATER_EQUAL   shift and go to state 233
    LESS_THAN       shift and go to state 234
    GREATER_THAN    shift and go to state 235


state 162

    (96) conditional_expression -> condition .
    (98) conditional_expression -> condition . OR conditional_expression
    (99) conditional_expression -> condition . AND conditional_expression
    RPAREN          reduce using rule 96 (conditional_expression -> condition .)
    SEMICOLON       reduce using rule 96 (conditional_expression -> condition .)
    OR              shift and go to state 236
    AND             shift and go to state 237


state 163

    (97) conditional_expression -> NOT . condition
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 159
    IDENTIFIER      shift and go to state 164
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    condition                      shift and go to state 238
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    expression                     shift and go to state 161
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 164

    (101) condition -> IDENTIFIER . IS identifier
    (150) var_use -> IDENTIFIER .
    (153) var_method -> IDENTIFIER . DOT function_call
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    IS              shift and go to state 239
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 150 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 150 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 150 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 150 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 150 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 150 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 150 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 150 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 150 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 150 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 150 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 150 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 150 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 68
    LPAREN          shift and go to state 69
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70

state 165

    (102) condition -> comparation .
    OR              reduce using rule 102 (condition -> comparation .)
    AND             reduce using rule 102 (condition -> comparation .)
    RPAREN          reduce using rule 102 (condition -> comparation .)
    SEMICOLON       reduce using rule 102 (condition -> comparation .)


state 166

    (35) expression -> LPAREN . var_asign RPAREN
    (100) condition -> LPAREN . conditional_expression RPAREN
    (52) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 163
    IDENTIFIER      shift and go to state 240
    LPAREN          shift and go to state 159
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    LET             shift and go to state 26

    var_asign                      shift and go to state 225
    conditional_expression         shift and go to state 224
    aritmetic_operation            shift and go to state 226
    var_use                        shift and go to state 27
    expression                     shift and go to state 161
    condition                      shift and go to state 162
    term                           shift and go to state 37
    atom                           shift and go to state 228
    var_attr                       shift and go to state 46
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    factor                         shift and go to state 60
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    base_exponent                  shift and go to state 63
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_dec                        shift and go to state 15
    fully_typed_param              shift and go to state 64

state 167

    (90) while_loop -> WHILE LPAREN expression . RPAREN expression
    (91) while_loop -> WHILE LPAREN expression . RPAREN scope
    (103) comparation -> expression . NOT_EQUAL expression
    (104) comparation -> expression . EQUAL expression
    (105) comparation -> expression . LESS_EQUAL expression
    (106) comparation -> expression . GREATER_EQUAL expression
    (107) comparation -> expression . LESS_THAN expression
    (108) comparation -> expression . GREATER_THAN expression
    RPAREN          shift and go to state 241
    NOT_EQUAL       shift and go to state 230
    EQUAL           shift and go to state 231
    LESS_EQUAL      shift and go to state 232
    GREATER_EQUAL   shift and go to state 233
    LESS_THAN       shift and go to state 234
    GREATER_THAN    shift and go to state 235


state 168

    (92) while_loop -> WHILE LPAREN conditional_expression . RPAREN expression
    (93) while_loop -> WHILE LPAREN conditional_expression . RPAREN scope
    RPAREN          shift and go to state 242


state 169

    (33) scope -> LBRACE inst_list RBRACE .
    LBRACE          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SEMICOLON       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    $end            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RBRACE          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    AS              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    COMMA           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    IN              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    ELSE            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    ELIF            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PROTOCOL        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    FUNCTION        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    TYPE            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LPAREN          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LET             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    NUMBER          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    STRING          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    FOR             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    IF              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    WHILE           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    IDENTIFIER      reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    E_CONST         reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PI_CONST        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RAND            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LOG             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    EXP             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    COS             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SIN             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SQRT            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    FALSE           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    TRUE            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    NEW             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LBRACKET        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PRINT           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RANGE           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PLUS            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    MINUS           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    OR              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SINCETHAT       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RBRACKET        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RPAREN          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    NOT_EQUAL       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    EQUAL           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LESS_EQUAL      reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    GREATER_EQUAL   reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LESS_THAN       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    GREATER_THAN    reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    AND             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)


state 170

    (166) vector -> LBRACKET vector_decl RBRACKET .
    ESPACEDCONCAT   reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    CONCAT          reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    LBRACKET        reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    MODULE          reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    DIVIDE          reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    MULTIPLY        reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    ASTERPOWER      reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    POWER           reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    MINUS           reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    PLUS            reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    SEMICOLON       reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    $end            reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    RPAREN          reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    ASSIGN          reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    RBRACE          reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    OR              reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    SINCETHAT       reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    COMMA           reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    RBRACKET        reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    NOT_EQUAL       reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    EQUAL           reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_EQUAL      reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_EQUAL   reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_THAN       reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_THAN    reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    AS              reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    IN              reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    ELSE            reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    ELIF            reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)
    AND             reduce using rule 166 (vector -> LBRACKET vector_decl RBRACKET .)


state 171

    (167) vector_decl -> expression OR . identifier IN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    identifier                     shift and go to state 243
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 172

    (168) vector_decl -> expression SINCETHAT . identifier IN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    identifier                     shift and go to state 244
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 173

    (144) arguments_list -> argument COMMA . arguments_list
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 107
    arguments_list                 shift and go to state 245
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 174

    (172) build_in_functions -> RAND LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    CONCAT          reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    LBRACKET        reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    MODULE          reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    DIVIDE          reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    MULTIPLY        reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    POWER           reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    MINUS           reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    PLUS            reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    SEMICOLON       reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    $end            reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    RPAREN          reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    ASSIGN          reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    RBRACE          reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    OR              reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    SINCETHAT       reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    COMMA           reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    RBRACKET        reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    EQUAL           reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_THAN       reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    AS              reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    IN              reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    ELSE            reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    ELIF            reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)
    AND             reduce using rule 172 (build_in_functions -> RAND LPAREN RPAREN .)


state 175

    (173) build_in_functions -> LOG LPAREN argument . COMMA argument RPAREN
    COMMA           shift and go to state 246


state 176

    (174) build_in_functions -> EXP LPAREN argument . RPAREN
    RPAREN          shift and go to state 247


state 177

    (175) build_in_functions -> COS LPAREN argument . RPAREN
    RPAREN          shift and go to state 248


state 178

    (176) build_in_functions -> SIN LPAREN argument . RPAREN
    RPAREN          shift and go to state 249


state 179

    (177) build_in_functions -> SQRT LPAREN argument . RPAREN
    RPAREN          shift and go to state 250


state 180

    (141) type_instanciation -> NEW IDENTIFIER LPAREN . RPAREN
    (142) type_instanciation -> NEW IDENTIFIER LPAREN . arguments_list RPAREN
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 251
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    arguments_list                 shift and go to state 252
    argument                       shift and go to state 107
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 181

    (44) term -> factor MODULE term .
    MINUS           reduce using rule 44 (term -> factor MODULE term .)
    PLUS            reduce using rule 44 (term -> factor MODULE term .)
    SEMICOLON       reduce using rule 44 (term -> factor MODULE term .)
    $end            reduce using rule 44 (term -> factor MODULE term .)
    RPAREN          reduce using rule 44 (term -> factor MODULE term .)
    RBRACE          reduce using rule 44 (term -> factor MODULE term .)
    OR              reduce using rule 44 (term -> factor MODULE term .)
    SINCETHAT       reduce using rule 44 (term -> factor MODULE term .)
    COMMA           reduce using rule 44 (term -> factor MODULE term .)
    RBRACKET        reduce using rule 44 (term -> factor MODULE term .)
    NOT_EQUAL       reduce using rule 44 (term -> factor MODULE term .)
    EQUAL           reduce using rule 44 (term -> factor MODULE term .)
    LESS_EQUAL      reduce using rule 44 (term -> factor MODULE term .)
    GREATER_EQUAL   reduce using rule 44 (term -> factor MODULE term .)
    LESS_THAN       reduce using rule 44 (term -> factor MODULE term .)
    GREATER_THAN    reduce using rule 44 (term -> factor MODULE term .)
    AS              reduce using rule 44 (term -> factor MODULE term .)
    IN              reduce using rule 44 (term -> factor MODULE term .)
    ELSE            reduce using rule 44 (term -> factor MODULE term .)
    ELIF            reduce using rule 44 (term -> factor MODULE term .)
    AND             reduce using rule 44 (term -> factor MODULE term .)


state 182

    (45) term -> factor DIVIDE term .
    MINUS           reduce using rule 45 (term -> factor DIVIDE term .)
    PLUS            reduce using rule 45 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 45 (term -> factor DIVIDE term .)
    $end            reduce using rule 45 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 45 (term -> factor DIVIDE term .)
    RBRACE          reduce using rule 45 (term -> factor DIVIDE term .)
    OR              reduce using rule 45 (term -> factor DIVIDE term .)
    SINCETHAT       reduce using rule 45 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 45 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 45 (term -> factor DIVIDE term .)
    NOT_EQUAL       reduce using rule 45 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 45 (term -> factor DIVIDE term .)
    LESS_EQUAL      reduce using rule 45 (term -> factor DIVIDE term .)
    GREATER_EQUAL   reduce using rule 45 (term -> factor DIVIDE term .)
    LESS_THAN       reduce using rule 45 (term -> factor DIVIDE term .)
    GREATER_THAN    reduce using rule 45 (term -> factor DIVIDE term .)
    AS              reduce using rule 45 (term -> factor DIVIDE term .)
    IN              reduce using rule 45 (term -> factor DIVIDE term .)
    ELSE            reduce using rule 45 (term -> factor DIVIDE term .)
    ELIF            reduce using rule 45 (term -> factor DIVIDE term .)
    AND             reduce using rule 45 (term -> factor DIVIDE term .)


state 183

    (46) term -> factor MULTIPLY term .
    MINUS           reduce using rule 46 (term -> factor MULTIPLY term .)
    PLUS            reduce using rule 46 (term -> factor MULTIPLY term .)
    SEMICOLON       reduce using rule 46 (term -> factor MULTIPLY term .)
    $end            reduce using rule 46 (term -> factor MULTIPLY term .)
    RPAREN          reduce using rule 46 (term -> factor MULTIPLY term .)
    RBRACE          reduce using rule 46 (term -> factor MULTIPLY term .)
    OR              reduce using rule 46 (term -> factor MULTIPLY term .)
    SINCETHAT       reduce using rule 46 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 46 (term -> factor MULTIPLY term .)
    RBRACKET        reduce using rule 46 (term -> factor MULTIPLY term .)
    NOT_EQUAL       reduce using rule 46 (term -> factor MULTIPLY term .)
    EQUAL           reduce using rule 46 (term -> factor MULTIPLY term .)
    LESS_EQUAL      reduce using rule 46 (term -> factor MULTIPLY term .)
    GREATER_EQUAL   reduce using rule 46 (term -> factor MULTIPLY term .)
    LESS_THAN       reduce using rule 46 (term -> factor MULTIPLY term .)
    GREATER_THAN    reduce using rule 46 (term -> factor MULTIPLY term .)
    AS              reduce using rule 46 (term -> factor MULTIPLY term .)
    IN              reduce using rule 46 (term -> factor MULTIPLY term .)
    ELSE            reduce using rule 46 (term -> factor MULTIPLY term .)
    ELIF            reduce using rule 46 (term -> factor MULTIPLY term .)
    AND             reduce using rule 46 (term -> factor MULTIPLY term .)


state 184

    (50) factor -> factor ASTERPOWER base_exponent .
    MODULE          reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    DIVIDE          reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    MULTIPLY        reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    ASTERPOWER      reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    POWER           reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    MINUS           reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    PLUS            reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    SEMICOLON       reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    $end            reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    RPAREN          reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    RBRACE          reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    OR              reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    SINCETHAT       reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    COMMA           reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    RBRACKET        reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    NOT_EQUAL       reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    EQUAL           reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    LESS_EQUAL      reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_EQUAL   reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    LESS_THAN       reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_THAN    reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    AS              reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    IN              reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    ELSE            reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    ELIF            reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)
    AND             reduce using rule 50 (factor -> factor ASTERPOWER base_exponent .)


state 185

    (51) factor -> factor POWER base_exponent .
    MODULE          reduce using rule 51 (factor -> factor POWER base_exponent .)
    DIVIDE          reduce using rule 51 (factor -> factor POWER base_exponent .)
    MULTIPLY        reduce using rule 51 (factor -> factor POWER base_exponent .)
    ASTERPOWER      reduce using rule 51 (factor -> factor POWER base_exponent .)
    POWER           reduce using rule 51 (factor -> factor POWER base_exponent .)
    MINUS           reduce using rule 51 (factor -> factor POWER base_exponent .)
    PLUS            reduce using rule 51 (factor -> factor POWER base_exponent .)
    SEMICOLON       reduce using rule 51 (factor -> factor POWER base_exponent .)
    $end            reduce using rule 51 (factor -> factor POWER base_exponent .)
    RPAREN          reduce using rule 51 (factor -> factor POWER base_exponent .)
    RBRACE          reduce using rule 51 (factor -> factor POWER base_exponent .)
    OR              reduce using rule 51 (factor -> factor POWER base_exponent .)
    SINCETHAT       reduce using rule 51 (factor -> factor POWER base_exponent .)
    COMMA           reduce using rule 51 (factor -> factor POWER base_exponent .)
    RBRACKET        reduce using rule 51 (factor -> factor POWER base_exponent .)
    NOT_EQUAL       reduce using rule 51 (factor -> factor POWER base_exponent .)
    EQUAL           reduce using rule 51 (factor -> factor POWER base_exponent .)
    LESS_EQUAL      reduce using rule 51 (factor -> factor POWER base_exponent .)
    GREATER_EQUAL   reduce using rule 51 (factor -> factor POWER base_exponent .)
    LESS_THAN       reduce using rule 51 (factor -> factor POWER base_exponent .)
    GREATER_THAN    reduce using rule 51 (factor -> factor POWER base_exponent .)
    AS              reduce using rule 51 (factor -> factor POWER base_exponent .)
    IN              reduce using rule 51 (factor -> factor POWER base_exponent .)
    ELSE            reduce using rule 51 (factor -> factor POWER base_exponent .)
    ELIF            reduce using rule 51 (factor -> factor POWER base_exponent .)
    AND             reduce using rule 51 (factor -> factor POWER base_exponent .)


state 186

    (171) build_in_print -> PRINT LPAREN argument . RPAREN
    RPAREN          shift and go to state 253


state 187

    (170) build_in_range -> RANGE LPAREN argument . COMMA argument RPAREN
    COMMA           shift and go to state 254


state 188

    (157) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body SEMICOLON
    (158) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body
    (161) protocol_body -> . LBRACE virtual_method_list RBRACE
    LBRACE          shift and go to state 126

    protocol_body                  shift and go to state 255

state 189

    (159) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PLUS            reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    MINUS           reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 159 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)


state 190

    (161) protocol_body -> LBRACE virtual_method_list . RBRACE
    RBRACE          shift and go to state 256


state 191

    (162) virtual_method_list -> virtual_method . SEMICOLON virtual_method_list
    (163) virtual_method_list -> virtual_method . SEMICOLON
    SEMICOLON       shift and go to state 257


state 192

    (164) virtual_method -> IDENTIFIER . parameters type_anotation
    (165) virtual_method -> IDENTIFIER . LPAREN RPAREN type_anotation
    (119) parameters -> . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 259

    parameters                     shift and go to state 258

state 193

    (151) var_attr -> IDENTIFIER DOT . var_attr
    (152) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 260

    var_attr                       shift and go to state 129

state 194

    (140) function_call -> IDENTIFIER LPAREN arguments_list RPAREN .
    ESPACEDCONCAT   reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    CONCAT          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LBRACKET        reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MODULE          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    DIVIDE          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MULTIPLY        reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASTERPOWER      reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    POWER           reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MINUS           reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    PLUS            reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    SEMICOLON       reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    $end            reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RPAREN          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACE          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    OR              reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    SINCETHAT       reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    COMMA           reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACKET        reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    NOT_EQUAL       reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    EQUAL           reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_EQUAL      reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_EQUAL   reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_THAN       reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_THAN    reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    AS              reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    IN              reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ELSE            reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ELIF            reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    AND             reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)


state 195

    (66) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN . type_anotation function_inline_declaration
    (68) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN . type_anotation function_full_declaration SEMICOLON
    (70) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN . type_anotation function_full_declaration
    (72) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN . function_inline_declaration
    (74) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN . function_full_declaration SEMICOLON
    (76) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN . function_full_declaration
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (79) function_inline_declaration -> . RETURN inst SEMICOLON
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    COLON           shift and go to state 71
    RETURN          shift and go to state 200
    LBRACE          shift and go to state 44

    type_anotation                 shift and go to state 261
    function_inline_declaration    shift and go to state 262
    function_full_declaration      shift and go to state 263
    scope                          shift and go to state 201

state 196

    (119) parameters -> LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 264


state 197

    (67) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation . function_inline_declaration
    (69) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation . function_full_declaration SEMICOLON
    (71) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation . function_full_declaration
    (79) function_inline_declaration -> . RETURN inst SEMICOLON
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 200
    LBRACE          shift and go to state 44

    function_inline_declaration    shift and go to state 265
    function_full_declaration      shift and go to state 266
    scope                          shift and go to state 201

state 198

    (73) function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .
    PROTOCOL        reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    FUNCTION        reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    TYPE            reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    LPAREN          reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    LET             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    NUMBER          reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    STRING          reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    FOR             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    IF              reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    WHILE           reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    LBRACE          reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    IDENTIFIER      reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    E_CONST         reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    PI_CONST        reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    RAND            reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    LOG             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    EXP             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    COS             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    SIN             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    SQRT            reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    FALSE           reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    TRUE            reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    NEW             reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    LBRACKET        reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    PRINT           reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    RANGE           reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    PLUS            reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    MINUS           reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)
    $end            reduce using rule 73 (function_declaration -> FUNCTION IDENTIFIER parameters function_inline_declaration .)


state 199

    (75) function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration . SEMICOLON
    (77) function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .
    SEMICOLON       shift and go to state 267
    PROTOCOL        reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    FUNCTION        reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    TYPE            reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    LPAREN          reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    LET             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    NUMBER          reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    STRING          reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    FOR             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    IF              reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    WHILE           reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    LBRACE          reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    IDENTIFIER      reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    E_CONST         reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    PI_CONST        reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    RAND            reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    LOG             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    EXP             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    COS             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    SIN             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    SQRT            reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    FALSE           reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    TRUE            reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    NEW             reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    LBRACKET        reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    PRINT           reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    RANGE           reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    PLUS            reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    MINUS           reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)
    $end            reduce using rule 77 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration .)


state 200

    (79) function_inline_declaration -> RETURN . inst SEMICOLON
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (154) flux_control -> . for_loop
    (155) flux_control -> . conditional
    (156) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (95) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (90) while_loop -> . WHILE LPAREN expression RPAREN expression
    (91) while_loop -> . WHILE LPAREN expression RPAREN scope
    (92) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (93) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    FOR             shift and go to state 40
    IF              shift and go to state 42
    WHILE           shift and go to state 43
    LBRACE          shift and go to state 44
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    inst                           shift and go to state 268
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    for_loop                       shift and go to state 22
    conditional                    shift and go to state 23
    while_loop                     shift and go to state 24
    scope                          shift and go to state 25
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    identifier                     shift and go to state 41
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 201

    (78) function_full_declaration -> scope .
    SEMICOLON       reduce using rule 78 (function_full_declaration -> scope .)
    PROTOCOL        reduce using rule 78 (function_full_declaration -> scope .)
    FUNCTION        reduce using rule 78 (function_full_declaration -> scope .)
    TYPE            reduce using rule 78 (function_full_declaration -> scope .)
    LPAREN          reduce using rule 78 (function_full_declaration -> scope .)
    LET             reduce using rule 78 (function_full_declaration -> scope .)
    NUMBER          reduce using rule 78 (function_full_declaration -> scope .)
    STRING          reduce using rule 78 (function_full_declaration -> scope .)
    FOR             reduce using rule 78 (function_full_declaration -> scope .)
    IF              reduce using rule 78 (function_full_declaration -> scope .)
    WHILE           reduce using rule 78 (function_full_declaration -> scope .)
    LBRACE          reduce using rule 78 (function_full_declaration -> scope .)
    IDENTIFIER      reduce using rule 78 (function_full_declaration -> scope .)
    E_CONST         reduce using rule 78 (function_full_declaration -> scope .)
    PI_CONST        reduce using rule 78 (function_full_declaration -> scope .)
    RAND            reduce using rule 78 (function_full_declaration -> scope .)
    LOG             reduce using rule 78 (function_full_declaration -> scope .)
    EXP             reduce using rule 78 (function_full_declaration -> scope .)
    COS             reduce using rule 78 (function_full_declaration -> scope .)
    SIN             reduce using rule 78 (function_full_declaration -> scope .)
    SQRT            reduce using rule 78 (function_full_declaration -> scope .)
    FALSE           reduce using rule 78 (function_full_declaration -> scope .)
    TRUE            reduce using rule 78 (function_full_declaration -> scope .)
    NEW             reduce using rule 78 (function_full_declaration -> scope .)
    LBRACKET        reduce using rule 78 (function_full_declaration -> scope .)
    PRINT           reduce using rule 78 (function_full_declaration -> scope .)
    RANGE           reduce using rule 78 (function_full_declaration -> scope .)
    PLUS            reduce using rule 78 (function_full_declaration -> scope .)
    MINUS           reduce using rule 78 (function_full_declaration -> scope .)
    $end            reduce using rule 78 (function_full_declaration -> scope .)


state 202

    (152) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    ASSIGN          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DOT             shift and go to state 193
    LPAREN          shift and go to state 69


state 203

    (111) type_declaration -> TYPE IDENTIFIER inherits_type decl_body . SEMICOLON
    (112) type_declaration -> TYPE IDENTIFIER inherits_type decl_body .
    SEMICOLON       shift and go to state 269
    PROTOCOL        reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FUNCTION        reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    TYPE            reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LPAREN          reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LET             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    NUMBER          reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    STRING          reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FOR             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    IF              reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    WHILE           reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LBRACE          reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    IDENTIFIER      reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    E_CONST         reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PI_CONST        reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    RAND            reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LOG             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    EXP             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    COS             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    SIN             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    SQRT            reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FALSE           reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    TRUE            reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    NEW             reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LBRACKET        reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PRINT           reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    RANGE           reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PLUS            reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    MINUS           reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    $end            reduce using rule 112 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)


state 204

    (113) type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .
    PROTOCOL        reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FUNCTION        reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    TYPE            reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LPAREN          reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LET             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    NUMBER          reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    STRING          reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FOR             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    IF              reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    WHILE           reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LBRACE          reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    E_CONST         reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PI_CONST        reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    RAND            reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LOG             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    EXP             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    COS             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    SIN             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    SQRT            reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FALSE           reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    TRUE            reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    NEW             reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LBRACKET        reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PRINT           reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    RANGE           reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PLUS            reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    MINUS           reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    $end            reduce using rule 113 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)


state 205

    (115) type_declaration -> TYPE IDENTIFIER parameters inherits_type . decl_body SEMICOLON
    (116) type_declaration -> TYPE IDENTIFIER parameters inherits_type . decl_body
    (122) decl_body -> . LBRACE decl_list RBRACE
    (123) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 146

    decl_body                      shift and go to state 270

state 206

    (117) type_declaration -> TYPE IDENTIFIER parameters decl_body . SEMICOLON
    (118) type_declaration -> TYPE IDENTIFIER parameters decl_body .
    SEMICOLON       shift and go to state 271
    PROTOCOL        reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FUNCTION        reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    TYPE            reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LPAREN          reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LET             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    NUMBER          reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    STRING          reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FOR             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    IF              reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    WHILE           reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LBRACE          reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    IDENTIFIER      reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    E_CONST         reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PI_CONST        reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    RAND            reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LOG             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    EXP             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    COS             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    SIN             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    SQRT            reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FALSE           reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    TRUE            reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    NEW             reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LBRACKET        reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PRINT           reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    RANGE           reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PLUS            reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    MINUS           reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    $end            reduce using rule 118 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)


state 207

    (120) inherits_type -> INHERITS IDENTIFIER . parameters
    (121) inherits_type -> INHERITS IDENTIFIER .
    (119) parameters -> . LPAREN arguments_list RPAREN
    LBRACE          reduce using rule 121 (inherits_type -> INHERITS IDENTIFIER .)
    LPAREN          shift and go to state 147

    parameters                     shift and go to state 272

state 208

    (122) decl_body -> LBRACE decl_list . RBRACE
    RBRACE          shift and go to state 273


state 209

    (123) decl_body -> LBRACE RBRACE .
    SEMICOLON       reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    TYPE            reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    LPAREN          reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    LET             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    NUMBER          reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    STRING          reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    FOR             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    IF              reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    WHILE           reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    LBRACE          reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    E_CONST         reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    RAND            reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    LOG             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    EXP             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    COS             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    SIN             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    SQRT            reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    FALSE           reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    TRUE            reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    NEW             reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    PRINT           reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    RANGE           reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    PLUS            reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    MINUS           reduce using rule 123 (decl_body -> LBRACE RBRACE .)
    $end            reduce using rule 123 (decl_body -> LBRACE RBRACE .)


state 210

    (124) decl_list -> decl . SEMICOLON decl_list
    (125) decl_list -> decl . SEMICOLON
    SEMICOLON       shift and go to state 274


state 211

    (126) decl -> method_declaration .
    SEMICOLON       reduce using rule 126 (decl -> method_declaration .)


state 212

    (127) decl -> atribute_declaration .
    SEMICOLON       reduce using rule 127 (decl -> atribute_declaration .)


state 213

    (130) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation function_full_declaration
    (131) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN conditional_expression
    (132) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN expression
    (133) method_declaration -> IDENTIFIER . parameters type_anotation function_full_declaration
    (134) method_declaration -> IDENTIFIER . parameters type_anotation RETURN expression
    (135) method_declaration -> IDENTIFIER . LPAREN RPAREN function_full_declaration
    (136) method_declaration -> IDENTIFIER . LPAREN RPAREN RETURN expression
    (137) method_declaration -> IDENTIFIER . parameters function_full_declaration
    (138) method_declaration -> IDENTIFIER . parameters RETURN expression
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (153) var_method -> IDENTIFIER . DOT function_call
    (150) var_use -> IDENTIFIER .
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (119) parameters -> . LPAREN arguments_list RPAREN
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    LPAREN          shift and go to state 275
    DOT             shift and go to state 68
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70
    parameters                     shift and go to state 276

state 214

    (128) atribute_declaration -> identifier . ASSIGN expression type_downcast
    (129) atribute_declaration -> identifier . ASSIGN expression
    ASSIGN          shift and go to state 277


state 215

    (148) var_use -> atom LBRACKET expression RBRACKET .
    ASSIGN          reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    DEST_ASSIGN     reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    ESPACEDCONCAT   reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    CONCAT          reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    MODULE          reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    ASTERPOWER      reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    POWER           reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    $end            reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    OR              reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    SINCETHAT       reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_EQUAL      reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_EQUAL   reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    AS              reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    IN              reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    ELIF            reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)
    AND             reduce using rule 148 (var_use -> atom LBRACKET expression RBRACKET .)


state 216

    (15) var_dec -> LET var_init_list IN var_decl_expr .
    SEMICOLON       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    $end            reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    RPAREN          reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    RBRACE          reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    OR              reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    SINCETHAT       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    COMMA           reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    RBRACKET        reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    NOT_EQUAL       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    EQUAL           reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_EQUAL      reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_EQUAL   reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_THAN       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_THAN    reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    AS              reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    IN              reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELSE            reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELIF            reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    AND             reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)


state 217

    (16) var_decl_expr -> LPAREN . var_dec RPAREN
    (35) expression -> LPAREN . var_asign RPAREN
    (52) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 26
    IDENTIFIER      shift and go to state 78
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    LPAREN          shift and go to state 73
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    var_dec                        shift and go to state 278
    var_asign                      shift and go to state 75
    aritmetic_operation            shift and go to state 76
    var_use                        shift and go to state 27
    term                           shift and go to state 37
    atom                           shift and go to state 77
    var_attr                       shift and go to state 46
    factor                         shift and go to state 60
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    base_exponent                  shift and go to state 63
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 218

    (17) var_decl_expr -> expression .
    SEMICOLON       reduce using rule 17 (var_decl_expr -> expression .)
    $end            reduce using rule 17 (var_decl_expr -> expression .)
    RBRACE          reduce using rule 17 (var_decl_expr -> expression .)
    OR              reduce using rule 17 (var_decl_expr -> expression .)
    SINCETHAT       reduce using rule 17 (var_decl_expr -> expression .)
    COMMA           reduce using rule 17 (var_decl_expr -> expression .)
    RBRACKET        reduce using rule 17 (var_decl_expr -> expression .)
    RPAREN          reduce using rule 17 (var_decl_expr -> expression .)
    NOT_EQUAL       reduce using rule 17 (var_decl_expr -> expression .)
    EQUAL           reduce using rule 17 (var_decl_expr -> expression .)
    LESS_EQUAL      reduce using rule 17 (var_decl_expr -> expression .)
    GREATER_EQUAL   reduce using rule 17 (var_decl_expr -> expression .)
    LESS_THAN       reduce using rule 17 (var_decl_expr -> expression .)
    GREATER_THAN    reduce using rule 17 (var_decl_expr -> expression .)
    AS              reduce using rule 17 (var_decl_expr -> expression .)
    IN              reduce using rule 17 (var_decl_expr -> expression .)
    ELSE            reduce using rule 17 (var_decl_expr -> expression .)
    ELIF            reduce using rule 17 (var_decl_expr -> expression .)
    AND             reduce using rule 17 (var_decl_expr -> expression .)


state 219

    (18) var_decl_expr -> flux_control .
    SEMICOLON       reduce using rule 18 (var_decl_expr -> flux_control .)
    $end            reduce using rule 18 (var_decl_expr -> flux_control .)
    RBRACE          reduce using rule 18 (var_decl_expr -> flux_control .)
    OR              reduce using rule 18 (var_decl_expr -> flux_control .)
    SINCETHAT       reduce using rule 18 (var_decl_expr -> flux_control .)
    COMMA           reduce using rule 18 (var_decl_expr -> flux_control .)
    RBRACKET        reduce using rule 18 (var_decl_expr -> flux_control .)
    RPAREN          reduce using rule 18 (var_decl_expr -> flux_control .)
    NOT_EQUAL       reduce using rule 18 (var_decl_expr -> flux_control .)
    EQUAL           reduce using rule 18 (var_decl_expr -> flux_control .)
    LESS_EQUAL      reduce using rule 18 (var_decl_expr -> flux_control .)
    GREATER_EQUAL   reduce using rule 18 (var_decl_expr -> flux_control .)
    LESS_THAN       reduce using rule 18 (var_decl_expr -> flux_control .)
    GREATER_THAN    reduce using rule 18 (var_decl_expr -> flux_control .)
    AS              reduce using rule 18 (var_decl_expr -> flux_control .)
    IN              reduce using rule 18 (var_decl_expr -> flux_control .)
    ELSE            reduce using rule 18 (var_decl_expr -> flux_control .)
    ELIF            reduce using rule 18 (var_decl_expr -> flux_control .)
    AND             reduce using rule 18 (var_decl_expr -> flux_control .)


state 220

    (19) var_decl_expr -> scope .
    SEMICOLON       reduce using rule 19 (var_decl_expr -> scope .)
    $end            reduce using rule 19 (var_decl_expr -> scope .)
    RBRACE          reduce using rule 19 (var_decl_expr -> scope .)
    OR              reduce using rule 19 (var_decl_expr -> scope .)
    SINCETHAT       reduce using rule 19 (var_decl_expr -> scope .)
    COMMA           reduce using rule 19 (var_decl_expr -> scope .)
    RBRACKET        reduce using rule 19 (var_decl_expr -> scope .)
    RPAREN          reduce using rule 19 (var_decl_expr -> scope .)
    NOT_EQUAL       reduce using rule 19 (var_decl_expr -> scope .)
    EQUAL           reduce using rule 19 (var_decl_expr -> scope .)
    LESS_EQUAL      reduce using rule 19 (var_decl_expr -> scope .)
    GREATER_EQUAL   reduce using rule 19 (var_decl_expr -> scope .)
    LESS_THAN       reduce using rule 19 (var_decl_expr -> scope .)
    GREATER_THAN    reduce using rule 19 (var_decl_expr -> scope .)
    AS              reduce using rule 19 (var_decl_expr -> scope .)
    IN              reduce using rule 19 (var_decl_expr -> scope .)
    ELSE            reduce using rule 19 (var_decl_expr -> scope .)
    ELIF            reduce using rule 19 (var_decl_expr -> scope .)
    AND             reduce using rule 19 (var_decl_expr -> scope .)


state 221

    (20) var_init_list -> var_init COMMA var_init_list .
    IN              reduce using rule 20 (var_init_list -> var_init COMMA var_init_list .)


state 222

    (22) var_init -> identifier ASSIGN inst . type_downcast
    (23) var_init -> identifier ASSIGN inst .
    (143) type_downcast -> . AS identifier
    COMMA           reduce using rule 23 (var_init -> identifier ASSIGN inst .)
    IN              reduce using rule 23 (var_init -> identifier ASSIGN inst .)
    AS              shift and go to state 280

    type_downcast                  shift and go to state 279

state 223

    (94) for_loop -> FOR LPAREN identifier IN . expression RPAREN expression
    (95) for_loop -> FOR LPAREN identifier IN . expression RPAREN scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    identifier                     shift and go to state 41
    expression                     shift and go to state 281
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 224

    (100) condition -> LPAREN conditional_expression . RPAREN
    RPAREN          shift and go to state 282


state 225

    (35) expression -> LPAREN var_asign . RPAREN
    (36) expression -> var_asign .
    RPAREN          shift and go to state 139
    NOT_EQUAL       reduce using rule 36 (expression -> var_asign .)
    EQUAL           reduce using rule 36 (expression -> var_asign .)
    LESS_EQUAL      reduce using rule 36 (expression -> var_asign .)
    GREATER_EQUAL   reduce using rule 36 (expression -> var_asign .)
    LESS_THAN       reduce using rule 36 (expression -> var_asign .)
    GREATER_THAN    reduce using rule 36 (expression -> var_asign .)


state 226

    (52) base_exponent -> LPAREN aritmetic_operation . RPAREN
    (39) expression -> aritmetic_operation .
    RPAREN          shift and go to state 140
    NOT_EQUAL       reduce using rule 39 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 39 (expression -> aritmetic_operation .)


state 227

    (101) condition -> IDENTIFIER . IS identifier
    (150) var_use -> IDENTIFIER .
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (153) var_method -> IDENTIFIER . DOT function_call
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    IS              shift and go to state 239
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 150 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 150 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 150 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 150 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 150 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 150 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 150 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 150 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 150 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 150 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 150 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 150 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 141
    LPAREN          shift and go to state 69
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70

state 228

    (148) var_use -> atom . LBRACKET expression RBRACKET
    (37) expression -> atom . ESPACEDCONCAT expression
    (38) expression -> atom . CONCAT expression
    (25) identifier -> atom .
    LBRACKET        shift and go to state 82
    ESPACEDCONCAT   shift and go to state 80
    CONCAT          shift and go to state 81
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 25 (identifier -> atom .)
    EQUAL           reduce using rule 25 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 25 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> atom .)
    LESS_THAN       reduce using rule 25 (identifier -> atom .)
    GREATER_THAN    reduce using rule 25 (identifier -> atom .)


state 229

    (83) full_conditional -> LPAREN conditional_expression RPAREN . scope_list else_elif_statement
    (82) inline_conditional -> LPAREN conditional_expression RPAREN . expression else_elif_statement
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LBRACE          shift and go to state 44
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    scope_list                     shift and go to state 283
    expression                     shift and go to state 284
    scope                          shift and go to state 25
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 230

    (103) comparation -> expression NOT_EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 285
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 231

    (104) comparation -> expression EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 286
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 232

    (105) comparation -> expression LESS_EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 287
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 233

    (106) comparation -> expression GREATER_EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 288
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 234

    (107) comparation -> expression LESS_THAN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 289
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 235

    (108) comparation -> expression GREATER_THAN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 290
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 236

    (98) conditional_expression -> condition OR . conditional_expression
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 163
    LPAREN          shift and go to state 159
    IDENTIFIER      shift and go to state 164
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    condition                      shift and go to state 162
    conditional_expression         shift and go to state 291
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    expression                     shift and go to state 161
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 237

    (99) conditional_expression -> condition AND . conditional_expression
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 163
    LPAREN          shift and go to state 159
    IDENTIFIER      shift and go to state 164
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    condition                      shift and go to state 162
    conditional_expression         shift and go to state 292
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    expression                     shift and go to state 161
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 238

    (97) conditional_expression -> NOT condition .
    RPAREN          reduce using rule 97 (conditional_expression -> NOT condition .)
    SEMICOLON       reduce using rule 97 (conditional_expression -> NOT condition .)


state 239

    (101) condition -> IDENTIFIER IS . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    identifier                     shift and go to state 293
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 240

    (150) var_use -> IDENTIFIER .
    (101) condition -> IDENTIFIER . IS identifier
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (153) var_method -> IDENTIFIER . DOT function_call
    (139) function_call -> IDENTIFIER . LPAREN RPAREN
    (140) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 150 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 150 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 150 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 150 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 150 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 150 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 150 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 150 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 150 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 150 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 150 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 150 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 150 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 150 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 150 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 150 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 150 (var_use -> IDENTIFIER .)
    IS              shift and go to state 239
    DOT             shift and go to state 141
    LPAREN          shift and go to state 69
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 70

state 241

    (90) while_loop -> WHILE LPAREN expression RPAREN . expression
    (91) while_loop -> WHILE LPAREN expression RPAREN . scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LBRACE          shift and go to state 44
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 294
    scope                          shift and go to state 295
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 242

    (92) while_loop -> WHILE LPAREN conditional_expression RPAREN . expression
    (93) while_loop -> WHILE LPAREN conditional_expression RPAREN . scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LBRACE          shift and go to state 44
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 296
    scope                          shift and go to state 297
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 243

    (167) vector_decl -> expression OR identifier . IN expression
    IN              shift and go to state 298


state 244

    (168) vector_decl -> expression SINCETHAT identifier . IN expression
    IN              shift and go to state 299


state 245

    (144) arguments_list -> argument COMMA arguments_list .
    RBRACKET        reduce using rule 144 (arguments_list -> argument COMMA arguments_list .)
    RPAREN          reduce using rule 144 (arguments_list -> argument COMMA arguments_list .)


state 246

    (173) build_in_functions -> LOG LPAREN argument COMMA . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 300
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 247

    (174) build_in_functions -> EXP LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    CONCAT          reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MODULE          reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    POWER           reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MINUS           reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    PLUS            reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    $end            reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RPAREN          reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RBRACE          reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    OR              reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    COMMA           reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    EQUAL           reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    AS              reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    IN              reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ELSE            reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ELIF            reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)
    AND             reduce using rule 174 (build_in_functions -> EXP LPAREN argument RPAREN .)


state 248

    (175) build_in_functions -> COS LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    CONCAT          reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    MODULE          reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    POWER           reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    MINUS           reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    PLUS            reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    $end            reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    RPAREN          reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    RBRACE          reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    OR              reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    COMMA           reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    EQUAL           reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    AS              reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    IN              reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    ELSE            reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    ELIF            reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)
    AND             reduce using rule 175 (build_in_functions -> COS LPAREN argument RPAREN .)


state 249

    (176) build_in_functions -> SIN LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    CONCAT          reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MODULE          reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    POWER           reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MINUS           reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    PLUS            reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    $end            reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RPAREN          reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RBRACE          reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    OR              reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    COMMA           reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    EQUAL           reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    AS              reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    IN              reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ELSE            reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ELIF            reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)
    AND             reduce using rule 176 (build_in_functions -> SIN LPAREN argument RPAREN .)


state 250

    (177) build_in_functions -> SQRT LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    CONCAT          reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MODULE          reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    POWER           reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MINUS           reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    PLUS            reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    $end            reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RPAREN          reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RBRACE          reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    OR              reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    COMMA           reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    EQUAL           reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    AS              reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    IN              reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ELSE            reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ELIF            reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    AND             reduce using rule 177 (build_in_functions -> SQRT LPAREN argument RPAREN .)


state 251

    (141) type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 141 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)


state 252

    (142) type_instanciation -> NEW IDENTIFIER LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 301


state 253

    (171) build_in_print -> PRINT LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    CONCAT          reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MODULE          reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    POWER           reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MINUS           reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    PLUS            reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    $end            reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RPAREN          reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RBRACE          reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    OR              reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    COMMA           reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    EQUAL           reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    AS              reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    IN              reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ELSE            reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ELIF            reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)
    AND             reduce using rule 171 (build_in_print -> PRINT LPAREN argument RPAREN .)


state 254

    (170) build_in_range -> RANGE LPAREN argument COMMA . argument RPAREN
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    argument                       shift and go to state 302
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 255

    (157) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body . SEMICOLON
    (158) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 303
    PROTOCOL        reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TYPE            reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LET             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    STRING          reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FOR             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IF              reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    WHILE           reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RAND            reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LOG             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    EXP             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    COS             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SIN             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SQRT            reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FALSE           reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TRUE            reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NEW             reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PRINT           reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RANGE           reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PLUS            reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    MINUS           reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    $end            reduce using rule 158 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)


state 256

    (161) protocol_body -> LBRACE virtual_method_list RBRACE .
    SEMICOLON       reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PROTOCOL        reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FUNCTION        reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TYPE            reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LPAREN          reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LET             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NUMBER          reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    STRING          reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FOR             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IF              reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    WHILE           reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACE          reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IDENTIFIER      reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    E_CONST         reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PI_CONST        reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RAND            reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LOG             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    EXP             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    COS             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SIN             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SQRT            reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FALSE           reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TRUE            reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NEW             reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACKET        reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PRINT           reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RANGE           reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PLUS            reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    MINUS           reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    $end            reduce using rule 161 (protocol_body -> LBRACE virtual_method_list RBRACE .)


state 257

    (162) virtual_method_list -> virtual_method SEMICOLON . virtual_method_list
    (163) virtual_method_list -> virtual_method SEMICOLON .
    (162) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (163) virtual_method_list -> . virtual_method SEMICOLON
    (164) virtual_method -> . IDENTIFIER parameters type_anotation
    (165) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    RBRACE          reduce using rule 163 (virtual_method_list -> virtual_method SEMICOLON .)
    IDENTIFIER      shift and go to state 192

    virtual_method                 shift and go to state 191
    virtual_method_list            shift and go to state 304

state 258

    (164) virtual_method -> IDENTIFIER parameters . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 305

state 259

    (165) virtual_method -> IDENTIFIER LPAREN . RPAREN type_anotation
    (119) parameters -> LPAREN . arguments_list RPAREN
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 306
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    arguments_list                 shift and go to state 196
    argument                       shift and go to state 107
    conditional                    shift and go to state 108
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 260

    (152) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (151) var_attr -> IDENTIFIER . DOT var_attr
    (152) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACE          reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 152 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DOT             shift and go to state 193


state 261

    (66) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation . function_inline_declaration
    (68) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation . function_full_declaration SEMICOLON
    (70) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation . function_full_declaration
    (79) function_inline_declaration -> . RETURN inst SEMICOLON
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 200
    LBRACE          shift and go to state 44

    function_inline_declaration    shift and go to state 307
    function_full_declaration      shift and go to state 308
    scope                          shift and go to state 201

state 262

    (72) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .
    PROTOCOL        reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    FUNCTION        reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    TYPE            reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    LPAREN          reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    LET             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    NUMBER          reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    STRING          reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    FOR             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    IF              reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    WHILE           reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    LBRACE          reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    IDENTIFIER      reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    E_CONST         reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    PI_CONST        reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    RAND            reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    LOG             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    EXP             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    COS             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    SIN             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    SQRT            reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    FALSE           reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    TRUE            reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    NEW             reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    LBRACKET        reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    PRINT           reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    RANGE           reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    PLUS            reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    MINUS           reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)
    $end            reduce using rule 72 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_inline_declaration .)


state 263

    (74) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration . SEMICOLON
    (76) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .
    SEMICOLON       shift and go to state 309
    PROTOCOL        reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    FUNCTION        reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    TYPE            reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    LPAREN          reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    LET             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    NUMBER          reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    STRING          reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    FOR             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    IF              reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    WHILE           reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    LBRACE          reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    IDENTIFIER      reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    E_CONST         reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    PI_CONST        reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    RAND            reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    LOG             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    EXP             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    COS             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    SIN             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    SQRT            reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    FALSE           reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    TRUE            reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    NEW             reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    LBRACKET        reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    PRINT           reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    RANGE           reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    PLUS            reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    MINUS           reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)
    $end            reduce using rule 76 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration .)


state 264

    (119) parameters -> LPAREN arguments_list RPAREN .
    COLON           reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)
    RETURN          reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)
    LBRACE          reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)
    INHERITS        reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)


state 265

    (67) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .
    PROTOCOL        reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    FUNCTION        reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    TYPE            reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    LPAREN          reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    LET             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    NUMBER          reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    STRING          reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    FOR             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    IF              reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    WHILE           reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    LBRACE          reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    IDENTIFIER      reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    E_CONST         reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    PI_CONST        reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    RAND            reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    LOG             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    EXP             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    COS             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    SIN             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    SQRT            reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    FALSE           reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    TRUE            reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    NEW             reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    LBRACKET        reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    PRINT           reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    RANGE           reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    PLUS            reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    MINUS           reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)
    $end            reduce using rule 67 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_inline_declaration .)


state 266

    (69) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration . SEMICOLON
    (71) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .
    SEMICOLON       shift and go to state 310
    PROTOCOL        reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    FUNCTION        reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    TYPE            reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    LPAREN          reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    LET             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    NUMBER          reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    STRING          reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    FOR             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    IF              reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    WHILE           reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    LBRACE          reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    IDENTIFIER      reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    E_CONST         reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    PI_CONST        reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    RAND            reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    LOG             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    EXP             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    COS             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    SIN             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    SQRT            reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    FALSE           reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    TRUE            reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    NEW             reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    LBRACKET        reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    PRINT           reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    RANGE           reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    PLUS            reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    MINUS           reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)
    $end            reduce using rule 71 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration .)


state 267

    (75) function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    LET             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    STRING          reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    FOR             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    IF              reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    RAND            reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    LOG             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    EXP             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    COS             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    SIN             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    NEW             reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    PLUS            reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    MINUS           reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)
    $end            reduce using rule 75 (function_declaration -> FUNCTION IDENTIFIER parameters function_full_declaration SEMICOLON .)


state 268

    (79) function_inline_declaration -> RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 311


state 269

    (111) type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PLUS            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    MINUS           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)


state 270

    (115) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body . SEMICOLON
    (116) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .
    SEMICOLON       shift and go to state 312
    PROTOCOL        reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FUNCTION        reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    TYPE            reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LPAREN          reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LET             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    NUMBER          reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    STRING          reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FOR             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    IF              reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    WHILE           reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LBRACE          reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    IDENTIFIER      reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    E_CONST         reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PI_CONST        reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    RAND            reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LOG             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    EXP             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    COS             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    SIN             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    SQRT            reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FALSE           reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    TRUE            reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    NEW             reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LBRACKET        reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PRINT           reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    RANGE           reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PLUS            reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    MINUS           reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    $end            reduce using rule 116 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)


state 271

    (117) type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .
    PROTOCOL        reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FUNCTION        reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    TYPE            reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LPAREN          reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LET             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    NUMBER          reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    STRING          reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FOR             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    IF              reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    WHILE           reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LBRACE          reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    E_CONST         reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PI_CONST        reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    RAND            reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LOG             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    EXP             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    COS             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    SIN             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    SQRT            reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FALSE           reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    TRUE            reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    NEW             reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LBRACKET        reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PRINT           reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    RANGE           reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PLUS            reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    MINUS           reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    $end            reduce using rule 117 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)


state 272

    (120) inherits_type -> INHERITS IDENTIFIER parameters .
    LBRACE          reduce using rule 120 (inherits_type -> INHERITS IDENTIFIER parameters .)


state 273

    (122) decl_body -> LBRACE decl_list RBRACE .
    SEMICOLON       reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    PROTOCOL        reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    FUNCTION        reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    TYPE            reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    LPAREN          reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    LET             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    NUMBER          reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    STRING          reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    FOR             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    IF              reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    WHILE           reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACE          reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    IDENTIFIER      reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    E_CONST         reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    PI_CONST        reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    RAND            reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    LOG             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    EXP             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    COS             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    SIN             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    SQRT            reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    FALSE           reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    TRUE            reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    NEW             reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACKET        reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    PRINT           reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    RANGE           reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    PLUS            reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    MINUS           reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)
    $end            reduce using rule 122 (decl_body -> LBRACE decl_list RBRACE .)


state 274

    (124) decl_list -> decl SEMICOLON . decl_list
    (125) decl_list -> decl SEMICOLON .
    (124) decl_list -> . decl SEMICOLON decl_list
    (125) decl_list -> . decl SEMICOLON
    (126) decl -> . method_declaration
    (127) decl -> . atribute_declaration
    (130) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (131) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (132) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (133) method_declaration -> . IDENTIFIER parameters type_anotation function_full_declaration
    (134) method_declaration -> . IDENTIFIER parameters type_anotation RETURN expression
    (135) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (136) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (137) method_declaration -> . IDENTIFIER parameters function_full_declaration
    (138) method_declaration -> . IDENTIFIER parameters RETURN expression
    (128) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (129) atribute_declaration -> . identifier ASSIGN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          reduce using rule 125 (decl_list -> decl SEMICOLON .)
    IDENTIFIER      shift and go to state 213
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    decl                           shift and go to state 210
    decl_list                      shift and go to state 313
    method_declaration             shift and go to state 211
    atribute_declaration           shift and go to state 212
    identifier                     shift and go to state 214
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 275

    (130) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation function_full_declaration
    (131) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN conditional_expression
    (132) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN expression
    (135) method_declaration -> IDENTIFIER LPAREN . RPAREN function_full_declaration
    (136) method_declaration -> IDENTIFIER LPAREN . RPAREN RETURN expression
    (139) function_call -> IDENTIFIER LPAREN . RPAREN
    (140) function_call -> IDENTIFIER LPAREN . arguments_list RPAREN
    (119) parameters -> LPAREN . arguments_list RPAREN
    (144) arguments_list -> . argument COMMA arguments_list
    (145) arguments_list -> . argument
    (146) argument -> . conditional
    (147) argument -> . expression
    (80) conditional -> . IF full_conditional
    (81) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 314
    IF              shift and go to state 42
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 132
    arguments_list                 shift and go to state 315
    argument                       shift and go to state 107
    conditional                    shift and go to state 108
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 276

    (133) method_declaration -> IDENTIFIER parameters . type_anotation function_full_declaration
    (134) method_declaration -> IDENTIFIER parameters . type_anotation RETURN expression
    (137) method_declaration -> IDENTIFIER parameters . function_full_declaration
    (138) method_declaration -> IDENTIFIER parameters . RETURN expression
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 318
    COLON           shift and go to state 71
    LBRACE          shift and go to state 44

    type_anotation                 shift and go to state 316
    function_full_declaration      shift and go to state 317
    scope                          shift and go to state 201

state 277

    (128) atribute_declaration -> identifier ASSIGN . expression type_downcast
    (129) atribute_declaration -> identifier ASSIGN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    identifier                     shift and go to state 41
    expression                     shift and go to state 319
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 278

    (16) var_decl_expr -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 320


state 279

    (22) var_init -> identifier ASSIGN inst type_downcast .
    COMMA           reduce using rule 22 (var_init -> identifier ASSIGN inst type_downcast .)
    IN              reduce using rule 22 (var_init -> identifier ASSIGN inst type_downcast .)


state 280

    (143) type_downcast -> AS . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 88
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62

    identifier                     shift and go to state 321
    fully_typed_param              shift and go to state 64
    atom                           shift and go to state 87
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    var_use                        shift and go to state 89
    function_call                  shift and go to state 36
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    var_attr                       shift and go to state 46

state 281

    (94) for_loop -> FOR LPAREN identifier IN expression . RPAREN expression
    (95) for_loop -> FOR LPAREN identifier IN expression . RPAREN scope
    RPAREN          shift and go to state 322


state 282

    (100) condition -> LPAREN conditional_expression RPAREN .
    OR              reduce using rule 100 (condition -> LPAREN conditional_expression RPAREN .)
    AND             reduce using rule 100 (condition -> LPAREN conditional_expression RPAREN .)
    RPAREN          reduce using rule 100 (condition -> LPAREN conditional_expression RPAREN .)
    SEMICOLON       reduce using rule 100 (condition -> LPAREN conditional_expression RPAREN .)


state 283

    (83) full_conditional -> LPAREN conditional_expression RPAREN scope_list . else_elif_statement
    (84) else_elif_statement -> . ELSE full_else
    (85) else_elif_statement -> . ELSE inline_else
    (86) else_elif_statement -> . ELIF full_conditional
    (87) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 324
    ELIF            shift and go to state 325

    else_elif_statement            shift and go to state 323

state 284

    (82) inline_conditional -> LPAREN conditional_expression RPAREN expression . else_elif_statement
    (84) else_elif_statement -> . ELSE full_else
    (85) else_elif_statement -> . ELSE inline_else
    (86) else_elif_statement -> . ELIF full_conditional
    (87) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 324
    ELIF            shift and go to state 325

    else_elif_statement            shift and go to state 326

state 285

    (103) comparation -> expression NOT_EQUAL expression .
    OR              reduce using rule 103 (comparation -> expression NOT_EQUAL expression .)
    AND             reduce using rule 103 (comparation -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 103 (comparation -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 103 (comparation -> expression NOT_EQUAL expression .)


state 286

    (104) comparation -> expression EQUAL expression .
    OR              reduce using rule 104 (comparation -> expression EQUAL expression .)
    AND             reduce using rule 104 (comparation -> expression EQUAL expression .)
    RPAREN          reduce using rule 104 (comparation -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 104 (comparation -> expression EQUAL expression .)


state 287

    (105) comparation -> expression LESS_EQUAL expression .
    OR              reduce using rule 105 (comparation -> expression LESS_EQUAL expression .)
    AND             reduce using rule 105 (comparation -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 105 (comparation -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 105 (comparation -> expression LESS_EQUAL expression .)


state 288

    (106) comparation -> expression GREATER_EQUAL expression .
    OR              reduce using rule 106 (comparation -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 106 (comparation -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 106 (comparation -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 106 (comparation -> expression GREATER_EQUAL expression .)


state 289

    (107) comparation -> expression LESS_THAN expression .
    OR              reduce using rule 107 (comparation -> expression LESS_THAN expression .)
    AND             reduce using rule 107 (comparation -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 107 (comparation -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 107 (comparation -> expression LESS_THAN expression .)


state 290

    (108) comparation -> expression GREATER_THAN expression .
    OR              reduce using rule 108 (comparation -> expression GREATER_THAN expression .)
    AND             reduce using rule 108 (comparation -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 108 (comparation -> expression GREATER_THAN expression .)
    SEMICOLON       reduce using rule 108 (comparation -> expression GREATER_THAN expression .)


state 291

    (98) conditional_expression -> condition OR conditional_expression .
    RPAREN          reduce using rule 98 (conditional_expression -> condition OR conditional_expression .)
    SEMICOLON       reduce using rule 98 (conditional_expression -> condition OR conditional_expression .)


state 292

    (99) conditional_expression -> condition AND conditional_expression .
    RPAREN          reduce using rule 99 (conditional_expression -> condition AND conditional_expression .)
    SEMICOLON       reduce using rule 99 (conditional_expression -> condition AND conditional_expression .)


state 293

    (101) condition -> IDENTIFIER IS identifier .
    OR              reduce using rule 101 (condition -> IDENTIFIER IS identifier .)
    AND             reduce using rule 101 (condition -> IDENTIFIER IS identifier .)
    RPAREN          reduce using rule 101 (condition -> IDENTIFIER IS identifier .)
    SEMICOLON       reduce using rule 101 (condition -> IDENTIFIER IS identifier .)


state 294

    (90) while_loop -> WHILE LPAREN expression RPAREN expression .
    SEMICOLON       reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    $end            reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RBRACE          reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    OR              reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    SINCETHAT       reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    COMMA           reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RBRACKET        reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RPAREN          reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    EQUAL           reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_THAN       reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AS              reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    IN              reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELSE            reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELIF            reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AND             reduce using rule 90 (while_loop -> WHILE LPAREN expression RPAREN expression .)


state 295

    (91) while_loop -> WHILE LPAREN expression RPAREN scope .
    SEMICOLON       reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    $end            reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RBRACE          reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    OR              reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    SINCETHAT       reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    COMMA           reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RBRACKET        reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RPAREN          reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    EQUAL           reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_THAN       reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AS              reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    IN              reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELSE            reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELIF            reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AND             reduce using rule 91 (while_loop -> WHILE LPAREN expression RPAREN scope .)


state 296

    (92) while_loop -> WHILE LPAREN conditional_expression RPAREN expression .
    SEMICOLON       reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    $end            reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RBRACE          reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    OR              reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    SINCETHAT       reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    COMMA           reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RBRACKET        reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RPAREN          reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    EQUAL           reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_THAN       reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_THAN    reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AS              reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    IN              reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELSE            reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELIF            reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AND             reduce using rule 92 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)


state 297

    (93) while_loop -> WHILE LPAREN conditional_expression RPAREN scope .
    SEMICOLON       reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    $end            reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RBRACE          reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    OR              reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    SINCETHAT       reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    COMMA           reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RBRACKET        reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RPAREN          reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    EQUAL           reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_THAN       reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_THAN    reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AS              reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    IN              reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELSE            reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELIF            reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AND             reduce using rule 93 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)


state 298

    (167) vector_decl -> expression OR identifier IN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 327
    identifier                     shift and go to state 41
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 299

    (168) vector_decl -> expression SINCETHAT identifier IN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 328
    identifier                     shift and go to state 41
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 300

    (173) build_in_functions -> LOG LPAREN argument COMMA argument . RPAREN
    RPAREN          shift and go to state 329


state 301

    (142) type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .
    ESPACEDCONCAT   reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    CONCAT          reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LBRACKET        reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MODULE          reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    DIVIDE          reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MULTIPLY        reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ASTERPOWER      reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    POWER           reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MINUS           reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    PLUS            reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    SEMICOLON       reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    $end            reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RPAREN          reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACE          reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    OR              reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    SINCETHAT       reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    COMMA           reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACKET        reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    NOT_EQUAL       reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    EQUAL           reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_EQUAL      reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_EQUAL   reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_THAN       reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_THAN    reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    AS              reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    IN              reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ELSE            reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ELIF            reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    AND             reduce using rule 142 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)


state 302

    (170) build_in_range -> RANGE LPAREN argument COMMA argument . RPAREN
    RPAREN          shift and go to state 330


state 303

    (157) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PLUS            reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    MINUS           reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 157 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)


state 304

    (162) virtual_method_list -> virtual_method SEMICOLON virtual_method_list .
    RBRACE          reduce using rule 162 (virtual_method_list -> virtual_method SEMICOLON virtual_method_list .)


state 305

    (164) virtual_method -> IDENTIFIER parameters type_anotation .
    SEMICOLON       reduce using rule 164 (virtual_method -> IDENTIFIER parameters type_anotation .)


state 306

    (165) virtual_method -> IDENTIFIER LPAREN RPAREN . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 71

    type_anotation                 shift and go to state 331

state 307

    (66) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .
    PROTOCOL        reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    FUNCTION        reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    TYPE            reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    LPAREN          reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    LET             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    NUMBER          reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    STRING          reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    FOR             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    IF              reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    WHILE           reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    LBRACE          reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    IDENTIFIER      reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    E_CONST         reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    PI_CONST        reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    RAND            reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    LOG             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    EXP             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    COS             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    SIN             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    SQRT            reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    FALSE           reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    TRUE            reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    NEW             reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    LBRACKET        reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    PRINT           reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    RANGE           reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    PLUS            reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    MINUS           reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)
    $end            reduce using rule 66 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_inline_declaration .)


state 308

    (68) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration . SEMICOLON
    (70) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .
    SEMICOLON       shift and go to state 332
    PROTOCOL        reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    FUNCTION        reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    TYPE            reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    LPAREN          reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    LET             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    NUMBER          reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    STRING          reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    FOR             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    IF              reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    WHILE           reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    LBRACE          reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    IDENTIFIER      reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    E_CONST         reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    PI_CONST        reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    RAND            reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    LOG             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    EXP             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    COS             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    SIN             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    SQRT            reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    FALSE           reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    TRUE            reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    NEW             reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    LBRACKET        reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    PRINT           reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    RANGE           reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    PLUS            reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    MINUS           reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)
    $end            reduce using rule 70 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)


state 309

    (74) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    LET             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    STRING          reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    FOR             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    IF              reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    RAND            reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    LOG             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    EXP             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    COS             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    SIN             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    NEW             reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    PLUS            reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    MINUS           reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)
    $end            reduce using rule 74 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN function_full_declaration SEMICOLON .)


state 310

    (69) function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    LET             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    STRING          reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    FOR             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    IF              reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    RAND            reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    LOG             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    EXP             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    COS             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    SIN             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    NEW             reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    PLUS            reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    MINUS           reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)
    $end            reduce using rule 69 (function_declaration -> FUNCTION IDENTIFIER parameters type_anotation function_full_declaration SEMICOLON .)


state 311

    (79) function_inline_declaration -> RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TYPE            reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LET             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    STRING          reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FOR             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IF              reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    WHILE           reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RAND            reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LOG             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    EXP             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    COS             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SIN             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SQRT            reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FALSE           reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TRUE            reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NEW             reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PRINT           reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RANGE           reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PLUS            reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    MINUS           reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)
    $end            reduce using rule 79 (function_inline_declaration -> RETURN inst SEMICOLON .)


state 312

    (115) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PLUS            reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    MINUS           reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 115 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)


state 313

    (124) decl_list -> decl SEMICOLON decl_list .
    RBRACE          reduce using rule 124 (decl_list -> decl SEMICOLON decl_list .)


state 314

    (130) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation function_full_declaration
    (131) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN conditional_expression
    (132) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN expression
    (135) method_declaration -> IDENTIFIER LPAREN RPAREN . function_full_declaration
    (136) method_declaration -> IDENTIFIER LPAREN RPAREN . RETURN expression
    (139) function_call -> IDENTIFIER LPAREN RPAREN .
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 335
    LBRACKET        reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 139 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           shift and go to state 71
    LBRACE          shift and go to state 44

    type_anotation                 shift and go to state 333
    function_full_declaration      shift and go to state 334
    scope                          shift and go to state 201

state 315

    (140) function_call -> IDENTIFIER LPAREN arguments_list . RPAREN
    (119) parameters -> LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 336


state 316

    (133) method_declaration -> IDENTIFIER parameters type_anotation . function_full_declaration
    (134) method_declaration -> IDENTIFIER parameters type_anotation . RETURN expression
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 338
    LBRACE          shift and go to state 44

    function_full_declaration      shift and go to state 337
    scope                          shift and go to state 201

state 317

    (137) method_declaration -> IDENTIFIER parameters function_full_declaration .
    SEMICOLON       reduce using rule 137 (method_declaration -> IDENTIFIER parameters function_full_declaration .)


state 318

    (138) method_declaration -> IDENTIFIER parameters RETURN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 339
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 319

    (128) atribute_declaration -> identifier ASSIGN expression . type_downcast
    (129) atribute_declaration -> identifier ASSIGN expression .
    (143) type_downcast -> . AS identifier
    SEMICOLON       reduce using rule 129 (atribute_declaration -> identifier ASSIGN expression .)
    AS              shift and go to state 280

    type_downcast                  shift and go to state 340

state 320

    (16) var_decl_expr -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RBRACE          reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    OR              reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    SINCETHAT       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RBRACKET        reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RPAREN          reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    NOT_EQUAL       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    EQUAL           reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_EQUAL      reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_EQUAL   reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_THAN       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_THAN    reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELSE            reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELIF            reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AND             reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)


state 321

    (143) type_downcast -> AS identifier .
    COMMA           reduce using rule 143 (type_downcast -> AS identifier .)
    IN              reduce using rule 143 (type_downcast -> AS identifier .)
    SEMICOLON       reduce using rule 143 (type_downcast -> AS identifier .)


state 322

    (94) for_loop -> FOR LPAREN identifier IN expression RPAREN . expression
    (95) for_loop -> FOR LPAREN identifier IN expression RPAREN . scope
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LBRACE          shift and go to state 44
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    identifier                     shift and go to state 41
    expression                     shift and go to state 341
    scope                          shift and go to state 342
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 323

    (83) full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .
    SEMICOLON       reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    $end            reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    RBRACE          reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    OR              reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    SINCETHAT       reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    COMMA           reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    RBRACKET        reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    RPAREN          reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    NOT_EQUAL       reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    EQUAL           reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    LESS_EQUAL      reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    GREATER_EQUAL   reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    LESS_THAN       reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    GREATER_THAN    reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    AS              reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    IN              reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    ELSE            reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    ELIF            reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    AND             reduce using rule 83 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)


state 324

    (84) else_elif_statement -> ELSE . full_else
    (85) else_elif_statement -> ELSE . inline_else
    (89) full_else -> . scope
    (88) inline_else -> . expression
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 44
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    full_else                      shift and go to state 343
    inline_else                    shift and go to state 344
    scope                          shift and go to state 345
    expression                     shift and go to state 346
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 325

    (86) else_elif_statement -> ELIF . full_conditional
    (87) else_elif_statement -> ELIF . inline_conditional
    (83) full_conditional -> . LPAREN conditional_expression RPAREN scope_list else_elif_statement
    (82) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 99

    full_conditional               shift and go to state 347
    inline_conditional             shift and go to state 348

state 326

    (82) inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .
    SEMICOLON       reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    $end            reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RBRACE          reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    OR              reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    SINCETHAT       reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    COMMA           reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RBRACKET        reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RPAREN          reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    NOT_EQUAL       reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    EQUAL           reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_EQUAL      reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_EQUAL   reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_THAN       reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_THAN    reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AS              reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    IN              reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELSE            reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELIF            reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AND             reduce using rule 82 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)


state 327

    (167) vector_decl -> expression OR identifier IN expression .
    RBRACKET        reduce using rule 167 (vector_decl -> expression OR identifier IN expression .)


state 328

    (168) vector_decl -> expression SINCETHAT identifier IN expression .
    RBRACKET        reduce using rule 168 (vector_decl -> expression SINCETHAT identifier IN expression .)


state 329

    (173) build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .
    ESPACEDCONCAT   reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    CONCAT          reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LBRACKET        reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MODULE          reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    DIVIDE          reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MULTIPLY        reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ASTERPOWER      reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    POWER           reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MINUS           reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    PLUS            reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    SEMICOLON       reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    $end            reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RPAREN          reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ASSIGN          reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RBRACE          reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    OR              reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    SINCETHAT       reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    COMMA           reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RBRACKET        reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    NOT_EQUAL       reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    EQUAL           reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LESS_EQUAL      reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    GREATER_EQUAL   reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LESS_THAN       reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    GREATER_THAN    reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    AS              reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    IN              reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ELSE            reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ELIF            reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    AND             reduce using rule 173 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)


state 330

    (170) build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .
    ESPACEDCONCAT   reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    CONCAT          reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LBRACKET        reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MODULE          reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    DIVIDE          reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MULTIPLY        reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ASTERPOWER      reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    POWER           reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MINUS           reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    PLUS            reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    SEMICOLON       reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    $end            reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RPAREN          reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ASSIGN          reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RBRACE          reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    OR              reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    SINCETHAT       reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    COMMA           reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RBRACKET        reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    NOT_EQUAL       reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    EQUAL           reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LESS_EQUAL      reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    GREATER_EQUAL   reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LESS_THAN       reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    GREATER_THAN    reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    AS              reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    IN              reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ELSE            reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ELIF            reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    AND             reduce using rule 170 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)


state 331

    (165) virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .
    SEMICOLON       reduce using rule 165 (virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .)


state 332

    (68) function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    LET             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    STRING          reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    FOR             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    IF              reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    RAND            reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    LOG             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    EXP             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    COS             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    SIN             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    NEW             reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    PLUS            reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    MINUS           reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)
    $end            reduce using rule 68 (function_declaration -> FUNCTION IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration SEMICOLON .)


state 333

    (130) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . function_full_declaration
    (131) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN conditional_expression
    (132) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN expression
    (78) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 350
    LBRACE          shift and go to state 44

    function_full_declaration      shift and go to state 349
    scope                          shift and go to state 201

state 334

    (135) method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .
    SEMICOLON       reduce using rule 135 (method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .)


state 335

    (136) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 351
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 336

    (140) function_call -> IDENTIFIER LPAREN arguments_list RPAREN .
    (119) parameters -> LPAREN arguments_list RPAREN .
    LBRACKET        reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 140 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RETURN          reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)
    COLON           reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)
    LBRACE          reduce using rule 119 (parameters -> LPAREN arguments_list RPAREN .)


state 337

    (133) method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 133 (method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration .)


state 338

    (134) method_declaration -> IDENTIFIER parameters type_anotation RETURN . expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 106
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    expression                     shift and go to state 352
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    identifier                     shift and go to state 41
    fully_typed_param              shift and go to state 64

state 339

    (138) method_declaration -> IDENTIFIER parameters RETURN expression .
    SEMICOLON       reduce using rule 138 (method_declaration -> IDENTIFIER parameters RETURN expression .)


state 340

    (128) atribute_declaration -> identifier ASSIGN expression type_downcast .
    SEMICOLON       reduce using rule 128 (atribute_declaration -> identifier ASSIGN expression type_downcast .)


state 341

    (94) for_loop -> FOR LPAREN identifier IN expression RPAREN expression .
    SEMICOLON       reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    $end            reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RBRACE          reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    OR              reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    SINCETHAT       reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    COMMA           reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RBRACKET        reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RPAREN          reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    EQUAL           reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_THAN       reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AS              reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    IN              reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELSE            reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELIF            reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AND             reduce using rule 94 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)


state 342

    (95) for_loop -> FOR LPAREN identifier IN expression RPAREN scope .
    SEMICOLON       reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    $end            reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RBRACE          reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    OR              reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    SINCETHAT       reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    COMMA           reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RBRACKET        reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RPAREN          reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    EQUAL           reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_THAN       reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AS              reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    IN              reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELSE            reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELIF            reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AND             reduce using rule 95 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)


state 343

    (84) else_elif_statement -> ELSE full_else .
    SEMICOLON       reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    $end            reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    RBRACE          reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    OR              reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    SINCETHAT       reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    COMMA           reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    RBRACKET        reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    RPAREN          reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    NOT_EQUAL       reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    EQUAL           reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    LESS_EQUAL      reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    GREATER_EQUAL   reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    LESS_THAN       reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    GREATER_THAN    reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    AS              reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    IN              reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    ELSE            reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    ELIF            reduce using rule 84 (else_elif_statement -> ELSE full_else .)
    AND             reduce using rule 84 (else_elif_statement -> ELSE full_else .)


state 344

    (85) else_elif_statement -> ELSE inline_else .
    SEMICOLON       reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    $end            reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    RBRACE          reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    OR              reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    SINCETHAT       reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    COMMA           reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    RBRACKET        reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    RPAREN          reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    NOT_EQUAL       reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    EQUAL           reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    LESS_EQUAL      reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    GREATER_EQUAL   reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    LESS_THAN       reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    GREATER_THAN    reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    AS              reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    IN              reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    ELSE            reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    ELIF            reduce using rule 85 (else_elif_statement -> ELSE inline_else .)
    AND             reduce using rule 85 (else_elif_statement -> ELSE inline_else .)


state 345

    (89) full_else -> scope .
    SEMICOLON       reduce using rule 89 (full_else -> scope .)
    $end            reduce using rule 89 (full_else -> scope .)
    RBRACE          reduce using rule 89 (full_else -> scope .)
    OR              reduce using rule 89 (full_else -> scope .)
    SINCETHAT       reduce using rule 89 (full_else -> scope .)
    COMMA           reduce using rule 89 (full_else -> scope .)
    RBRACKET        reduce using rule 89 (full_else -> scope .)
    RPAREN          reduce using rule 89 (full_else -> scope .)
    NOT_EQUAL       reduce using rule 89 (full_else -> scope .)
    EQUAL           reduce using rule 89 (full_else -> scope .)
    LESS_EQUAL      reduce using rule 89 (full_else -> scope .)
    GREATER_EQUAL   reduce using rule 89 (full_else -> scope .)
    LESS_THAN       reduce using rule 89 (full_else -> scope .)
    GREATER_THAN    reduce using rule 89 (full_else -> scope .)
    AS              reduce using rule 89 (full_else -> scope .)
    IN              reduce using rule 89 (full_else -> scope .)
    ELSE            reduce using rule 89 (full_else -> scope .)
    ELIF            reduce using rule 89 (full_else -> scope .)
    AND             reduce using rule 89 (full_else -> scope .)


state 346

    (88) inline_else -> expression .
    SEMICOLON       reduce using rule 88 (inline_else -> expression .)
    $end            reduce using rule 88 (inline_else -> expression .)
    RBRACE          reduce using rule 88 (inline_else -> expression .)
    OR              reduce using rule 88 (inline_else -> expression .)
    SINCETHAT       reduce using rule 88 (inline_else -> expression .)
    COMMA           reduce using rule 88 (inline_else -> expression .)
    RBRACKET        reduce using rule 88 (inline_else -> expression .)
    RPAREN          reduce using rule 88 (inline_else -> expression .)
    NOT_EQUAL       reduce using rule 88 (inline_else -> expression .)
    EQUAL           reduce using rule 88 (inline_else -> expression .)
    LESS_EQUAL      reduce using rule 88 (inline_else -> expression .)
    GREATER_EQUAL   reduce using rule 88 (inline_else -> expression .)
    LESS_THAN       reduce using rule 88 (inline_else -> expression .)
    GREATER_THAN    reduce using rule 88 (inline_else -> expression .)
    AS              reduce using rule 88 (inline_else -> expression .)
    IN              reduce using rule 88 (inline_else -> expression .)
    ELSE            reduce using rule 88 (inline_else -> expression .)
    ELIF            reduce using rule 88 (inline_else -> expression .)
    AND             reduce using rule 88 (inline_else -> expression .)


state 347

    (86) else_elif_statement -> ELIF full_conditional .
    SEMICOLON       reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    $end            reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    RBRACE          reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    OR              reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    SINCETHAT       reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    COMMA           reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    RBRACKET        reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    RPAREN          reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    NOT_EQUAL       reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    EQUAL           reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    LESS_EQUAL      reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    GREATER_EQUAL   reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    LESS_THAN       reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    GREATER_THAN    reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    AS              reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    IN              reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    ELSE            reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    ELIF            reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)
    AND             reduce using rule 86 (else_elif_statement -> ELIF full_conditional .)


state 348

    (87) else_elif_statement -> ELIF inline_conditional .
    SEMICOLON       reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    $end            reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    RBRACE          reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    OR              reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    SINCETHAT       reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    COMMA           reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    RBRACKET        reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    RPAREN          reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    NOT_EQUAL       reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    EQUAL           reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    LESS_EQUAL      reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_EQUAL   reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    LESS_THAN       reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_THAN    reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    AS              reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    IN              reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    ELSE            reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    ELIF            reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)
    AND             reduce using rule 87 (else_elif_statement -> ELIF inline_conditional .)


state 349

    (130) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 130 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)


state 350

    (131) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . conditional_expression
    (132) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . expression
    (96) conditional_expression -> . condition
    (97) conditional_expression -> . NOT condition
    (98) conditional_expression -> . condition OR conditional_expression
    (99) conditional_expression -> . condition AND conditional_expression
    (34) expression -> . var_dec
    (35) expression -> . LPAREN var_asign RPAREN
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (100) condition -> . LPAREN conditional_expression RPAREN
    (101) condition -> . IDENTIFIER IS identifier
    (102) condition -> . comparation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (64) var_asign -> . var_use ASSIGN expression
    (65) var_asign -> . var_use DEST_ASSIGN expression
    (54) atom -> . NUMBER
    (55) atom -> . STRING
    (56) atom -> . build_in_consts
    (57) atom -> . build_in_functions
    (58) atom -> . boolean_value
    (59) atom -> . type_instanciation
    (60) atom -> . var_method
    (61) atom -> . vector
    (62) atom -> . var_use
    (63) atom -> . function_call
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (103) comparation -> . expression NOT_EQUAL expression
    (104) comparation -> . expression EQUAL expression
    (105) comparation -> . expression LESS_EQUAL expression
    (106) comparation -> . expression GREATER_EQUAL expression
    (107) comparation -> . expression LESS_THAN expression
    (108) comparation -> . expression GREATER_THAN expression
    (148) var_use -> . atom LBRACKET expression RBRACKET
    (149) var_use -> . var_attr
    (150) var_use -> . IDENTIFIER
    (180) build_in_consts -> . E_CONST
    (181) build_in_consts -> . PI_CONST
    (172) build_in_functions -> . RAND LPAREN RPAREN
    (173) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (174) build_in_functions -> . EXP LPAREN argument RPAREN
    (175) build_in_functions -> . COS LPAREN argument RPAREN
    (176) build_in_functions -> . SIN LPAREN argument RPAREN
    (177) build_in_functions -> . SQRT LPAREN argument RPAREN
    (178) build_in_functions -> . build_in_print
    (179) build_in_functions -> . build_in_range
    (109) boolean_value -> . FALSE
    (110) boolean_value -> . TRUE
    (141) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (142) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (153) var_method -> . IDENTIFIER DOT function_call
    (166) vector -> . LBRACKET vector_decl RBRACKET
    (139) function_call -> . IDENTIFIER LPAREN RPAREN
    (140) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (151) var_attr -> . IDENTIFIER DOT var_attr
    (152) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (171) build_in_print -> . PRINT LPAREN argument RPAREN
    (170) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (47) factor -> . PLUS factor
    (48) factor -> . MINUS factor
    (49) factor -> . base_exponent
    (50) factor -> . factor ASTERPOWER base_exponent
    (51) factor -> . factor POWER base_exponent
    (52) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (53) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 163
    LPAREN          shift and go to state 166
    IDENTIFIER      shift and go to state 164
    LET             shift and go to state 26
    NUMBER          shift and go to state 28
    STRING          shift and go to state 29
    E_CONST         shift and go to state 47
    PI_CONST        shift and go to state 48
    RAND            shift and go to state 49
    LOG             shift and go to state 50
    EXP             shift and go to state 51
    COS             shift and go to state 52
    SIN             shift and go to state 53
    SQRT            shift and go to state 54
    FALSE           shift and go to state 57
    TRUE            shift and go to state 58
    NEW             shift and go to state 59
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 61
    RANGE           shift and go to state 62
    PLUS            shift and go to state 39
    MINUS           shift and go to state 38

    conditional_expression         shift and go to state 353
    expression                     shift and go to state 354
    condition                      shift and go to state 162
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 19
    atom                           shift and go to state 20
    aritmetic_operation            shift and go to state 21
    identifier                     shift and go to state 41
    comparation                    shift and go to state 165
    var_use                        shift and go to state 27
    build_in_consts                shift and go to state 30
    build_in_functions             shift and go to state 31
    boolean_value                  shift and go to state 32
    type_instanciation             shift and go to state 33
    var_method                     shift and go to state 34
    vector                         shift and go to state 35
    function_call                  shift and go to state 36
    term                           shift and go to state 37
    var_attr                       shift and go to state 46
    build_in_print                 shift and go to state 55
    build_in_range                 shift and go to state 56
    factor                         shift and go to state 60
    base_exponent                  shift and go to state 63
    fully_typed_param              shift and go to state 64

state 351

    (136) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .
    SEMICOLON       reduce using rule 136 (method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .)


state 352

    (134) method_declaration -> IDENTIFIER parameters type_anotation RETURN expression .
    SEMICOLON       reduce using rule 134 (method_declaration -> IDENTIFIER parameters type_anotation RETURN expression .)


state 353

    (131) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .
    SEMICOLON       reduce using rule 131 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .)


state 354

    (132) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .
    (103) comparation -> expression . NOT_EQUAL expression
    (104) comparation -> expression . EQUAL expression
    (105) comparation -> expression . LESS_EQUAL expression
    (106) comparation -> expression . GREATER_EQUAL expression
    (107) comparation -> expression . LESS_THAN expression
    (108) comparation -> expression . GREATER_THAN expression
    SEMICOLON       reduce using rule 132 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .)
    NOT_EQUAL       shift and go to state 230
    EQUAL           shift and go to state 231
    LESS_EQUAL      shift and go to state 232
    GREATER_EQUAL   shift and go to state 233
    LESS_THAN       shift and go to state 234
    GREATER_THAN    shift and go to state 235

Parser track:

(1): Number [1.0]
(2): identifier [<cmp.ast_h.Number object at 0x000001C62E9FDEB0>]
(3): base_exponent [<cmp.ast_h.Number object at 0x000001C62E9FDEB0>]
(4): factor1 [<cmp.ast_h.Number object at 0x000001C62E9FDEB0>]
(5): term [<cmp.ast_h.Number object at 0x000001C62E9FDEB0>]
(6): Number [2.0]
(7): identifier [<cmp.ast_h.Number object at 0x000001C62E9FDE80>]
(8): base_exponent [<cmp.ast_h.Number object at 0x000001C62E9FDE80>]
(9): factor1 [<cmp.ast_h.Number object at 0x000001C62E9FDE80>]
(10): term [<cmp.ast_h.Number object at 0x000001C62E9FDE80>]
(11): aritmetic_operation [<cmp.ast_h.Number object at 0x000001C62E9FDE80>]
(12): aritmetic_operation [<cmp.ast_h.Number object at 0x000001C62E9FDEB0>, '+', <cmp.ast_h.Number object at 0x000001C62E9FDE80>]
(13): base_exponent ['(', <cmp.ast_h.Add object at 0x000001C62E9FDF40>, ')']
(14): factor1 [<cmp.ast_h.Add object at 0x000001C62E9FDF40>]
(15): Number [3.0]
(16): identifier [<cmp.ast_h.Number object at 0x000001C62E9FDFA0>]
(17): base_exponent [<cmp.ast_h.Number object at 0x000001C62E9FDFA0>]
(18): factor [<cmp.ast_h.Add object at 0x000001C62E9FDF40>, '^', <cmp.ast_h.Number object at 0x000001C62E9FDFA0>]
(19): term [<cmp.ast_h.Power object at 0x000001C62E9FDF70>]
(20): aritmetic_operation [<cmp.ast_h.Power object at 0x000001C62E9FDF70>]
(21): base_exponent ['(', <cmp.ast_h.Power object at 0x000001C62E9FDF70>, ')']
(22): factor1 [<cmp.ast_h.Power object at 0x000001C62E9FDF70>]
(23): Number [4.0]
(24): identifier [<cmp.ast_h.Number object at 0x000001C62E9FDF10>]
(25): base_exponent [<cmp.ast_h.Number object at 0x000001C62E9FDF10>]
(26): factor1 [<cmp.ast_h.Number object at 0x000001C62E9FDF10>]
(27): term [<cmp.ast_h.Number object at 0x000001C62E9FDF10>]
(28): term [<cmp.ast_h.Power object at 0x000001C62E9FDF70>, '*', <cmp.ast_h.Number object at 0x000001C62E9FDF10>]
(29): aritmetic_operation [<cmp.ast_h.Mult object at 0x000001C62E9FDEE0>]
(30): base_exponent ['(', <cmp.ast_h.Mult object at 0x000001C62E9FDEE0>, ')']
(31): factor1 [<cmp.ast_h.Mult object at 0x000001C62E9FDEE0>]
(32): Number [5.0]
(33): identifier [<cmp.ast_h.Number object at 0x000001C62E9FE000>]
(34): base_exponent [<cmp.ast_h.Number object at 0x000001C62E9FE000>]
(35): factor1 [<cmp.ast_h.Number object at 0x000001C62E9FE000>]
(36): term [<cmp.ast_h.Number object at 0x000001C62E9FE000>]
(37): term [<cmp.ast_h.Mult object at 0x000001C62E9FDEE0>, '/', <cmp.ast_h.Number object at 0x000001C62E9FE000>]
(38): aritmetic_operation [<cmp.ast_h.Div object at 0x000001C62E9FE060>]
(39): expression ['<cmp.ast_h.Div object at 0x000001C62E9FE060>']
(40): argument [<cmp.ast_h.Div object at 0x000001C62E9FE060>]
(41): build_in_print ['print', '(', <cmp.ast_h.Div object at 0x000001C62E9FE060>, ')']
(42): build_in_functions [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(43): atom [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(44): identifier [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(45): base_exponent [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(46): factor1 [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(47): term [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(48): aritmetic_operation [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(49): expression ['<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>']
(50): inst [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]
(51): inst_list [<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>, ';']
(52): program_decl_list [[<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]]
(53): program ['[<cmp.ast_h.UnaryBuildInFunction object at 0x000001C62E9FE030>]']

AST:


Program (
	\__ UnaryBuildInFunction (print 
		\__ Div (
			\__ Mult (
				\__ Power (
					\__ Add (
						\__ Number (1.0) 
						\__ Number (2.0)) 
					\__ Number (3.0)) 
				\__ Number (4.0)) 
			\__ Number (5.0))))