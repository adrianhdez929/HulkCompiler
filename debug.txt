Grammar:

Rule 0     S' -> program
Rule 1     program -> program_decl_list
Rule 2     program_decl_list -> empty
Rule 3     program_decl_list -> program_level_decl program_decl_list
Rule 4     program_decl_list -> inst_wrapper
Rule 5     program_level_decl -> protocol_declaration
Rule 6     program_level_decl -> function_declaration
Rule 7     program_level_decl -> type_declaration
Rule 8     inst_list -> inst SEMICOLON inst_list
Rule 9     inst_list -> inst SEMICOLON
Rule 10    inst_wrapper -> inst SEMICOLON
Rule 11    inst_wrapper -> inst
Rule 12    inst -> LPAREN var_dec RPAREN
Rule 13    inst -> expression
Rule 14    inst -> flux_control
Rule 15    inst -> scope
Rule 16    var_dec -> LET var_init_list IN var_decl_expr
Rule 17    var_decl_expr -> LPAREN var_dec RPAREN
Rule 18    var_decl_expr -> expression
Rule 19    var_decl_expr -> flux_control
Rule 20    var_decl_expr -> scope
Rule 21    var_init_list -> var_init COMMA var_init_list
Rule 22    var_init_list -> var_init
Rule 23    var_init -> identifier ASSIGN inst type_downcast
Rule 24    var_init -> identifier ASSIGN inst
Rule 25    identifier -> fully_typed_param
Rule 26    identifier -> atom
Rule 27    fully_typed_param -> IDENTIFIER type_anotation
Rule 28    type_anotation -> COLON BOOLEAN_TYPE
Rule 29    type_anotation -> COLON NUMBER_TYPE
Rule 30    type_anotation -> COLON IDENTIFIER
Rule 31    scope -> LBRACE RBRACE
Rule 32    scope -> LBRACE inst_list RBRACE
Rule 33    expression -> var_dec
Rule 34    expression -> var_asign
Rule 35    expression -> atom ESPACEDCONCAT expression  [precedence=left, level=4]
Rule 36    expression -> atom CONCAT expression  [precedence=left, level=4]
Rule 37    expression -> aritmetic_operation
Rule 38    aritmetic_operation -> term
Rule 39    aritmetic_operation -> term MINUS aritmetic_operation  [precedence=left, level=4]
Rule 40    aritmetic_operation -> term PLUS aritmetic_operation  [precedence=left, level=4]
Rule 41    term -> factor
Rule 42    term -> factor MODULE term  [precedence=left, level=5]
Rule 43    term -> factor DIVIDE term  [precedence=left, level=5]
Rule 44    term -> factor MULTIPLY term  [precedence=left, level=5]
Rule 45    factor -> base_exponent
Rule 46    factor -> factor ASTERPOWER base_exponent  [precedence=right, level=6]
Rule 47    factor -> factor POWER base_exponent  [precedence=right, level=6]
Rule 48    base_exponent -> LPAREN aritmetic_operation RPAREN
Rule 49    base_exponent -> identifier
Rule 50    atom -> build_in_consts
Rule 51    atom -> build_in_functions
Rule 52    atom -> boolean_value
Rule 53    atom -> type_instanciation
Rule 54    atom -> var_method
Rule 55    atom -> vector
Rule 56    atom -> var_use
Rule 57    atom -> function_call
Rule 58    atom -> STRING
Rule 59    atom -> NUMBER
Rule 60    var_asign -> var_use ASSIGN expression
Rule 61    var_asign -> var_use DEST_ASSIGN expression
Rule 62    function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration
Rule 63    function_declaration -> func_decl_id parameters function_inline_declaration
Rule 64    function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
Rule 65    function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON
Rule 66    function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration
Rule 67    function_declaration -> func_decl_id parameters function_full_declaration
Rule 68    func_decl_id -> FUNCTION IDENTIFIER
Rule 69    function_full_declaration -> scope
Rule 70    function_inline_declaration -> type_anotation RETURN inst SEMICOLON
Rule 71    function_inline_declaration -> RETURN inst SEMICOLON
Rule 72    conditional -> IF full_conditional
Rule 73    conditional -> IF inline_conditional
Rule 74    inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement
Rule 75    full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement
Rule 76    else_elif_statement -> ELSE full_else
Rule 77    else_elif_statement -> ELSE inline_else
Rule 78    else_elif_statement -> ELIF full_conditional
Rule 79    else_elif_statement -> ELIF inline_conditional
Rule 80    inline_else -> expression
Rule 81    full_else -> scope
Rule 82    while_loop -> WHILE LPAREN expression RPAREN expression
Rule 83    while_loop -> WHILE LPAREN expression RPAREN scope
Rule 84    while_loop -> WHILE LPAREN conditional_expression RPAREN expression
Rule 85    while_loop -> WHILE LPAREN conditional_expression RPAREN scope
Rule 86    for_loop -> FOR LPAREN identifier IN expression RPAREN expression
Rule 87    for_loop -> FOR LPAREN identifier IN expression RPAREN scope
Rule 88    conditional_expression -> condition
Rule 89    conditional_expression -> NOT condition  [precedence=right, level=7]
Rule 90    conditional_expression -> condition OR conditional_expression  [precedence=left, level=1]
Rule 91    conditional_expression -> condition AND conditional_expression  [precedence=left, level=1]
Rule 92    condition -> LPAREN conditional_expression RPAREN
Rule 93    condition -> IDENTIFIER type_conforming
Rule 94    condition -> comparation
Rule 95    comparation -> expression NOT_EQUAL expression  [precedence=left, level=2]
Rule 96    comparation -> expression EQUAL expression  [precedence=left, level=2]
Rule 97    comparation -> expression LESS_EQUAL expression  [precedence=left, level=3]
Rule 98    comparation -> expression GREATER_EQUAL expression  [precedence=left, level=3]
Rule 99    comparation -> expression LESS_THAN expression  [precedence=left, level=3]
Rule 100   comparation -> expression GREATER_THAN expression  [precedence=left, level=3]
Rule 101   boolean_value -> FALSE
Rule 102   boolean_value -> TRUE
Rule 103   type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON
Rule 104   type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON
Rule 105   type_declaration -> TYPE IDENTIFIER inherits_type decl_body
Rule 106   type_declaration -> TYPE IDENTIFIER decl_body
Rule 107   type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
Rule 108   type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON
Rule 109   type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body
Rule 110   type_declaration -> TYPE IDENTIFIER parameters decl_body
Rule 111   parameters -> LPAREN arguments_list RPAREN
Rule 112   inherits_type -> INHERITS IDENTIFIER parameters
Rule 113   inherits_type -> INHERITS IDENTIFIER
Rule 114   decl_body -> LBRACE decl_list RBRACE
Rule 115   decl_body -> LBRACE RBRACE
Rule 116   decl_list -> decl SEMICOLON decl_list
Rule 117   decl_list -> decl SEMICOLON
Rule 118   decl -> method_declaration
Rule 119   decl -> atribute_declaration
Rule 120   atribute_declaration -> identifier ASSIGN expression type_downcast
Rule 121   atribute_declaration -> identifier ASSIGN expression
Rule 122   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
Rule 123   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
Rule 124   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
Rule 125   method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration
Rule 126   method_declaration -> IDENTIFIER parameters type_anotation RETURN expression
Rule 127   method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration
Rule 128   method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression
Rule 129   method_declaration -> IDENTIFIER parameters function_full_declaration
Rule 130   method_declaration -> IDENTIFIER parameters RETURN expression
Rule 131   function_call -> IDENTIFIER LPAREN RPAREN
Rule 132   function_call -> IDENTIFIER LPAREN arguments_list RPAREN
Rule 133   type_instanciation -> NEW IDENTIFIER LPAREN RPAREN
Rule 134   type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN
Rule 135   type_conforming -> IS identifier
Rule 136   type_downcast -> AS identifier
Rule 137   arguments_list -> argument COMMA arguments_list
Rule 138   arguments_list -> argument
Rule 139   argument -> conditional
Rule 140   argument -> expression
Rule 141   var_use -> var_attr
Rule 142   var_use -> atom LBRACKET expression RBRACKET
Rule 143   var_use -> IDENTIFIER
Rule 144   var_attr -> IDENTIFIER DOT var_attr
Rule 145   var_attr -> IDENTIFIER DOT IDENTIFIER
Rule 146   var_method -> IDENTIFIER DOT function_call
Rule 147   flux_control -> for_loop
Rule 148   flux_control -> conditional
Rule 149   flux_control -> while_loop
Rule 150   protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
Rule 151   protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
Rule 152   protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON
Rule 153   protocol_declaration -> PROTOCOL IDENTIFIER protocol_body
Rule 154   protocol_body -> LBRACE virtual_method_list RBRACE
Rule 155   virtual_method_list -> virtual_method SEMICOLON virtual_method_list
Rule 156   virtual_method_list -> virtual_method SEMICOLON
Rule 157   virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation
Rule 158   virtual_method -> IDENTIFIER parameters type_anotation
Rule 159   vector -> LBRACKET vector_decl RBRACKET
Rule 160   vector_decl -> expression OR identifier IN expression
Rule 161   vector_decl -> expression SINCETHAT identifier IN expression
Rule 162   vector_decl -> arguments_list
Rule 163   build_in_range -> RANGE LPAREN argument COMMA argument RPAREN
Rule 164   build_in_print -> PRINT LPAREN argument RPAREN
Rule 165   build_in_functions -> RAND LPAREN RPAREN
Rule 166   build_in_functions -> LOG LPAREN argument COMMA argument RPAREN
Rule 167   build_in_functions -> EXP LPAREN argument RPAREN
Rule 168   build_in_functions -> COS LPAREN argument RPAREN
Rule 169   build_in_functions -> SIN LPAREN argument RPAREN
Rule 170   build_in_functions -> SQRT LPAREN argument RPAREN
Rule 171   build_in_functions -> build_in_print
Rule 172   build_in_functions -> build_in_range
Rule 173   build_in_consts -> E_CONST
Rule 174   build_in_consts -> PI_CONST
Rule 175   empty -> <empty>

Terminals, with rules where they appear:

AND                  : 91
AS                   : 136
ASSIGN               : 23 24 60 120 121
ASTERPOWER           : 46
BOOLEAN_TYPE         : 28
COLON                : 28 29 30
COMMA                : 21 137 163 166
CONCAT               : 36
COS                  : 168
DEST_ASSIGN          : 61
DIVIDE               : 43
DOT                  : 144 145 146
ELIF                 : 78 79
ELSE                 : 76 77
EQUAL                : 96
ESPACEDCONCAT        : 35
EXP                  : 167
EXTENDS              : 150 151
E_CONST              : 173
FALSE                : 101
FOR                  : 86 87
FUNCTION             : 68
GREATER_EQUAL        : 98
GREATER_THAN         : 100
IDENTIFIER           : 27 30 68 93 103 104 105 106 107 108 109 110 112 113 122 123 124 125 126 127 128 129 130 131 132 133 134 143 144 145 145 146 150 150 151 151 152 153 157 158
IF                   : 72 73
IN                   : 16 86 87 160 161
INHERITS             : 112 113
IS                   : 135
LBRACE               : 31 32 114 115 154
LBRACKET             : 142 159
LESS_EQUAL           : 97
LESS_THAN            : 99
LET                  : 16
LOG                  : 166
LPAREN               : 12 17 48 62 64 66 74 75 82 83 84 85 86 87 92 111 122 123 124 127 128 131 132 133 134 157 163 164 165 166 167 168 169 170
MINUS                : 39
MODULE               : 42
MULTIPLY             : 44
NEW                  : 133 134
NOT                  : 89
NOT_EQUAL            : 95
NUMBER               : 59
NUMBER_TYPE          : 29
OR                   : 90 160
PI_CONST             : 174
PLUS                 : 40
POWER                : 47
PRINT                : 164
PROTOCOL             : 150 151 152 153
RAND                 : 165
RANGE                : 163
RBRACE               : 31 32 114 115 154
RBRACKET             : 142 159
RETURN               : 70 71 123 124 126 128 130
RPAREN               : 12 17 48 62 64 66 74 75 82 83 84 85 86 87 92 111 122 123 124 127 128 131 132 133 134 157 163 164 165 166 167 168 169 170
SEMICOLON            : 8 9 10 64 65 70 71 103 104 107 108 116 117 150 152 155 156
SIN                  : 169
SINCETHAT            : 161
SQRT                 : 170
STRING               : 58
TRUE                 : 102
TYPE                 : 103 104 105 106 107 108 109 110
WHILE                : 82 83 84 85
error                : 

Nonterminals, with rules where they appear:

argument             : 137 138 163 163 164 166 166 167 168 169 170
arguments_list       : 111 132 134 137 162
aritmetic_operation  : 37 39 40 48
atom                 : 26 35 36 142
atribute_declaration : 119
base_exponent        : 45 46 47
boolean_value        : 52
build_in_consts      : 50
build_in_functions   : 51
build_in_print       : 171
build_in_range       : 172
comparation          : 94
condition            : 88 89 90 91
conditional          : 139 148
conditional_expression : 74 75 84 85 90 91 92 123
decl                 : 116 117
decl_body            : 103 104 105 106 107 108 109 110
decl_list            : 114 116
else_elif_statement  : 74 75
empty                : 2
expression           : 13 18 35 36 60 61 74 80 82 82 83 84 86 86 87 95 95 96 96 97 97 98 98 99 99 100 100 120 121 124 126 128 130 140 142 160 160 161 161
factor               : 41 42 43 44 46 47
flux_control         : 14 19
for_loop             : 147
full_conditional     : 72 78
full_else            : 76
fully_typed_param    : 25
func_decl_id         : 62 63 64 65 66 67
function_call        : 57 146
function_declaration : 6
function_full_declaration : 64 65 66 67 122 125 127 129
function_inline_declaration : 62 63
identifier           : 23 24 49 86 87 120 121 135 136 160 161
inherits_type        : 103 105 107 109
inline_conditional   : 73 79
inline_else          : 77
inst                 : 8 9 10 11 23 24 70 71
inst_list            : 8 32
inst_wrapper         : 4
method_declaration   : 118
parameters           : 63 65 67 107 108 109 110 112 125 126 129 130 158
program              : 0
program_decl_list    : 1 3
program_level_decl   : 3
protocol_body        : 150 151 152 153
protocol_declaration : 5
scope                : 15 20 69 75 81 83 85 87
term                 : 38 39 40 42 43 44
type_anotation       : 27 70 122 123 124 125 126 157 158
type_conforming      : 93
type_declaration     : 7
type_downcast        : 23 120
type_instanciation   : 53
var_asign            : 34
var_attr             : 141 144
var_dec              : 12 17 33
var_decl_expr        : 16
var_init             : 21 22
var_init_list        : 16 21
var_method           : 54
var_use              : 56 60 61
vector               : 55
vector_decl          : 159
virtual_method       : 155 156
virtual_method_list  : 154 155
while_loop           : 149


state 0

    (0) S' -> . program
    (1) program -> . program_decl_list
    (2) program_decl_list -> . empty
    (3) program_decl_list -> . program_level_decl program_decl_list
    (4) program_decl_list -> . inst_wrapper
    (175) empty -> .
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (10) inst_wrapper -> . inst SEMICOLON
    (11) inst_wrapper -> . inst
    (150) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (153) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (62) function_declaration -> . func_decl_id LPAREN RPAREN function_inline_declaration
    (63) function_declaration -> . func_decl_id parameters function_inline_declaration
    (64) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
    (65) function_declaration -> . func_decl_id parameters function_full_declaration SEMICOLON
    (66) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration
    (67) function_declaration -> . func_decl_id parameters function_full_declaration
    (103) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body SEMICOLON
    (104) type_declaration -> . TYPE IDENTIFIER decl_body SEMICOLON
    (105) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body
    (106) type_declaration -> . TYPE IDENTIFIER decl_body
    (107) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (108) type_declaration -> . TYPE IDENTIFIER parameters decl_body SEMICOLON
    (109) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body
    (110) type_declaration -> . TYPE IDENTIFIER parameters decl_body
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (68) func_decl_id -> . FUNCTION IDENTIFIER
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 175 (empty -> .)
    PROTOCOL        shift and go to state 10
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    FUNCTION        shift and go to state 19
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    program                        shift and go to state 1
    program_decl_list              shift and go to state 2
    empty                          shift and go to state 3
    program_level_decl             shift and go to state 4
    inst_wrapper                   shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    func_decl_id                   shift and go to state 12
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 1

    (0) S' -> program .


state 2

    (1) program -> program_decl_list .
    $end            reduce using rule 1 (program -> program_decl_list .)


state 3

    (2) program_decl_list -> empty .
    $end            reduce using rule 2 (program_decl_list -> empty .)


state 4

    (3) program_decl_list -> program_level_decl . program_decl_list
    (2) program_decl_list -> . empty
    (3) program_decl_list -> . program_level_decl program_decl_list
    (4) program_decl_list -> . inst_wrapper
    (175) empty -> .
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (10) inst_wrapper -> . inst SEMICOLON
    (11) inst_wrapper -> . inst
    (150) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (153) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (62) function_declaration -> . func_decl_id LPAREN RPAREN function_inline_declaration
    (63) function_declaration -> . func_decl_id parameters function_inline_declaration
    (64) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
    (65) function_declaration -> . func_decl_id parameters function_full_declaration SEMICOLON
    (66) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration
    (67) function_declaration -> . func_decl_id parameters function_full_declaration
    (103) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body SEMICOLON
    (104) type_declaration -> . TYPE IDENTIFIER decl_body SEMICOLON
    (105) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body
    (106) type_declaration -> . TYPE IDENTIFIER decl_body
    (107) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (108) type_declaration -> . TYPE IDENTIFIER parameters decl_body SEMICOLON
    (109) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body
    (110) type_declaration -> . TYPE IDENTIFIER parameters decl_body
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (68) func_decl_id -> . FUNCTION IDENTIFIER
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 175 (empty -> .)
    PROTOCOL        shift and go to state 10
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    FUNCTION        shift and go to state 19
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    program_level_decl             shift and go to state 4
    program_decl_list              shift and go to state 63
    empty                          shift and go to state 3
    inst_wrapper                   shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    func_decl_id                   shift and go to state 12
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 5

    (4) program_decl_list -> inst_wrapper .
    $end            reduce using rule 4 (program_decl_list -> inst_wrapper .)


state 6

    (5) program_level_decl -> protocol_declaration .
    PROTOCOL        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TYPE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LPAREN          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FUNCTION        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACE          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LET             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    STRING          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NUMBER          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FOR             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IF              reduce using rule 5 (program_level_decl -> protocol_declaration .)
    WHILE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IDENTIFIER      reduce using rule 5 (program_level_decl -> protocol_declaration .)
    E_CONST         reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PI_CONST        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RAND            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LOG             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    EXP             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    COS             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SIN             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SQRT            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FALSE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TRUE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NEW             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACKET        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PRINT           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RANGE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    $end            reduce using rule 5 (program_level_decl -> protocol_declaration .)


state 7

    (6) program_level_decl -> function_declaration .
    PROTOCOL        reduce using rule 6 (program_level_decl -> function_declaration .)
    TYPE            reduce using rule 6 (program_level_decl -> function_declaration .)
    LPAREN          reduce using rule 6 (program_level_decl -> function_declaration .)
    FUNCTION        reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACE          reduce using rule 6 (program_level_decl -> function_declaration .)
    LET             reduce using rule 6 (program_level_decl -> function_declaration .)
    STRING          reduce using rule 6 (program_level_decl -> function_declaration .)
    NUMBER          reduce using rule 6 (program_level_decl -> function_declaration .)
    FOR             reduce using rule 6 (program_level_decl -> function_declaration .)
    IF              reduce using rule 6 (program_level_decl -> function_declaration .)
    WHILE           reduce using rule 6 (program_level_decl -> function_declaration .)
    IDENTIFIER      reduce using rule 6 (program_level_decl -> function_declaration .)
    E_CONST         reduce using rule 6 (program_level_decl -> function_declaration .)
    PI_CONST        reduce using rule 6 (program_level_decl -> function_declaration .)
    RAND            reduce using rule 6 (program_level_decl -> function_declaration .)
    LOG             reduce using rule 6 (program_level_decl -> function_declaration .)
    EXP             reduce using rule 6 (program_level_decl -> function_declaration .)
    COS             reduce using rule 6 (program_level_decl -> function_declaration .)
    SIN             reduce using rule 6 (program_level_decl -> function_declaration .)
    SQRT            reduce using rule 6 (program_level_decl -> function_declaration .)
    FALSE           reduce using rule 6 (program_level_decl -> function_declaration .)
    TRUE            reduce using rule 6 (program_level_decl -> function_declaration .)
    NEW             reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACKET        reduce using rule 6 (program_level_decl -> function_declaration .)
    PRINT           reduce using rule 6 (program_level_decl -> function_declaration .)
    RANGE           reduce using rule 6 (program_level_decl -> function_declaration .)
    $end            reduce using rule 6 (program_level_decl -> function_declaration .)


state 8

    (7) program_level_decl -> type_declaration .
    PROTOCOL        reduce using rule 7 (program_level_decl -> type_declaration .)
    TYPE            reduce using rule 7 (program_level_decl -> type_declaration .)
    LPAREN          reduce using rule 7 (program_level_decl -> type_declaration .)
    FUNCTION        reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACE          reduce using rule 7 (program_level_decl -> type_declaration .)
    LET             reduce using rule 7 (program_level_decl -> type_declaration .)
    STRING          reduce using rule 7 (program_level_decl -> type_declaration .)
    NUMBER          reduce using rule 7 (program_level_decl -> type_declaration .)
    FOR             reduce using rule 7 (program_level_decl -> type_declaration .)
    IF              reduce using rule 7 (program_level_decl -> type_declaration .)
    WHILE           reduce using rule 7 (program_level_decl -> type_declaration .)
    IDENTIFIER      reduce using rule 7 (program_level_decl -> type_declaration .)
    E_CONST         reduce using rule 7 (program_level_decl -> type_declaration .)
    PI_CONST        reduce using rule 7 (program_level_decl -> type_declaration .)
    RAND            reduce using rule 7 (program_level_decl -> type_declaration .)
    LOG             reduce using rule 7 (program_level_decl -> type_declaration .)
    EXP             reduce using rule 7 (program_level_decl -> type_declaration .)
    COS             reduce using rule 7 (program_level_decl -> type_declaration .)
    SIN             reduce using rule 7 (program_level_decl -> type_declaration .)
    SQRT            reduce using rule 7 (program_level_decl -> type_declaration .)
    FALSE           reduce using rule 7 (program_level_decl -> type_declaration .)
    TRUE            reduce using rule 7 (program_level_decl -> type_declaration .)
    NEW             reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACKET        reduce using rule 7 (program_level_decl -> type_declaration .)
    PRINT           reduce using rule 7 (program_level_decl -> type_declaration .)
    RANGE           reduce using rule 7 (program_level_decl -> type_declaration .)
    $end            reduce using rule 7 (program_level_decl -> type_declaration .)


state 9

    (10) inst_wrapper -> inst . SEMICOLON
    (11) inst_wrapper -> inst .
    SEMICOLON       shift and go to state 64
    $end            reduce using rule 11 (inst_wrapper -> inst .)


state 10

    (150) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body SEMICOLON
    (153) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 65


state 11

    (143) var_use -> IDENTIFIER .
    (146) var_method -> IDENTIFIER . DOT function_call
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (27) fully_typed_param -> IDENTIFIER . type_anotation
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 143 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    $end            reduce using rule 143 (var_use -> IDENTIFIER .)
    OR              reduce using rule 143 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 143 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 143 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    AS              reduce using rule 143 (var_use -> IDENTIFIER .)
    IN              reduce using rule 143 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 143 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 143 (var_use -> IDENTIFIER .)
    AND             reduce using rule 143 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 66
    LPAREN          shift and go to state 67
    COLON           shift and go to state 69

    type_anotation                 shift and go to state 68

state 12

    (62) function_declaration -> func_decl_id . LPAREN RPAREN function_inline_declaration
    (63) function_declaration -> func_decl_id . parameters function_inline_declaration
    (64) function_declaration -> func_decl_id . LPAREN RPAREN function_full_declaration SEMICOLON
    (65) function_declaration -> func_decl_id . parameters function_full_declaration SEMICOLON
    (66) function_declaration -> func_decl_id . LPAREN RPAREN function_full_declaration
    (67) function_declaration -> func_decl_id . parameters function_full_declaration
    (111) parameters -> . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 70

    parameters                     shift and go to state 71

state 13

    (12) inst -> LPAREN . var_dec RPAREN
    (48) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LET             shift and go to state 27
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    var_dec                        shift and go to state 73
    aritmetic_operation            shift and go to state 74
    term                           shift and go to state 38
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 14

    (103) type_declaration -> TYPE . IDENTIFIER inherits_type decl_body SEMICOLON
    (104) type_declaration -> TYPE . IDENTIFIER decl_body SEMICOLON
    (105) type_declaration -> TYPE . IDENTIFIER inherits_type decl_body
    (106) type_declaration -> TYPE . IDENTIFIER decl_body
    (107) type_declaration -> TYPE . IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (108) type_declaration -> TYPE . IDENTIFIER parameters decl_body SEMICOLON
    (109) type_declaration -> TYPE . IDENTIFIER parameters inherits_type decl_body
    (110) type_declaration -> TYPE . IDENTIFIER parameters decl_body
    IDENTIFIER      shift and go to state 78


state 15

    (33) expression -> var_dec .
    SEMICOLON       reduce using rule 33 (expression -> var_dec .)
    $end            reduce using rule 33 (expression -> var_dec .)
    OR              reduce using rule 33 (expression -> var_dec .)
    SINCETHAT       reduce using rule 33 (expression -> var_dec .)
    COMMA           reduce using rule 33 (expression -> var_dec .)
    RBRACKET        reduce using rule 33 (expression -> var_dec .)
    RPAREN          reduce using rule 33 (expression -> var_dec .)
    NOT_EQUAL       reduce using rule 33 (expression -> var_dec .)
    EQUAL           reduce using rule 33 (expression -> var_dec .)
    LESS_EQUAL      reduce using rule 33 (expression -> var_dec .)
    GREATER_EQUAL   reduce using rule 33 (expression -> var_dec .)
    LESS_THAN       reduce using rule 33 (expression -> var_dec .)
    GREATER_THAN    reduce using rule 33 (expression -> var_dec .)
    AS              reduce using rule 33 (expression -> var_dec .)
    IN              reduce using rule 33 (expression -> var_dec .)
    ELSE            reduce using rule 33 (expression -> var_dec .)
    ELIF            reduce using rule 33 (expression -> var_dec .)
    AND             reduce using rule 33 (expression -> var_dec .)


state 16

    (13) inst -> expression .
    SEMICOLON       reduce using rule 13 (inst -> expression .)
    $end            reduce using rule 13 (inst -> expression .)
    AS              reduce using rule 13 (inst -> expression .)
    COMMA           reduce using rule 13 (inst -> expression .)
    IN              reduce using rule 13 (inst -> expression .)


state 17

    (14) inst -> flux_control .
    SEMICOLON       reduce using rule 14 (inst -> flux_control .)
    $end            reduce using rule 14 (inst -> flux_control .)
    AS              reduce using rule 14 (inst -> flux_control .)
    COMMA           reduce using rule 14 (inst -> flux_control .)
    IN              reduce using rule 14 (inst -> flux_control .)


state 18

    (15) inst -> scope .
    SEMICOLON       reduce using rule 15 (inst -> scope .)
    $end            reduce using rule 15 (inst -> scope .)
    AS              reduce using rule 15 (inst -> scope .)
    COMMA           reduce using rule 15 (inst -> scope .)
    IN              reduce using rule 15 (inst -> scope .)


state 19

    (68) func_decl_id -> FUNCTION . IDENTIFIER
    IDENTIFIER      shift and go to state 79


state 20

    (34) expression -> var_asign .
    SEMICOLON       reduce using rule 34 (expression -> var_asign .)
    $end            reduce using rule 34 (expression -> var_asign .)
    OR              reduce using rule 34 (expression -> var_asign .)
    SINCETHAT       reduce using rule 34 (expression -> var_asign .)
    COMMA           reduce using rule 34 (expression -> var_asign .)
    RBRACKET        reduce using rule 34 (expression -> var_asign .)
    RPAREN          reduce using rule 34 (expression -> var_asign .)
    NOT_EQUAL       reduce using rule 34 (expression -> var_asign .)
    EQUAL           reduce using rule 34 (expression -> var_asign .)
    LESS_EQUAL      reduce using rule 34 (expression -> var_asign .)
    GREATER_EQUAL   reduce using rule 34 (expression -> var_asign .)
    LESS_THAN       reduce using rule 34 (expression -> var_asign .)
    GREATER_THAN    reduce using rule 34 (expression -> var_asign .)
    AS              reduce using rule 34 (expression -> var_asign .)
    IN              reduce using rule 34 (expression -> var_asign .)
    ELSE            reduce using rule 34 (expression -> var_asign .)
    ELIF            reduce using rule 34 (expression -> var_asign .)
    AND             reduce using rule 34 (expression -> var_asign .)


state 21

    (35) expression -> atom . ESPACEDCONCAT expression
    (36) expression -> atom . CONCAT expression
    (142) var_use -> atom . LBRACKET expression RBRACKET
    (26) identifier -> atom .
    ESPACEDCONCAT   shift and go to state 80
    CONCAT          shift and go to state 81
    LBRACKET        shift and go to state 82
    MODULE          reduce using rule 26 (identifier -> atom .)
    DIVIDE          reduce using rule 26 (identifier -> atom .)
    MULTIPLY        reduce using rule 26 (identifier -> atom .)
    ASTERPOWER      reduce using rule 26 (identifier -> atom .)
    POWER           reduce using rule 26 (identifier -> atom .)
    MINUS           reduce using rule 26 (identifier -> atom .)
    PLUS            reduce using rule 26 (identifier -> atom .)
    SEMICOLON       reduce using rule 26 (identifier -> atom .)
    $end            reduce using rule 26 (identifier -> atom .)
    OR              reduce using rule 26 (identifier -> atom .)
    SINCETHAT       reduce using rule 26 (identifier -> atom .)
    COMMA           reduce using rule 26 (identifier -> atom .)
    RBRACKET        reduce using rule 26 (identifier -> atom .)
    RPAREN          reduce using rule 26 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 26 (identifier -> atom .)
    EQUAL           reduce using rule 26 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 26 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 26 (identifier -> atom .)
    LESS_THAN       reduce using rule 26 (identifier -> atom .)
    GREATER_THAN    reduce using rule 26 (identifier -> atom .)
    AS              reduce using rule 26 (identifier -> atom .)
    IN              reduce using rule 26 (identifier -> atom .)
    ELSE            reduce using rule 26 (identifier -> atom .)
    ELIF            reduce using rule 26 (identifier -> atom .)
    AND             reduce using rule 26 (identifier -> atom .)


state 22

    (37) expression -> aritmetic_operation .
    SEMICOLON       reduce using rule 37 (expression -> aritmetic_operation .)
    $end            reduce using rule 37 (expression -> aritmetic_operation .)
    OR              reduce using rule 37 (expression -> aritmetic_operation .)
    SINCETHAT       reduce using rule 37 (expression -> aritmetic_operation .)
    COMMA           reduce using rule 37 (expression -> aritmetic_operation .)
    RBRACKET        reduce using rule 37 (expression -> aritmetic_operation .)
    RPAREN          reduce using rule 37 (expression -> aritmetic_operation .)
    NOT_EQUAL       reduce using rule 37 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 37 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 37 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 37 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 37 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 37 (expression -> aritmetic_operation .)
    AS              reduce using rule 37 (expression -> aritmetic_operation .)
    IN              reduce using rule 37 (expression -> aritmetic_operation .)
    ELSE            reduce using rule 37 (expression -> aritmetic_operation .)
    ELIF            reduce using rule 37 (expression -> aritmetic_operation .)
    AND             reduce using rule 37 (expression -> aritmetic_operation .)


state 23

    (147) flux_control -> for_loop .
    SEMICOLON       reduce using rule 147 (flux_control -> for_loop .)
    $end            reduce using rule 147 (flux_control -> for_loop .)
    OR              reduce using rule 147 (flux_control -> for_loop .)
    SINCETHAT       reduce using rule 147 (flux_control -> for_loop .)
    COMMA           reduce using rule 147 (flux_control -> for_loop .)
    RBRACKET        reduce using rule 147 (flux_control -> for_loop .)
    RPAREN          reduce using rule 147 (flux_control -> for_loop .)
    NOT_EQUAL       reduce using rule 147 (flux_control -> for_loop .)
    EQUAL           reduce using rule 147 (flux_control -> for_loop .)
    LESS_EQUAL      reduce using rule 147 (flux_control -> for_loop .)
    GREATER_EQUAL   reduce using rule 147 (flux_control -> for_loop .)
    LESS_THAN       reduce using rule 147 (flux_control -> for_loop .)
    GREATER_THAN    reduce using rule 147 (flux_control -> for_loop .)
    AS              reduce using rule 147 (flux_control -> for_loop .)
    IN              reduce using rule 147 (flux_control -> for_loop .)
    ELSE            reduce using rule 147 (flux_control -> for_loop .)
    ELIF            reduce using rule 147 (flux_control -> for_loop .)
    AND             reduce using rule 147 (flux_control -> for_loop .)


state 24

    (148) flux_control -> conditional .
    SEMICOLON       reduce using rule 148 (flux_control -> conditional .)
    $end            reduce using rule 148 (flux_control -> conditional .)
    OR              reduce using rule 148 (flux_control -> conditional .)
    SINCETHAT       reduce using rule 148 (flux_control -> conditional .)
    COMMA           reduce using rule 148 (flux_control -> conditional .)
    RBRACKET        reduce using rule 148 (flux_control -> conditional .)
    RPAREN          reduce using rule 148 (flux_control -> conditional .)
    NOT_EQUAL       reduce using rule 148 (flux_control -> conditional .)
    EQUAL           reduce using rule 148 (flux_control -> conditional .)
    LESS_EQUAL      reduce using rule 148 (flux_control -> conditional .)
    GREATER_EQUAL   reduce using rule 148 (flux_control -> conditional .)
    LESS_THAN       reduce using rule 148 (flux_control -> conditional .)
    GREATER_THAN    reduce using rule 148 (flux_control -> conditional .)
    AS              reduce using rule 148 (flux_control -> conditional .)
    IN              reduce using rule 148 (flux_control -> conditional .)
    ELSE            reduce using rule 148 (flux_control -> conditional .)
    ELIF            reduce using rule 148 (flux_control -> conditional .)
    AND             reduce using rule 148 (flux_control -> conditional .)


state 25

    (149) flux_control -> while_loop .
    SEMICOLON       reduce using rule 149 (flux_control -> while_loop .)
    $end            reduce using rule 149 (flux_control -> while_loop .)
    OR              reduce using rule 149 (flux_control -> while_loop .)
    SINCETHAT       reduce using rule 149 (flux_control -> while_loop .)
    COMMA           reduce using rule 149 (flux_control -> while_loop .)
    RBRACKET        reduce using rule 149 (flux_control -> while_loop .)
    RPAREN          reduce using rule 149 (flux_control -> while_loop .)
    NOT_EQUAL       reduce using rule 149 (flux_control -> while_loop .)
    EQUAL           reduce using rule 149 (flux_control -> while_loop .)
    LESS_EQUAL      reduce using rule 149 (flux_control -> while_loop .)
    GREATER_EQUAL   reduce using rule 149 (flux_control -> while_loop .)
    LESS_THAN       reduce using rule 149 (flux_control -> while_loop .)
    GREATER_THAN    reduce using rule 149 (flux_control -> while_loop .)
    AS              reduce using rule 149 (flux_control -> while_loop .)
    IN              reduce using rule 149 (flux_control -> while_loop .)
    ELSE            reduce using rule 149 (flux_control -> while_loop .)
    ELIF            reduce using rule 149 (flux_control -> while_loop .)
    AND             reduce using rule 149 (flux_control -> while_loop .)


state 26

    (31) scope -> LBRACE . RBRACE
    (32) scope -> LBRACE . inst_list RBRACE
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RBRACE          shift and go to state 83
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    inst_list                      shift and go to state 84
    inst                           shift and go to state 85
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 27

    (16) var_dec -> LET . var_init_list IN var_decl_expr
    (21) var_init_list -> . var_init COMMA var_init_list
    (22) var_init_list -> . var_init
    (23) var_init -> . identifier ASSIGN inst type_downcast
    (24) var_init -> . identifier ASSIGN inst
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    var_init_list                  shift and go to state 86
    var_init                       shift and go to state 87
    identifier                     shift and go to state 88
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 28

    (60) var_asign -> var_use . ASSIGN expression
    (61) var_asign -> var_use . DEST_ASSIGN expression
    (56) atom -> var_use .
    ASSIGN          shift and go to state 89
    DEST_ASSIGN     shift and go to state 90
    ESPACEDCONCAT   reduce using rule 56 (atom -> var_use .)
    CONCAT          reduce using rule 56 (atom -> var_use .)
    LBRACKET        reduce using rule 56 (atom -> var_use .)
    MODULE          reduce using rule 56 (atom -> var_use .)
    DIVIDE          reduce using rule 56 (atom -> var_use .)
    MULTIPLY        reduce using rule 56 (atom -> var_use .)
    ASTERPOWER      reduce using rule 56 (atom -> var_use .)
    POWER           reduce using rule 56 (atom -> var_use .)
    MINUS           reduce using rule 56 (atom -> var_use .)
    PLUS            reduce using rule 56 (atom -> var_use .)
    SEMICOLON       reduce using rule 56 (atom -> var_use .)
    $end            reduce using rule 56 (atom -> var_use .)
    OR              reduce using rule 56 (atom -> var_use .)
    SINCETHAT       reduce using rule 56 (atom -> var_use .)
    COMMA           reduce using rule 56 (atom -> var_use .)
    RBRACKET        reduce using rule 56 (atom -> var_use .)
    RPAREN          reduce using rule 56 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 56 (atom -> var_use .)
    EQUAL           reduce using rule 56 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 56 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 56 (atom -> var_use .)
    LESS_THAN       reduce using rule 56 (atom -> var_use .)
    GREATER_THAN    reduce using rule 56 (atom -> var_use .)
    AS              reduce using rule 56 (atom -> var_use .)
    IN              reduce using rule 56 (atom -> var_use .)
    ELSE            reduce using rule 56 (atom -> var_use .)
    ELIF            reduce using rule 56 (atom -> var_use .)
    AND             reduce using rule 56 (atom -> var_use .)


state 29

    (50) atom -> build_in_consts .
    ESPACEDCONCAT   reduce using rule 50 (atom -> build_in_consts .)
    CONCAT          reduce using rule 50 (atom -> build_in_consts .)
    LBRACKET        reduce using rule 50 (atom -> build_in_consts .)
    MODULE          reduce using rule 50 (atom -> build_in_consts .)
    DIVIDE          reduce using rule 50 (atom -> build_in_consts .)
    MULTIPLY        reduce using rule 50 (atom -> build_in_consts .)
    ASTERPOWER      reduce using rule 50 (atom -> build_in_consts .)
    POWER           reduce using rule 50 (atom -> build_in_consts .)
    MINUS           reduce using rule 50 (atom -> build_in_consts .)
    PLUS            reduce using rule 50 (atom -> build_in_consts .)
    SEMICOLON       reduce using rule 50 (atom -> build_in_consts .)
    $end            reduce using rule 50 (atom -> build_in_consts .)
    RPAREN          reduce using rule 50 (atom -> build_in_consts .)
    ASSIGN          reduce using rule 50 (atom -> build_in_consts .)
    OR              reduce using rule 50 (atom -> build_in_consts .)
    SINCETHAT       reduce using rule 50 (atom -> build_in_consts .)
    COMMA           reduce using rule 50 (atom -> build_in_consts .)
    RBRACKET        reduce using rule 50 (atom -> build_in_consts .)
    NOT_EQUAL       reduce using rule 50 (atom -> build_in_consts .)
    EQUAL           reduce using rule 50 (atom -> build_in_consts .)
    LESS_EQUAL      reduce using rule 50 (atom -> build_in_consts .)
    GREATER_EQUAL   reduce using rule 50 (atom -> build_in_consts .)
    LESS_THAN       reduce using rule 50 (atom -> build_in_consts .)
    GREATER_THAN    reduce using rule 50 (atom -> build_in_consts .)
    AS              reduce using rule 50 (atom -> build_in_consts .)
    IN              reduce using rule 50 (atom -> build_in_consts .)
    ELSE            reduce using rule 50 (atom -> build_in_consts .)
    ELIF            reduce using rule 50 (atom -> build_in_consts .)
    AND             reduce using rule 50 (atom -> build_in_consts .)


state 30

    (51) atom -> build_in_functions .
    ESPACEDCONCAT   reduce using rule 51 (atom -> build_in_functions .)
    CONCAT          reduce using rule 51 (atom -> build_in_functions .)
    LBRACKET        reduce using rule 51 (atom -> build_in_functions .)
    MODULE          reduce using rule 51 (atom -> build_in_functions .)
    DIVIDE          reduce using rule 51 (atom -> build_in_functions .)
    MULTIPLY        reduce using rule 51 (atom -> build_in_functions .)
    ASTERPOWER      reduce using rule 51 (atom -> build_in_functions .)
    POWER           reduce using rule 51 (atom -> build_in_functions .)
    MINUS           reduce using rule 51 (atom -> build_in_functions .)
    PLUS            reduce using rule 51 (atom -> build_in_functions .)
    SEMICOLON       reduce using rule 51 (atom -> build_in_functions .)
    $end            reduce using rule 51 (atom -> build_in_functions .)
    RPAREN          reduce using rule 51 (atom -> build_in_functions .)
    ASSIGN          reduce using rule 51 (atom -> build_in_functions .)
    OR              reduce using rule 51 (atom -> build_in_functions .)
    SINCETHAT       reduce using rule 51 (atom -> build_in_functions .)
    COMMA           reduce using rule 51 (atom -> build_in_functions .)
    RBRACKET        reduce using rule 51 (atom -> build_in_functions .)
    NOT_EQUAL       reduce using rule 51 (atom -> build_in_functions .)
    EQUAL           reduce using rule 51 (atom -> build_in_functions .)
    LESS_EQUAL      reduce using rule 51 (atom -> build_in_functions .)
    GREATER_EQUAL   reduce using rule 51 (atom -> build_in_functions .)
    LESS_THAN       reduce using rule 51 (atom -> build_in_functions .)
    GREATER_THAN    reduce using rule 51 (atom -> build_in_functions .)
    AS              reduce using rule 51 (atom -> build_in_functions .)
    IN              reduce using rule 51 (atom -> build_in_functions .)
    ELSE            reduce using rule 51 (atom -> build_in_functions .)
    ELIF            reduce using rule 51 (atom -> build_in_functions .)
    AND             reduce using rule 51 (atom -> build_in_functions .)


state 31

    (52) atom -> boolean_value .
    ESPACEDCONCAT   reduce using rule 52 (atom -> boolean_value .)
    CONCAT          reduce using rule 52 (atom -> boolean_value .)
    LBRACKET        reduce using rule 52 (atom -> boolean_value .)
    MODULE          reduce using rule 52 (atom -> boolean_value .)
    DIVIDE          reduce using rule 52 (atom -> boolean_value .)
    MULTIPLY        reduce using rule 52 (atom -> boolean_value .)
    ASTERPOWER      reduce using rule 52 (atom -> boolean_value .)
    POWER           reduce using rule 52 (atom -> boolean_value .)
    MINUS           reduce using rule 52 (atom -> boolean_value .)
    PLUS            reduce using rule 52 (atom -> boolean_value .)
    SEMICOLON       reduce using rule 52 (atom -> boolean_value .)
    $end            reduce using rule 52 (atom -> boolean_value .)
    RPAREN          reduce using rule 52 (atom -> boolean_value .)
    ASSIGN          reduce using rule 52 (atom -> boolean_value .)
    OR              reduce using rule 52 (atom -> boolean_value .)
    SINCETHAT       reduce using rule 52 (atom -> boolean_value .)
    COMMA           reduce using rule 52 (atom -> boolean_value .)
    RBRACKET        reduce using rule 52 (atom -> boolean_value .)
    NOT_EQUAL       reduce using rule 52 (atom -> boolean_value .)
    EQUAL           reduce using rule 52 (atom -> boolean_value .)
    LESS_EQUAL      reduce using rule 52 (atom -> boolean_value .)
    GREATER_EQUAL   reduce using rule 52 (atom -> boolean_value .)
    LESS_THAN       reduce using rule 52 (atom -> boolean_value .)
    GREATER_THAN    reduce using rule 52 (atom -> boolean_value .)
    AS              reduce using rule 52 (atom -> boolean_value .)
    IN              reduce using rule 52 (atom -> boolean_value .)
    ELSE            reduce using rule 52 (atom -> boolean_value .)
    ELIF            reduce using rule 52 (atom -> boolean_value .)
    AND             reduce using rule 52 (atom -> boolean_value .)


state 32

    (53) atom -> type_instanciation .
    ESPACEDCONCAT   reduce using rule 53 (atom -> type_instanciation .)
    CONCAT          reduce using rule 53 (atom -> type_instanciation .)
    LBRACKET        reduce using rule 53 (atom -> type_instanciation .)
    MODULE          reduce using rule 53 (atom -> type_instanciation .)
    DIVIDE          reduce using rule 53 (atom -> type_instanciation .)
    MULTIPLY        reduce using rule 53 (atom -> type_instanciation .)
    ASTERPOWER      reduce using rule 53 (atom -> type_instanciation .)
    POWER           reduce using rule 53 (atom -> type_instanciation .)
    MINUS           reduce using rule 53 (atom -> type_instanciation .)
    PLUS            reduce using rule 53 (atom -> type_instanciation .)
    SEMICOLON       reduce using rule 53 (atom -> type_instanciation .)
    $end            reduce using rule 53 (atom -> type_instanciation .)
    RPAREN          reduce using rule 53 (atom -> type_instanciation .)
    ASSIGN          reduce using rule 53 (atom -> type_instanciation .)
    OR              reduce using rule 53 (atom -> type_instanciation .)
    SINCETHAT       reduce using rule 53 (atom -> type_instanciation .)
    COMMA           reduce using rule 53 (atom -> type_instanciation .)
    RBRACKET        reduce using rule 53 (atom -> type_instanciation .)
    NOT_EQUAL       reduce using rule 53 (atom -> type_instanciation .)
    EQUAL           reduce using rule 53 (atom -> type_instanciation .)
    LESS_EQUAL      reduce using rule 53 (atom -> type_instanciation .)
    GREATER_EQUAL   reduce using rule 53 (atom -> type_instanciation .)
    LESS_THAN       reduce using rule 53 (atom -> type_instanciation .)
    GREATER_THAN    reduce using rule 53 (atom -> type_instanciation .)
    AS              reduce using rule 53 (atom -> type_instanciation .)
    IN              reduce using rule 53 (atom -> type_instanciation .)
    ELSE            reduce using rule 53 (atom -> type_instanciation .)
    ELIF            reduce using rule 53 (atom -> type_instanciation .)
    AND             reduce using rule 53 (atom -> type_instanciation .)


state 33

    (54) atom -> var_method .
    ESPACEDCONCAT   reduce using rule 54 (atom -> var_method .)
    CONCAT          reduce using rule 54 (atom -> var_method .)
    LBRACKET        reduce using rule 54 (atom -> var_method .)
    MODULE          reduce using rule 54 (atom -> var_method .)
    DIVIDE          reduce using rule 54 (atom -> var_method .)
    MULTIPLY        reduce using rule 54 (atom -> var_method .)
    ASTERPOWER      reduce using rule 54 (atom -> var_method .)
    POWER           reduce using rule 54 (atom -> var_method .)
    MINUS           reduce using rule 54 (atom -> var_method .)
    PLUS            reduce using rule 54 (atom -> var_method .)
    SEMICOLON       reduce using rule 54 (atom -> var_method .)
    $end            reduce using rule 54 (atom -> var_method .)
    RPAREN          reduce using rule 54 (atom -> var_method .)
    ASSIGN          reduce using rule 54 (atom -> var_method .)
    OR              reduce using rule 54 (atom -> var_method .)
    SINCETHAT       reduce using rule 54 (atom -> var_method .)
    COMMA           reduce using rule 54 (atom -> var_method .)
    RBRACKET        reduce using rule 54 (atom -> var_method .)
    NOT_EQUAL       reduce using rule 54 (atom -> var_method .)
    EQUAL           reduce using rule 54 (atom -> var_method .)
    LESS_EQUAL      reduce using rule 54 (atom -> var_method .)
    GREATER_EQUAL   reduce using rule 54 (atom -> var_method .)
    LESS_THAN       reduce using rule 54 (atom -> var_method .)
    GREATER_THAN    reduce using rule 54 (atom -> var_method .)
    AS              reduce using rule 54 (atom -> var_method .)
    IN              reduce using rule 54 (atom -> var_method .)
    ELSE            reduce using rule 54 (atom -> var_method .)
    ELIF            reduce using rule 54 (atom -> var_method .)
    AND             reduce using rule 54 (atom -> var_method .)


state 34

    (55) atom -> vector .
    ESPACEDCONCAT   reduce using rule 55 (atom -> vector .)
    CONCAT          reduce using rule 55 (atom -> vector .)
    LBRACKET        reduce using rule 55 (atom -> vector .)
    MODULE          reduce using rule 55 (atom -> vector .)
    DIVIDE          reduce using rule 55 (atom -> vector .)
    MULTIPLY        reduce using rule 55 (atom -> vector .)
    ASTERPOWER      reduce using rule 55 (atom -> vector .)
    POWER           reduce using rule 55 (atom -> vector .)
    MINUS           reduce using rule 55 (atom -> vector .)
    PLUS            reduce using rule 55 (atom -> vector .)
    SEMICOLON       reduce using rule 55 (atom -> vector .)
    $end            reduce using rule 55 (atom -> vector .)
    RPAREN          reduce using rule 55 (atom -> vector .)
    ASSIGN          reduce using rule 55 (atom -> vector .)
    OR              reduce using rule 55 (atom -> vector .)
    SINCETHAT       reduce using rule 55 (atom -> vector .)
    COMMA           reduce using rule 55 (atom -> vector .)
    RBRACKET        reduce using rule 55 (atom -> vector .)
    NOT_EQUAL       reduce using rule 55 (atom -> vector .)
    EQUAL           reduce using rule 55 (atom -> vector .)
    LESS_EQUAL      reduce using rule 55 (atom -> vector .)
    GREATER_EQUAL   reduce using rule 55 (atom -> vector .)
    LESS_THAN       reduce using rule 55 (atom -> vector .)
    GREATER_THAN    reduce using rule 55 (atom -> vector .)
    AS              reduce using rule 55 (atom -> vector .)
    IN              reduce using rule 55 (atom -> vector .)
    ELSE            reduce using rule 55 (atom -> vector .)
    ELIF            reduce using rule 55 (atom -> vector .)
    AND             reduce using rule 55 (atom -> vector .)


state 35

    (57) atom -> function_call .
    ESPACEDCONCAT   reduce using rule 57 (atom -> function_call .)
    CONCAT          reduce using rule 57 (atom -> function_call .)
    LBRACKET        reduce using rule 57 (atom -> function_call .)
    MODULE          reduce using rule 57 (atom -> function_call .)
    DIVIDE          reduce using rule 57 (atom -> function_call .)
    MULTIPLY        reduce using rule 57 (atom -> function_call .)
    ASTERPOWER      reduce using rule 57 (atom -> function_call .)
    POWER           reduce using rule 57 (atom -> function_call .)
    MINUS           reduce using rule 57 (atom -> function_call .)
    PLUS            reduce using rule 57 (atom -> function_call .)
    SEMICOLON       reduce using rule 57 (atom -> function_call .)
    $end            reduce using rule 57 (atom -> function_call .)
    RPAREN          reduce using rule 57 (atom -> function_call .)
    ASSIGN          reduce using rule 57 (atom -> function_call .)
    OR              reduce using rule 57 (atom -> function_call .)
    SINCETHAT       reduce using rule 57 (atom -> function_call .)
    COMMA           reduce using rule 57 (atom -> function_call .)
    RBRACKET        reduce using rule 57 (atom -> function_call .)
    NOT_EQUAL       reduce using rule 57 (atom -> function_call .)
    EQUAL           reduce using rule 57 (atom -> function_call .)
    LESS_EQUAL      reduce using rule 57 (atom -> function_call .)
    GREATER_EQUAL   reduce using rule 57 (atom -> function_call .)
    LESS_THAN       reduce using rule 57 (atom -> function_call .)
    GREATER_THAN    reduce using rule 57 (atom -> function_call .)
    AS              reduce using rule 57 (atom -> function_call .)
    IN              reduce using rule 57 (atom -> function_call .)
    ELSE            reduce using rule 57 (atom -> function_call .)
    ELIF            reduce using rule 57 (atom -> function_call .)
    AND             reduce using rule 57 (atom -> function_call .)


state 36

    (58) atom -> STRING .
    ESPACEDCONCAT   reduce using rule 58 (atom -> STRING .)
    CONCAT          reduce using rule 58 (atom -> STRING .)
    LBRACKET        reduce using rule 58 (atom -> STRING .)
    MODULE          reduce using rule 58 (atom -> STRING .)
    DIVIDE          reduce using rule 58 (atom -> STRING .)
    MULTIPLY        reduce using rule 58 (atom -> STRING .)
    ASTERPOWER      reduce using rule 58 (atom -> STRING .)
    POWER           reduce using rule 58 (atom -> STRING .)
    MINUS           reduce using rule 58 (atom -> STRING .)
    PLUS            reduce using rule 58 (atom -> STRING .)
    SEMICOLON       reduce using rule 58 (atom -> STRING .)
    $end            reduce using rule 58 (atom -> STRING .)
    RPAREN          reduce using rule 58 (atom -> STRING .)
    ASSIGN          reduce using rule 58 (atom -> STRING .)
    OR              reduce using rule 58 (atom -> STRING .)
    SINCETHAT       reduce using rule 58 (atom -> STRING .)
    COMMA           reduce using rule 58 (atom -> STRING .)
    RBRACKET        reduce using rule 58 (atom -> STRING .)
    NOT_EQUAL       reduce using rule 58 (atom -> STRING .)
    EQUAL           reduce using rule 58 (atom -> STRING .)
    LESS_EQUAL      reduce using rule 58 (atom -> STRING .)
    GREATER_EQUAL   reduce using rule 58 (atom -> STRING .)
    LESS_THAN       reduce using rule 58 (atom -> STRING .)
    GREATER_THAN    reduce using rule 58 (atom -> STRING .)
    AS              reduce using rule 58 (atom -> STRING .)
    IN              reduce using rule 58 (atom -> STRING .)
    ELSE            reduce using rule 58 (atom -> STRING .)
    ELIF            reduce using rule 58 (atom -> STRING .)
    AND             reduce using rule 58 (atom -> STRING .)


state 37

    (59) atom -> NUMBER .
    ESPACEDCONCAT   reduce using rule 59 (atom -> NUMBER .)
    CONCAT          reduce using rule 59 (atom -> NUMBER .)
    LBRACKET        reduce using rule 59 (atom -> NUMBER .)
    MODULE          reduce using rule 59 (atom -> NUMBER .)
    DIVIDE          reduce using rule 59 (atom -> NUMBER .)
    MULTIPLY        reduce using rule 59 (atom -> NUMBER .)
    ASTERPOWER      reduce using rule 59 (atom -> NUMBER .)
    POWER           reduce using rule 59 (atom -> NUMBER .)
    MINUS           reduce using rule 59 (atom -> NUMBER .)
    PLUS            reduce using rule 59 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 59 (atom -> NUMBER .)
    $end            reduce using rule 59 (atom -> NUMBER .)
    RPAREN          reduce using rule 59 (atom -> NUMBER .)
    ASSIGN          reduce using rule 59 (atom -> NUMBER .)
    OR              reduce using rule 59 (atom -> NUMBER .)
    SINCETHAT       reduce using rule 59 (atom -> NUMBER .)
    COMMA           reduce using rule 59 (atom -> NUMBER .)
    RBRACKET        reduce using rule 59 (atom -> NUMBER .)
    NOT_EQUAL       reduce using rule 59 (atom -> NUMBER .)
    EQUAL           reduce using rule 59 (atom -> NUMBER .)
    LESS_EQUAL      reduce using rule 59 (atom -> NUMBER .)
    GREATER_EQUAL   reduce using rule 59 (atom -> NUMBER .)
    LESS_THAN       reduce using rule 59 (atom -> NUMBER .)
    GREATER_THAN    reduce using rule 59 (atom -> NUMBER .)
    AS              reduce using rule 59 (atom -> NUMBER .)
    IN              reduce using rule 59 (atom -> NUMBER .)
    ELSE            reduce using rule 59 (atom -> NUMBER .)
    ELIF            reduce using rule 59 (atom -> NUMBER .)
    AND             reduce using rule 59 (atom -> NUMBER .)


state 38

    (38) aritmetic_operation -> term .
    (39) aritmetic_operation -> term . MINUS aritmetic_operation
    (40) aritmetic_operation -> term . PLUS aritmetic_operation
    SEMICOLON       reduce using rule 38 (aritmetic_operation -> term .)
    $end            reduce using rule 38 (aritmetic_operation -> term .)
    RPAREN          reduce using rule 38 (aritmetic_operation -> term .)
    OR              reduce using rule 38 (aritmetic_operation -> term .)
    SINCETHAT       reduce using rule 38 (aritmetic_operation -> term .)
    COMMA           reduce using rule 38 (aritmetic_operation -> term .)
    RBRACKET        reduce using rule 38 (aritmetic_operation -> term .)
    NOT_EQUAL       reduce using rule 38 (aritmetic_operation -> term .)
    EQUAL           reduce using rule 38 (aritmetic_operation -> term .)
    LESS_EQUAL      reduce using rule 38 (aritmetic_operation -> term .)
    GREATER_EQUAL   reduce using rule 38 (aritmetic_operation -> term .)
    LESS_THAN       reduce using rule 38 (aritmetic_operation -> term .)
    GREATER_THAN    reduce using rule 38 (aritmetic_operation -> term .)
    AS              reduce using rule 38 (aritmetic_operation -> term .)
    IN              reduce using rule 38 (aritmetic_operation -> term .)
    ELSE            reduce using rule 38 (aritmetic_operation -> term .)
    ELIF            reduce using rule 38 (aritmetic_operation -> term .)
    AND             reduce using rule 38 (aritmetic_operation -> term .)
    MINUS           shift and go to state 91
    PLUS            shift and go to state 92


state 39

    (86) for_loop -> FOR . LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> FOR . LPAREN identifier IN expression RPAREN scope
    LPAREN          shift and go to state 93


state 40

    (49) base_exponent -> identifier .
    MODULE          reduce using rule 49 (base_exponent -> identifier .)
    DIVIDE          reduce using rule 49 (base_exponent -> identifier .)
    MULTIPLY        reduce using rule 49 (base_exponent -> identifier .)
    ASTERPOWER      reduce using rule 49 (base_exponent -> identifier .)
    POWER           reduce using rule 49 (base_exponent -> identifier .)
    MINUS           reduce using rule 49 (base_exponent -> identifier .)
    PLUS            reduce using rule 49 (base_exponent -> identifier .)
    SEMICOLON       reduce using rule 49 (base_exponent -> identifier .)
    $end            reduce using rule 49 (base_exponent -> identifier .)
    RPAREN          reduce using rule 49 (base_exponent -> identifier .)
    OR              reduce using rule 49 (base_exponent -> identifier .)
    SINCETHAT       reduce using rule 49 (base_exponent -> identifier .)
    COMMA           reduce using rule 49 (base_exponent -> identifier .)
    RBRACKET        reduce using rule 49 (base_exponent -> identifier .)
    NOT_EQUAL       reduce using rule 49 (base_exponent -> identifier .)
    EQUAL           reduce using rule 49 (base_exponent -> identifier .)
    LESS_EQUAL      reduce using rule 49 (base_exponent -> identifier .)
    GREATER_EQUAL   reduce using rule 49 (base_exponent -> identifier .)
    LESS_THAN       reduce using rule 49 (base_exponent -> identifier .)
    GREATER_THAN    reduce using rule 49 (base_exponent -> identifier .)
    AS              reduce using rule 49 (base_exponent -> identifier .)
    IN              reduce using rule 49 (base_exponent -> identifier .)
    ELSE            reduce using rule 49 (base_exponent -> identifier .)
    ELIF            reduce using rule 49 (base_exponent -> identifier .)
    AND             reduce using rule 49 (base_exponent -> identifier .)


state 41

    (72) conditional -> IF . full_conditional
    (73) conditional -> IF . inline_conditional
    (75) full_conditional -> . LPAREN conditional_expression RPAREN scope else_elif_statement
    (74) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 96

    full_conditional               shift and go to state 94
    inline_conditional             shift and go to state 95

state 42

    (82) while_loop -> WHILE . LPAREN expression RPAREN expression
    (83) while_loop -> WHILE . LPAREN expression RPAREN scope
    (84) while_loop -> WHILE . LPAREN conditional_expression RPAREN expression
    (85) while_loop -> WHILE . LPAREN conditional_expression RPAREN scope
    LPAREN          shift and go to state 97


state 43

    (141) var_use -> var_attr .
    ASSIGN          reduce using rule 141 (var_use -> var_attr .)
    DEST_ASSIGN     reduce using rule 141 (var_use -> var_attr .)
    ESPACEDCONCAT   reduce using rule 141 (var_use -> var_attr .)
    CONCAT          reduce using rule 141 (var_use -> var_attr .)
    LBRACKET        reduce using rule 141 (var_use -> var_attr .)
    MODULE          reduce using rule 141 (var_use -> var_attr .)
    DIVIDE          reduce using rule 141 (var_use -> var_attr .)
    MULTIPLY        reduce using rule 141 (var_use -> var_attr .)
    ASTERPOWER      reduce using rule 141 (var_use -> var_attr .)
    POWER           reduce using rule 141 (var_use -> var_attr .)
    MINUS           reduce using rule 141 (var_use -> var_attr .)
    PLUS            reduce using rule 141 (var_use -> var_attr .)
    SEMICOLON       reduce using rule 141 (var_use -> var_attr .)
    $end            reduce using rule 141 (var_use -> var_attr .)
    RPAREN          reduce using rule 141 (var_use -> var_attr .)
    OR              reduce using rule 141 (var_use -> var_attr .)
    SINCETHAT       reduce using rule 141 (var_use -> var_attr .)
    COMMA           reduce using rule 141 (var_use -> var_attr .)
    RBRACKET        reduce using rule 141 (var_use -> var_attr .)
    NOT_EQUAL       reduce using rule 141 (var_use -> var_attr .)
    EQUAL           reduce using rule 141 (var_use -> var_attr .)
    LESS_EQUAL      reduce using rule 141 (var_use -> var_attr .)
    GREATER_EQUAL   reduce using rule 141 (var_use -> var_attr .)
    LESS_THAN       reduce using rule 141 (var_use -> var_attr .)
    GREATER_THAN    reduce using rule 141 (var_use -> var_attr .)
    AS              reduce using rule 141 (var_use -> var_attr .)
    IN              reduce using rule 141 (var_use -> var_attr .)
    ELSE            reduce using rule 141 (var_use -> var_attr .)
    ELIF            reduce using rule 141 (var_use -> var_attr .)
    AND             reduce using rule 141 (var_use -> var_attr .)


state 44

    (159) vector -> LBRACKET . vector_decl RBRACKET
    (160) vector_decl -> . expression OR identifier IN expression
    (161) vector_decl -> . expression SINCETHAT identifier IN expression
    (162) vector_decl -> . arguments_list
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (139) argument -> . conditional
    (140) argument -> . expression
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    IF              shift and go to state 41
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    vector_decl                    shift and go to state 98
    expression                     shift and go to state 99
    identifier                     shift and go to state 40
    arguments_list                 shift and go to state 100
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    argument                       shift and go to state 101
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    conditional                    shift and go to state 102
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 45

    (173) build_in_consts -> E_CONST .
    ESPACEDCONCAT   reduce using rule 173 (build_in_consts -> E_CONST .)
    CONCAT          reduce using rule 173 (build_in_consts -> E_CONST .)
    LBRACKET        reduce using rule 173 (build_in_consts -> E_CONST .)
    MODULE          reduce using rule 173 (build_in_consts -> E_CONST .)
    DIVIDE          reduce using rule 173 (build_in_consts -> E_CONST .)
    MULTIPLY        reduce using rule 173 (build_in_consts -> E_CONST .)
    ASTERPOWER      reduce using rule 173 (build_in_consts -> E_CONST .)
    POWER           reduce using rule 173 (build_in_consts -> E_CONST .)
    MINUS           reduce using rule 173 (build_in_consts -> E_CONST .)
    PLUS            reduce using rule 173 (build_in_consts -> E_CONST .)
    SEMICOLON       reduce using rule 173 (build_in_consts -> E_CONST .)
    $end            reduce using rule 173 (build_in_consts -> E_CONST .)
    RPAREN          reduce using rule 173 (build_in_consts -> E_CONST .)
    ASSIGN          reduce using rule 173 (build_in_consts -> E_CONST .)
    OR              reduce using rule 173 (build_in_consts -> E_CONST .)
    SINCETHAT       reduce using rule 173 (build_in_consts -> E_CONST .)
    COMMA           reduce using rule 173 (build_in_consts -> E_CONST .)
    RBRACKET        reduce using rule 173 (build_in_consts -> E_CONST .)
    NOT_EQUAL       reduce using rule 173 (build_in_consts -> E_CONST .)
    EQUAL           reduce using rule 173 (build_in_consts -> E_CONST .)
    LESS_EQUAL      reduce using rule 173 (build_in_consts -> E_CONST .)
    GREATER_EQUAL   reduce using rule 173 (build_in_consts -> E_CONST .)
    LESS_THAN       reduce using rule 173 (build_in_consts -> E_CONST .)
    GREATER_THAN    reduce using rule 173 (build_in_consts -> E_CONST .)
    AS              reduce using rule 173 (build_in_consts -> E_CONST .)
    IN              reduce using rule 173 (build_in_consts -> E_CONST .)
    ELSE            reduce using rule 173 (build_in_consts -> E_CONST .)
    ELIF            reduce using rule 173 (build_in_consts -> E_CONST .)
    AND             reduce using rule 173 (build_in_consts -> E_CONST .)


state 46

    (174) build_in_consts -> PI_CONST .
    ESPACEDCONCAT   reduce using rule 174 (build_in_consts -> PI_CONST .)
    CONCAT          reduce using rule 174 (build_in_consts -> PI_CONST .)
    LBRACKET        reduce using rule 174 (build_in_consts -> PI_CONST .)
    MODULE          reduce using rule 174 (build_in_consts -> PI_CONST .)
    DIVIDE          reduce using rule 174 (build_in_consts -> PI_CONST .)
    MULTIPLY        reduce using rule 174 (build_in_consts -> PI_CONST .)
    ASTERPOWER      reduce using rule 174 (build_in_consts -> PI_CONST .)
    POWER           reduce using rule 174 (build_in_consts -> PI_CONST .)
    MINUS           reduce using rule 174 (build_in_consts -> PI_CONST .)
    PLUS            reduce using rule 174 (build_in_consts -> PI_CONST .)
    SEMICOLON       reduce using rule 174 (build_in_consts -> PI_CONST .)
    $end            reduce using rule 174 (build_in_consts -> PI_CONST .)
    RPAREN          reduce using rule 174 (build_in_consts -> PI_CONST .)
    ASSIGN          reduce using rule 174 (build_in_consts -> PI_CONST .)
    OR              reduce using rule 174 (build_in_consts -> PI_CONST .)
    SINCETHAT       reduce using rule 174 (build_in_consts -> PI_CONST .)
    COMMA           reduce using rule 174 (build_in_consts -> PI_CONST .)
    RBRACKET        reduce using rule 174 (build_in_consts -> PI_CONST .)
    NOT_EQUAL       reduce using rule 174 (build_in_consts -> PI_CONST .)
    EQUAL           reduce using rule 174 (build_in_consts -> PI_CONST .)
    LESS_EQUAL      reduce using rule 174 (build_in_consts -> PI_CONST .)
    GREATER_EQUAL   reduce using rule 174 (build_in_consts -> PI_CONST .)
    LESS_THAN       reduce using rule 174 (build_in_consts -> PI_CONST .)
    GREATER_THAN    reduce using rule 174 (build_in_consts -> PI_CONST .)
    AS              reduce using rule 174 (build_in_consts -> PI_CONST .)
    IN              reduce using rule 174 (build_in_consts -> PI_CONST .)
    ELSE            reduce using rule 174 (build_in_consts -> PI_CONST .)
    ELIF            reduce using rule 174 (build_in_consts -> PI_CONST .)
    AND             reduce using rule 174 (build_in_consts -> PI_CONST .)


state 47

    (165) build_in_functions -> RAND . LPAREN RPAREN
    LPAREN          shift and go to state 103


state 48

    (166) build_in_functions -> LOG . LPAREN argument COMMA argument RPAREN
    LPAREN          shift and go to state 104


state 49

    (167) build_in_functions -> EXP . LPAREN argument RPAREN
    LPAREN          shift and go to state 105


state 50

    (168) build_in_functions -> COS . LPAREN argument RPAREN
    LPAREN          shift and go to state 106


state 51

    (169) build_in_functions -> SIN . LPAREN argument RPAREN
    LPAREN          shift and go to state 107


state 52

    (170) build_in_functions -> SQRT . LPAREN argument RPAREN
    LPAREN          shift and go to state 108


state 53

    (171) build_in_functions -> build_in_print .
    ESPACEDCONCAT   reduce using rule 171 (build_in_functions -> build_in_print .)
    CONCAT          reduce using rule 171 (build_in_functions -> build_in_print .)
    LBRACKET        reduce using rule 171 (build_in_functions -> build_in_print .)
    MODULE          reduce using rule 171 (build_in_functions -> build_in_print .)
    DIVIDE          reduce using rule 171 (build_in_functions -> build_in_print .)
    MULTIPLY        reduce using rule 171 (build_in_functions -> build_in_print .)
    ASTERPOWER      reduce using rule 171 (build_in_functions -> build_in_print .)
    POWER           reduce using rule 171 (build_in_functions -> build_in_print .)
    MINUS           reduce using rule 171 (build_in_functions -> build_in_print .)
    PLUS            reduce using rule 171 (build_in_functions -> build_in_print .)
    SEMICOLON       reduce using rule 171 (build_in_functions -> build_in_print .)
    $end            reduce using rule 171 (build_in_functions -> build_in_print .)
    RPAREN          reduce using rule 171 (build_in_functions -> build_in_print .)
    ASSIGN          reduce using rule 171 (build_in_functions -> build_in_print .)
    OR              reduce using rule 171 (build_in_functions -> build_in_print .)
    SINCETHAT       reduce using rule 171 (build_in_functions -> build_in_print .)
    COMMA           reduce using rule 171 (build_in_functions -> build_in_print .)
    RBRACKET        reduce using rule 171 (build_in_functions -> build_in_print .)
    NOT_EQUAL       reduce using rule 171 (build_in_functions -> build_in_print .)
    EQUAL           reduce using rule 171 (build_in_functions -> build_in_print .)
    LESS_EQUAL      reduce using rule 171 (build_in_functions -> build_in_print .)
    GREATER_EQUAL   reduce using rule 171 (build_in_functions -> build_in_print .)
    LESS_THAN       reduce using rule 171 (build_in_functions -> build_in_print .)
    GREATER_THAN    reduce using rule 171 (build_in_functions -> build_in_print .)
    AS              reduce using rule 171 (build_in_functions -> build_in_print .)
    IN              reduce using rule 171 (build_in_functions -> build_in_print .)
    ELSE            reduce using rule 171 (build_in_functions -> build_in_print .)
    ELIF            reduce using rule 171 (build_in_functions -> build_in_print .)
    AND             reduce using rule 171 (build_in_functions -> build_in_print .)


state 54

    (172) build_in_functions -> build_in_range .
    ESPACEDCONCAT   reduce using rule 172 (build_in_functions -> build_in_range .)
    CONCAT          reduce using rule 172 (build_in_functions -> build_in_range .)
    LBRACKET        reduce using rule 172 (build_in_functions -> build_in_range .)
    MODULE          reduce using rule 172 (build_in_functions -> build_in_range .)
    DIVIDE          reduce using rule 172 (build_in_functions -> build_in_range .)
    MULTIPLY        reduce using rule 172 (build_in_functions -> build_in_range .)
    ASTERPOWER      reduce using rule 172 (build_in_functions -> build_in_range .)
    POWER           reduce using rule 172 (build_in_functions -> build_in_range .)
    MINUS           reduce using rule 172 (build_in_functions -> build_in_range .)
    PLUS            reduce using rule 172 (build_in_functions -> build_in_range .)
    SEMICOLON       reduce using rule 172 (build_in_functions -> build_in_range .)
    $end            reduce using rule 172 (build_in_functions -> build_in_range .)
    RPAREN          reduce using rule 172 (build_in_functions -> build_in_range .)
    ASSIGN          reduce using rule 172 (build_in_functions -> build_in_range .)
    OR              reduce using rule 172 (build_in_functions -> build_in_range .)
    SINCETHAT       reduce using rule 172 (build_in_functions -> build_in_range .)
    COMMA           reduce using rule 172 (build_in_functions -> build_in_range .)
    RBRACKET        reduce using rule 172 (build_in_functions -> build_in_range .)
    NOT_EQUAL       reduce using rule 172 (build_in_functions -> build_in_range .)
    EQUAL           reduce using rule 172 (build_in_functions -> build_in_range .)
    LESS_EQUAL      reduce using rule 172 (build_in_functions -> build_in_range .)
    GREATER_EQUAL   reduce using rule 172 (build_in_functions -> build_in_range .)
    LESS_THAN       reduce using rule 172 (build_in_functions -> build_in_range .)
    GREATER_THAN    reduce using rule 172 (build_in_functions -> build_in_range .)
    AS              reduce using rule 172 (build_in_functions -> build_in_range .)
    IN              reduce using rule 172 (build_in_functions -> build_in_range .)
    ELSE            reduce using rule 172 (build_in_functions -> build_in_range .)
    ELIF            reduce using rule 172 (build_in_functions -> build_in_range .)
    AND             reduce using rule 172 (build_in_functions -> build_in_range .)


state 55

    (101) boolean_value -> FALSE .
    ESPACEDCONCAT   reduce using rule 101 (boolean_value -> FALSE .)
    CONCAT          reduce using rule 101 (boolean_value -> FALSE .)
    LBRACKET        reduce using rule 101 (boolean_value -> FALSE .)
    MODULE          reduce using rule 101 (boolean_value -> FALSE .)
    DIVIDE          reduce using rule 101 (boolean_value -> FALSE .)
    MULTIPLY        reduce using rule 101 (boolean_value -> FALSE .)
    ASTERPOWER      reduce using rule 101 (boolean_value -> FALSE .)
    POWER           reduce using rule 101 (boolean_value -> FALSE .)
    MINUS           reduce using rule 101 (boolean_value -> FALSE .)
    PLUS            reduce using rule 101 (boolean_value -> FALSE .)
    SEMICOLON       reduce using rule 101 (boolean_value -> FALSE .)
    $end            reduce using rule 101 (boolean_value -> FALSE .)
    RPAREN          reduce using rule 101 (boolean_value -> FALSE .)
    ASSIGN          reduce using rule 101 (boolean_value -> FALSE .)
    OR              reduce using rule 101 (boolean_value -> FALSE .)
    SINCETHAT       reduce using rule 101 (boolean_value -> FALSE .)
    COMMA           reduce using rule 101 (boolean_value -> FALSE .)
    RBRACKET        reduce using rule 101 (boolean_value -> FALSE .)
    NOT_EQUAL       reduce using rule 101 (boolean_value -> FALSE .)
    EQUAL           reduce using rule 101 (boolean_value -> FALSE .)
    LESS_EQUAL      reduce using rule 101 (boolean_value -> FALSE .)
    GREATER_EQUAL   reduce using rule 101 (boolean_value -> FALSE .)
    LESS_THAN       reduce using rule 101 (boolean_value -> FALSE .)
    GREATER_THAN    reduce using rule 101 (boolean_value -> FALSE .)
    AS              reduce using rule 101 (boolean_value -> FALSE .)
    IN              reduce using rule 101 (boolean_value -> FALSE .)
    ELSE            reduce using rule 101 (boolean_value -> FALSE .)
    ELIF            reduce using rule 101 (boolean_value -> FALSE .)
    AND             reduce using rule 101 (boolean_value -> FALSE .)


state 56

    (102) boolean_value -> TRUE .
    ESPACEDCONCAT   reduce using rule 102 (boolean_value -> TRUE .)
    CONCAT          reduce using rule 102 (boolean_value -> TRUE .)
    LBRACKET        reduce using rule 102 (boolean_value -> TRUE .)
    MODULE          reduce using rule 102 (boolean_value -> TRUE .)
    DIVIDE          reduce using rule 102 (boolean_value -> TRUE .)
    MULTIPLY        reduce using rule 102 (boolean_value -> TRUE .)
    ASTERPOWER      reduce using rule 102 (boolean_value -> TRUE .)
    POWER           reduce using rule 102 (boolean_value -> TRUE .)
    MINUS           reduce using rule 102 (boolean_value -> TRUE .)
    PLUS            reduce using rule 102 (boolean_value -> TRUE .)
    SEMICOLON       reduce using rule 102 (boolean_value -> TRUE .)
    $end            reduce using rule 102 (boolean_value -> TRUE .)
    RPAREN          reduce using rule 102 (boolean_value -> TRUE .)
    ASSIGN          reduce using rule 102 (boolean_value -> TRUE .)
    OR              reduce using rule 102 (boolean_value -> TRUE .)
    SINCETHAT       reduce using rule 102 (boolean_value -> TRUE .)
    COMMA           reduce using rule 102 (boolean_value -> TRUE .)
    RBRACKET        reduce using rule 102 (boolean_value -> TRUE .)
    NOT_EQUAL       reduce using rule 102 (boolean_value -> TRUE .)
    EQUAL           reduce using rule 102 (boolean_value -> TRUE .)
    LESS_EQUAL      reduce using rule 102 (boolean_value -> TRUE .)
    GREATER_EQUAL   reduce using rule 102 (boolean_value -> TRUE .)
    LESS_THAN       reduce using rule 102 (boolean_value -> TRUE .)
    GREATER_THAN    reduce using rule 102 (boolean_value -> TRUE .)
    AS              reduce using rule 102 (boolean_value -> TRUE .)
    IN              reduce using rule 102 (boolean_value -> TRUE .)
    ELSE            reduce using rule 102 (boolean_value -> TRUE .)
    ELIF            reduce using rule 102 (boolean_value -> TRUE .)
    AND             reduce using rule 102 (boolean_value -> TRUE .)


state 57

    (133) type_instanciation -> NEW . IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> NEW . IDENTIFIER LPAREN arguments_list RPAREN
    IDENTIFIER      shift and go to state 109


state 58

    (41) term -> factor .
    (42) term -> factor . MODULE term
    (43) term -> factor . DIVIDE term
    (44) term -> factor . MULTIPLY term
    (46) factor -> factor . ASTERPOWER base_exponent
    (47) factor -> factor . POWER base_exponent
    MINUS           reduce using rule 41 (term -> factor .)
    PLUS            reduce using rule 41 (term -> factor .)
    SEMICOLON       reduce using rule 41 (term -> factor .)
    $end            reduce using rule 41 (term -> factor .)
    RPAREN          reduce using rule 41 (term -> factor .)
    OR              reduce using rule 41 (term -> factor .)
    SINCETHAT       reduce using rule 41 (term -> factor .)
    COMMA           reduce using rule 41 (term -> factor .)
    RBRACKET        reduce using rule 41 (term -> factor .)
    NOT_EQUAL       reduce using rule 41 (term -> factor .)
    EQUAL           reduce using rule 41 (term -> factor .)
    LESS_EQUAL      reduce using rule 41 (term -> factor .)
    GREATER_EQUAL   reduce using rule 41 (term -> factor .)
    LESS_THAN       reduce using rule 41 (term -> factor .)
    GREATER_THAN    reduce using rule 41 (term -> factor .)
    AS              reduce using rule 41 (term -> factor .)
    IN              reduce using rule 41 (term -> factor .)
    ELSE            reduce using rule 41 (term -> factor .)
    ELIF            reduce using rule 41 (term -> factor .)
    AND             reduce using rule 41 (term -> factor .)
    MODULE          shift and go to state 110
    DIVIDE          shift and go to state 111
    MULTIPLY        shift and go to state 112
    ASTERPOWER      shift and go to state 113
    POWER           shift and go to state 114


state 59

    (164) build_in_print -> PRINT . LPAREN argument RPAREN
    LPAREN          shift and go to state 115


state 60

    (163) build_in_range -> RANGE . LPAREN argument COMMA argument RPAREN
    LPAREN          shift and go to state 116


state 61

    (45) factor -> base_exponent .
    MODULE          reduce using rule 45 (factor -> base_exponent .)
    DIVIDE          reduce using rule 45 (factor -> base_exponent .)
    MULTIPLY        reduce using rule 45 (factor -> base_exponent .)
    ASTERPOWER      reduce using rule 45 (factor -> base_exponent .)
    POWER           reduce using rule 45 (factor -> base_exponent .)
    MINUS           reduce using rule 45 (factor -> base_exponent .)
    PLUS            reduce using rule 45 (factor -> base_exponent .)
    SEMICOLON       reduce using rule 45 (factor -> base_exponent .)
    $end            reduce using rule 45 (factor -> base_exponent .)
    RPAREN          reduce using rule 45 (factor -> base_exponent .)
    OR              reduce using rule 45 (factor -> base_exponent .)
    SINCETHAT       reduce using rule 45 (factor -> base_exponent .)
    COMMA           reduce using rule 45 (factor -> base_exponent .)
    RBRACKET        reduce using rule 45 (factor -> base_exponent .)
    NOT_EQUAL       reduce using rule 45 (factor -> base_exponent .)
    EQUAL           reduce using rule 45 (factor -> base_exponent .)
    LESS_EQUAL      reduce using rule 45 (factor -> base_exponent .)
    GREATER_EQUAL   reduce using rule 45 (factor -> base_exponent .)
    LESS_THAN       reduce using rule 45 (factor -> base_exponent .)
    GREATER_THAN    reduce using rule 45 (factor -> base_exponent .)
    AS              reduce using rule 45 (factor -> base_exponent .)
    IN              reduce using rule 45 (factor -> base_exponent .)
    ELSE            reduce using rule 45 (factor -> base_exponent .)
    ELIF            reduce using rule 45 (factor -> base_exponent .)
    AND             reduce using rule 45 (factor -> base_exponent .)


state 62

    (25) identifier -> fully_typed_param .
    MODULE          reduce using rule 25 (identifier -> fully_typed_param .)
    DIVIDE          reduce using rule 25 (identifier -> fully_typed_param .)
    MULTIPLY        reduce using rule 25 (identifier -> fully_typed_param .)
    ASTERPOWER      reduce using rule 25 (identifier -> fully_typed_param .)
    POWER           reduce using rule 25 (identifier -> fully_typed_param .)
    MINUS           reduce using rule 25 (identifier -> fully_typed_param .)
    PLUS            reduce using rule 25 (identifier -> fully_typed_param .)
    SEMICOLON       reduce using rule 25 (identifier -> fully_typed_param .)
    $end            reduce using rule 25 (identifier -> fully_typed_param .)
    RPAREN          reduce using rule 25 (identifier -> fully_typed_param .)
    ASSIGN          reduce using rule 25 (identifier -> fully_typed_param .)
    OR              reduce using rule 25 (identifier -> fully_typed_param .)
    SINCETHAT       reduce using rule 25 (identifier -> fully_typed_param .)
    COMMA           reduce using rule 25 (identifier -> fully_typed_param .)
    RBRACKET        reduce using rule 25 (identifier -> fully_typed_param .)
    NOT_EQUAL       reduce using rule 25 (identifier -> fully_typed_param .)
    EQUAL           reduce using rule 25 (identifier -> fully_typed_param .)
    LESS_EQUAL      reduce using rule 25 (identifier -> fully_typed_param .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> fully_typed_param .)
    LESS_THAN       reduce using rule 25 (identifier -> fully_typed_param .)
    GREATER_THAN    reduce using rule 25 (identifier -> fully_typed_param .)
    AS              reduce using rule 25 (identifier -> fully_typed_param .)
    IN              reduce using rule 25 (identifier -> fully_typed_param .)
    ELSE            reduce using rule 25 (identifier -> fully_typed_param .)
    ELIF            reduce using rule 25 (identifier -> fully_typed_param .)
    AND             reduce using rule 25 (identifier -> fully_typed_param .)


state 63

    (3) program_decl_list -> program_level_decl program_decl_list .
    $end            reduce using rule 3 (program_decl_list -> program_level_decl program_decl_list .)


state 64

    (10) inst_wrapper -> inst SEMICOLON .
    $end            reduce using rule 10 (inst_wrapper -> inst SEMICOLON .)


state 65

    (150) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body SEMICOLON
    (153) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body
    (154) protocol_body -> . LBRACE virtual_method_list RBRACE
    EXTENDS         shift and go to state 117
    LBRACE          shift and go to state 119

    protocol_body                  shift and go to state 118

state 66

    (146) var_method -> IDENTIFIER DOT . function_call
    (144) var_attr -> IDENTIFIER DOT . var_attr
    (145) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 120

    function_call                  shift and go to state 121
    var_attr                       shift and go to state 122

state 67

    (131) function_call -> IDENTIFIER LPAREN . RPAREN
    (132) function_call -> IDENTIFIER LPAREN . arguments_list RPAREN
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 123
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    arguments_list                 shift and go to state 124
    argument                       shift and go to state 101
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 68

    (27) fully_typed_param -> IDENTIFIER type_anotation .
    MODULE          reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    DIVIDE          reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    MULTIPLY        reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    ASTERPOWER      reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    POWER           reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    MINUS           reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    PLUS            reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    SEMICOLON       reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    $end            reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    RPAREN          reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    ASSIGN          reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    OR              reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    SINCETHAT       reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    COMMA           reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    RBRACKET        reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    NOT_EQUAL       reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    EQUAL           reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    LESS_EQUAL      reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    GREATER_EQUAL   reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    LESS_THAN       reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    GREATER_THAN    reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    AS              reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    IN              reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    ELSE            reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    ELIF            reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)
    AND             reduce using rule 27 (fully_typed_param -> IDENTIFIER type_anotation .)


state 69

    (28) type_anotation -> COLON . BOOLEAN_TYPE
    (29) type_anotation -> COLON . NUMBER_TYPE
    (30) type_anotation -> COLON . IDENTIFIER
    BOOLEAN_TYPE    shift and go to state 126
    NUMBER_TYPE     shift and go to state 127
    IDENTIFIER      shift and go to state 128


state 70

    (62) function_declaration -> func_decl_id LPAREN . RPAREN function_inline_declaration
    (64) function_declaration -> func_decl_id LPAREN . RPAREN function_full_declaration SEMICOLON
    (66) function_declaration -> func_decl_id LPAREN . RPAREN function_full_declaration
    (111) parameters -> LPAREN . arguments_list RPAREN
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 129
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    arguments_list                 shift and go to state 130
    argument                       shift and go to state 101
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 71

    (63) function_declaration -> func_decl_id parameters . function_inline_declaration
    (65) function_declaration -> func_decl_id parameters . function_full_declaration SEMICOLON
    (67) function_declaration -> func_decl_id parameters . function_full_declaration
    (70) function_inline_declaration -> . type_anotation RETURN inst SEMICOLON
    (71) function_inline_declaration -> . RETURN inst SEMICOLON
    (69) function_full_declaration -> . scope
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 134
    COLON           shift and go to state 69
    LBRACE          shift and go to state 26

    function_inline_declaration    shift and go to state 131
    function_full_declaration      shift and go to state 132
    type_anotation                 shift and go to state 133
    scope                          shift and go to state 135

state 72

    (48) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    aritmetic_operation            shift and go to state 74
    term                           shift and go to state 38
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 73

    (12) inst -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 136


state 74

    (48) base_exponent -> LPAREN aritmetic_operation . RPAREN
    RPAREN          shift and go to state 137


state 75

    (26) identifier -> atom .
    (142) var_use -> atom . LBRACKET expression RBRACKET
    MODULE          reduce using rule 26 (identifier -> atom .)
    DIVIDE          reduce using rule 26 (identifier -> atom .)
    MULTIPLY        reduce using rule 26 (identifier -> atom .)
    ASTERPOWER      reduce using rule 26 (identifier -> atom .)
    POWER           reduce using rule 26 (identifier -> atom .)
    MINUS           reduce using rule 26 (identifier -> atom .)
    PLUS            reduce using rule 26 (identifier -> atom .)
    RPAREN          reduce using rule 26 (identifier -> atom .)
    ASSIGN          reduce using rule 26 (identifier -> atom .)
    SEMICOLON       reduce using rule 26 (identifier -> atom .)
    $end            reduce using rule 26 (identifier -> atom .)
    OR              reduce using rule 26 (identifier -> atom .)
    SINCETHAT       reduce using rule 26 (identifier -> atom .)
    COMMA           reduce using rule 26 (identifier -> atom .)
    RBRACKET        reduce using rule 26 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 26 (identifier -> atom .)
    EQUAL           reduce using rule 26 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 26 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 26 (identifier -> atom .)
    LESS_THAN       reduce using rule 26 (identifier -> atom .)
    GREATER_THAN    reduce using rule 26 (identifier -> atom .)
    AS              reduce using rule 26 (identifier -> atom .)
    IN              reduce using rule 26 (identifier -> atom .)
    ELSE            reduce using rule 26 (identifier -> atom .)
    ELIF            reduce using rule 26 (identifier -> atom .)
    AND             reduce using rule 26 (identifier -> atom .)
    LBRACKET        shift and go to state 82


state 76

    (27) fully_typed_param -> IDENTIFIER . type_anotation
    (146) var_method -> IDENTIFIER . DOT function_call
    (143) var_use -> IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    DOT             shift and go to state 66
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    $end            reduce using rule 143 (var_use -> IDENTIFIER .)
    OR              reduce using rule 143 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 143 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 143 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    AS              reduce using rule 143 (var_use -> IDENTIFIER .)
    IN              reduce using rule 143 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 143 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 143 (var_use -> IDENTIFIER .)
    AND             reduce using rule 143 (var_use -> IDENTIFIER .)
    LPAREN          shift and go to state 67
    COLON           shift and go to state 69

    type_anotation                 shift and go to state 68

state 77

    (56) atom -> var_use .
    LBRACKET        reduce using rule 56 (atom -> var_use .)
    MODULE          reduce using rule 56 (atom -> var_use .)
    DIVIDE          reduce using rule 56 (atom -> var_use .)
    MULTIPLY        reduce using rule 56 (atom -> var_use .)
    ASTERPOWER      reduce using rule 56 (atom -> var_use .)
    POWER           reduce using rule 56 (atom -> var_use .)
    MINUS           reduce using rule 56 (atom -> var_use .)
    PLUS            reduce using rule 56 (atom -> var_use .)
    RPAREN          reduce using rule 56 (atom -> var_use .)
    ASSIGN          reduce using rule 56 (atom -> var_use .)
    SEMICOLON       reduce using rule 56 (atom -> var_use .)
    $end            reduce using rule 56 (atom -> var_use .)
    OR              reduce using rule 56 (atom -> var_use .)
    SINCETHAT       reduce using rule 56 (atom -> var_use .)
    COMMA           reduce using rule 56 (atom -> var_use .)
    RBRACKET        reduce using rule 56 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 56 (atom -> var_use .)
    EQUAL           reduce using rule 56 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 56 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 56 (atom -> var_use .)
    LESS_THAN       reduce using rule 56 (atom -> var_use .)
    GREATER_THAN    reduce using rule 56 (atom -> var_use .)
    AS              reduce using rule 56 (atom -> var_use .)
    IN              reduce using rule 56 (atom -> var_use .)
    ELSE            reduce using rule 56 (atom -> var_use .)
    ELIF            reduce using rule 56 (atom -> var_use .)
    AND             reduce using rule 56 (atom -> var_use .)


state 78

    (103) type_declaration -> TYPE IDENTIFIER . inherits_type decl_body SEMICOLON
    (104) type_declaration -> TYPE IDENTIFIER . decl_body SEMICOLON
    (105) type_declaration -> TYPE IDENTIFIER . inherits_type decl_body
    (106) type_declaration -> TYPE IDENTIFIER . decl_body
    (107) type_declaration -> TYPE IDENTIFIER . parameters inherits_type decl_body SEMICOLON
    (108) type_declaration -> TYPE IDENTIFIER . parameters decl_body SEMICOLON
    (109) type_declaration -> TYPE IDENTIFIER . parameters inherits_type decl_body
    (110) type_declaration -> TYPE IDENTIFIER . parameters decl_body
    (112) inherits_type -> . INHERITS IDENTIFIER parameters
    (113) inherits_type -> . INHERITS IDENTIFIER
    (114) decl_body -> . LBRACE decl_list RBRACE
    (115) decl_body -> . LBRACE RBRACE
    (111) parameters -> . LPAREN arguments_list RPAREN
    INHERITS        shift and go to state 141
    LBRACE          shift and go to state 142
    LPAREN          shift and go to state 143

    inherits_type                  shift and go to state 138
    decl_body                      shift and go to state 139
    parameters                     shift and go to state 140

state 79

    (68) func_decl_id -> FUNCTION IDENTIFIER .
    LPAREN          reduce using rule 68 (func_decl_id -> FUNCTION IDENTIFIER .)


state 80

    (35) expression -> atom ESPACEDCONCAT . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    atom                           shift and go to state 21
    expression                     shift and go to state 144
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 81

    (36) expression -> atom CONCAT . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    atom                           shift and go to state 21
    expression                     shift and go to state 145
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 82

    (142) var_use -> atom LBRACKET . expression RBRACKET
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    atom                           shift and go to state 21
    expression                     shift and go to state 146
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 83

    (31) scope -> LBRACE RBRACE .
    SEMICOLON       reduce using rule 31 (scope -> LBRACE RBRACE .)
    $end            reduce using rule 31 (scope -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 31 (scope -> LBRACE RBRACE .)
    TYPE            reduce using rule 31 (scope -> LBRACE RBRACE .)
    LPAREN          reduce using rule 31 (scope -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 31 (scope -> LBRACE RBRACE .)
    LBRACE          reduce using rule 31 (scope -> LBRACE RBRACE .)
    LET             reduce using rule 31 (scope -> LBRACE RBRACE .)
    STRING          reduce using rule 31 (scope -> LBRACE RBRACE .)
    NUMBER          reduce using rule 31 (scope -> LBRACE RBRACE .)
    FOR             reduce using rule 31 (scope -> LBRACE RBRACE .)
    IF              reduce using rule 31 (scope -> LBRACE RBRACE .)
    WHILE           reduce using rule 31 (scope -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 31 (scope -> LBRACE RBRACE .)
    E_CONST         reduce using rule 31 (scope -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 31 (scope -> LBRACE RBRACE .)
    RAND            reduce using rule 31 (scope -> LBRACE RBRACE .)
    LOG             reduce using rule 31 (scope -> LBRACE RBRACE .)
    EXP             reduce using rule 31 (scope -> LBRACE RBRACE .)
    COS             reduce using rule 31 (scope -> LBRACE RBRACE .)
    SIN             reduce using rule 31 (scope -> LBRACE RBRACE .)
    SQRT            reduce using rule 31 (scope -> LBRACE RBRACE .)
    FALSE           reduce using rule 31 (scope -> LBRACE RBRACE .)
    TRUE            reduce using rule 31 (scope -> LBRACE RBRACE .)
    NEW             reduce using rule 31 (scope -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 31 (scope -> LBRACE RBRACE .)
    PRINT           reduce using rule 31 (scope -> LBRACE RBRACE .)
    RANGE           reduce using rule 31 (scope -> LBRACE RBRACE .)
    OR              reduce using rule 31 (scope -> LBRACE RBRACE .)
    SINCETHAT       reduce using rule 31 (scope -> LBRACE RBRACE .)
    COMMA           reduce using rule 31 (scope -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 31 (scope -> LBRACE RBRACE .)
    RPAREN          reduce using rule 31 (scope -> LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 31 (scope -> LBRACE RBRACE .)
    EQUAL           reduce using rule 31 (scope -> LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 31 (scope -> LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 31 (scope -> LBRACE RBRACE .)
    LESS_THAN       reduce using rule 31 (scope -> LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 31 (scope -> LBRACE RBRACE .)
    AS              reduce using rule 31 (scope -> LBRACE RBRACE .)
    IN              reduce using rule 31 (scope -> LBRACE RBRACE .)
    ELSE            reduce using rule 31 (scope -> LBRACE RBRACE .)
    ELIF            reduce using rule 31 (scope -> LBRACE RBRACE .)
    AND             reduce using rule 31 (scope -> LBRACE RBRACE .)


state 84

    (32) scope -> LBRACE inst_list . RBRACE
    RBRACE          shift and go to state 147


state 85

    (8) inst_list -> inst . SEMICOLON inst_list
    (9) inst_list -> inst . SEMICOLON
    SEMICOLON       shift and go to state 148


state 86

    (16) var_dec -> LET var_init_list . IN var_decl_expr
    IN              shift and go to state 149


state 87

    (21) var_init_list -> var_init . COMMA var_init_list
    (22) var_init_list -> var_init .
    COMMA           shift and go to state 150
    IN              reduce using rule 22 (var_init_list -> var_init .)


state 88

    (23) var_init -> identifier . ASSIGN inst type_downcast
    (24) var_init -> identifier . ASSIGN inst
    ASSIGN          shift and go to state 151


state 89

    (60) var_asign -> var_use ASSIGN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    var_use                        shift and go to state 28
    expression                     shift and go to state 152
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 90

    (61) var_asign -> var_use DEST_ASSIGN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    var_use                        shift and go to state 28
    expression                     shift and go to state 153
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 91

    (39) aritmetic_operation -> term MINUS . aritmetic_operation
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    term                           shift and go to state 38
    aritmetic_operation            shift and go to state 154
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 92

    (40) aritmetic_operation -> term PLUS . aritmetic_operation
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    term                           shift and go to state 38
    aritmetic_operation            shift and go to state 155
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 93

    (86) for_loop -> FOR LPAREN . identifier IN expression RPAREN expression
    (87) for_loop -> FOR LPAREN . identifier IN expression RPAREN scope
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    identifier                     shift and go to state 156
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 94

    (72) conditional -> IF full_conditional .
    SEMICOLON       reduce using rule 72 (conditional -> IF full_conditional .)
    $end            reduce using rule 72 (conditional -> IF full_conditional .)
    COMMA           reduce using rule 72 (conditional -> IF full_conditional .)
    RBRACKET        reduce using rule 72 (conditional -> IF full_conditional .)
    RPAREN          reduce using rule 72 (conditional -> IF full_conditional .)
    OR              reduce using rule 72 (conditional -> IF full_conditional .)
    SINCETHAT       reduce using rule 72 (conditional -> IF full_conditional .)
    NOT_EQUAL       reduce using rule 72 (conditional -> IF full_conditional .)
    EQUAL           reduce using rule 72 (conditional -> IF full_conditional .)
    LESS_EQUAL      reduce using rule 72 (conditional -> IF full_conditional .)
    GREATER_EQUAL   reduce using rule 72 (conditional -> IF full_conditional .)
    LESS_THAN       reduce using rule 72 (conditional -> IF full_conditional .)
    GREATER_THAN    reduce using rule 72 (conditional -> IF full_conditional .)
    AS              reduce using rule 72 (conditional -> IF full_conditional .)
    IN              reduce using rule 72 (conditional -> IF full_conditional .)
    ELSE            reduce using rule 72 (conditional -> IF full_conditional .)
    ELIF            reduce using rule 72 (conditional -> IF full_conditional .)
    AND             reduce using rule 72 (conditional -> IF full_conditional .)


state 95

    (73) conditional -> IF inline_conditional .
    SEMICOLON       reduce using rule 73 (conditional -> IF inline_conditional .)
    $end            reduce using rule 73 (conditional -> IF inline_conditional .)
    COMMA           reduce using rule 73 (conditional -> IF inline_conditional .)
    RBRACKET        reduce using rule 73 (conditional -> IF inline_conditional .)
    RPAREN          reduce using rule 73 (conditional -> IF inline_conditional .)
    OR              reduce using rule 73 (conditional -> IF inline_conditional .)
    SINCETHAT       reduce using rule 73 (conditional -> IF inline_conditional .)
    NOT_EQUAL       reduce using rule 73 (conditional -> IF inline_conditional .)
    EQUAL           reduce using rule 73 (conditional -> IF inline_conditional .)
    LESS_EQUAL      reduce using rule 73 (conditional -> IF inline_conditional .)
    GREATER_EQUAL   reduce using rule 73 (conditional -> IF inline_conditional .)
    LESS_THAN       reduce using rule 73 (conditional -> IF inline_conditional .)
    GREATER_THAN    reduce using rule 73 (conditional -> IF inline_conditional .)
    AS              reduce using rule 73 (conditional -> IF inline_conditional .)
    IN              reduce using rule 73 (conditional -> IF inline_conditional .)
    ELSE            reduce using rule 73 (conditional -> IF inline_conditional .)
    ELIF            reduce using rule 73 (conditional -> IF inline_conditional .)
    AND             reduce using rule 73 (conditional -> IF inline_conditional .)


state 96

    (75) full_conditional -> LPAREN . conditional_expression RPAREN scope else_elif_statement
    (74) inline_conditional -> LPAREN . conditional_expression RPAREN expression else_elif_statement
    (88) conditional_expression -> . condition
    (89) conditional_expression -> . NOT condition
    (90) conditional_expression -> . condition OR conditional_expression
    (91) conditional_expression -> . condition AND conditional_expression
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    conditional_expression         shift and go to state 158
    expression                     shift and go to state 159
    condition                      shift and go to state 160
    comparation                    shift and go to state 163
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 97

    (82) while_loop -> WHILE LPAREN . expression RPAREN expression
    (83) while_loop -> WHILE LPAREN . expression RPAREN scope
    (84) while_loop -> WHILE LPAREN . conditional_expression RPAREN expression
    (85) while_loop -> WHILE LPAREN . conditional_expression RPAREN scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (88) conditional_expression -> . condition
    (89) conditional_expression -> . NOT condition
    (90) conditional_expression -> . condition OR conditional_expression
    (91) conditional_expression -> . condition AND conditional_expression
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    expression                     shift and go to state 164
    conditional_expression         shift and go to state 165
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    condition                      shift and go to state 160
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    comparation                    shift and go to state 163
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 98

    (159) vector -> LBRACKET vector_decl . RBRACKET
    RBRACKET        shift and go to state 166


state 99

    (160) vector_decl -> expression . OR identifier IN expression
    (161) vector_decl -> expression . SINCETHAT identifier IN expression
    (140) argument -> expression .
    OR              shift and go to state 167
    SINCETHAT       shift and go to state 168
    COMMA           reduce using rule 140 (argument -> expression .)
    RBRACKET        reduce using rule 140 (argument -> expression .)


state 100

    (162) vector_decl -> arguments_list .
    RBRACKET        reduce using rule 162 (vector_decl -> arguments_list .)


state 101

    (137) arguments_list -> argument . COMMA arguments_list
    (138) arguments_list -> argument .
    COMMA           shift and go to state 169
    RBRACKET        reduce using rule 138 (arguments_list -> argument .)
    RPAREN          reduce using rule 138 (arguments_list -> argument .)


state 102

    (139) argument -> conditional .
    COMMA           reduce using rule 139 (argument -> conditional .)
    RBRACKET        reduce using rule 139 (argument -> conditional .)
    RPAREN          reduce using rule 139 (argument -> conditional .)


state 103

    (165) build_in_functions -> RAND LPAREN . RPAREN
    RPAREN          shift and go to state 170


state 104

    (166) build_in_functions -> LOG LPAREN . argument COMMA argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 171
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 105

    (167) build_in_functions -> EXP LPAREN . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 172
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 106

    (168) build_in_functions -> COS LPAREN . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 173
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 107

    (169) build_in_functions -> SIN LPAREN . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 174
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 108

    (170) build_in_functions -> SQRT LPAREN . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 175
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 109

    (133) type_instanciation -> NEW IDENTIFIER . LPAREN RPAREN
    (134) type_instanciation -> NEW IDENTIFIER . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 176


state 110

    (42) term -> factor MODULE . term
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    factor                         shift and go to state 58
    term                           shift and go to state 177
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 111

    (43) term -> factor DIVIDE . term
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    factor                         shift and go to state 58
    term                           shift and go to state 178
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 112

    (44) term -> factor MULTIPLY . term
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    factor                         shift and go to state 58
    term                           shift and go to state 179
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 113

    (46) factor -> factor ASTERPOWER . base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    base_exponent                  shift and go to state 180
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 114

    (47) factor -> factor POWER . base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    base_exponent                  shift and go to state 181
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 115

    (164) build_in_print -> PRINT LPAREN . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 182
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 116

    (163) build_in_range -> RANGE LPAREN . argument COMMA argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 183
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 117

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 184


state 118

    (152) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body . SEMICOLON
    (153) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 185
    PROTOCOL        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TYPE            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LET             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    STRING          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FOR             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IF              reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    WHILE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RAND            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LOG             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    EXP             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    COS             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SIN             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SQRT            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FALSE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TRUE            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NEW             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PRINT           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RANGE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    $end            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)


state 119

    (154) protocol_body -> LBRACE . virtual_method_list RBRACE
    (155) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (156) virtual_method_list -> . virtual_method SEMICOLON
    (157) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    (158) virtual_method -> . IDENTIFIER parameters type_anotation
    IDENTIFIER      shift and go to state 188

    virtual_method_list            shift and go to state 186
    virtual_method                 shift and go to state 187

state 120

    (145) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LPAREN          shift and go to state 67
    DOT             shift and go to state 189


state 121

    (146) var_method -> IDENTIFIER DOT function_call .
    ESPACEDCONCAT   reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    CONCAT          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    LBRACKET        reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    MODULE          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    DIVIDE          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    MULTIPLY        reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ASTERPOWER      reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    POWER           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    MINUS           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    PLUS            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    SEMICOLON       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    $end            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    RPAREN          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ASSIGN          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    OR              reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    SINCETHAT       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    COMMA           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    RBRACKET        reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    NOT_EQUAL       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    EQUAL           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    LESS_EQUAL      reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_EQUAL   reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    LESS_THAN       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_THAN    reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    AS              reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    IN              reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ELSE            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ELIF            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    AND             reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)


state 122

    (144) var_attr -> IDENTIFIER DOT var_attr .
    ASSIGN          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    DEST_ASSIGN     reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ESPACEDCONCAT   reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    CONCAT          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    LBRACKET        reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    MODULE          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    DIVIDE          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    MULTIPLY        reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ASTERPOWER      reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    POWER           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    MINUS           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    PLUS            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    SEMICOLON       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    $end            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    RPAREN          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    OR              reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    SINCETHAT       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    COMMA           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    RBRACKET        reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    NOT_EQUAL       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    EQUAL           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_EQUAL      reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_EQUAL   reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_THAN       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_THAN    reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    AS              reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    IN              reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ELSE            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ELIF            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    AND             reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)


state 123

    (131) function_call -> IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 124

    (132) function_call -> IDENTIFIER LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 190


state 125

    (140) argument -> expression .
    COMMA           reduce using rule 140 (argument -> expression .)
    RPAREN          reduce using rule 140 (argument -> expression .)
    RBRACKET        reduce using rule 140 (argument -> expression .)


state 126

    (28) type_anotation -> COLON BOOLEAN_TYPE .
    MODULE          reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    DIVIDE          reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    MULTIPLY        reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    ASTERPOWER      reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    POWER           reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    MINUS           reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    PLUS            reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    SEMICOLON       reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    $end            reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    OR              reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    SINCETHAT       reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    COMMA           reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    RBRACKET        reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    RPAREN          reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    NOT_EQUAL       reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    EQUAL           reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    LESS_EQUAL      reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    GREATER_EQUAL   reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    LESS_THAN       reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    GREATER_THAN    reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    AS              reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    IN              reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    ELSE            reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    ELIF            reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    AND             reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    RETURN          reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    ASSIGN          reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)
    LBRACE          reduce using rule 28 (type_anotation -> COLON BOOLEAN_TYPE .)


state 127

    (29) type_anotation -> COLON NUMBER_TYPE .
    MODULE          reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    DIVIDE          reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    MULTIPLY        reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    ASTERPOWER      reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    POWER           reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    MINUS           reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    PLUS            reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    SEMICOLON       reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    $end            reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    OR              reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    SINCETHAT       reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    COMMA           reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    RBRACKET        reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    RPAREN          reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    NOT_EQUAL       reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    EQUAL           reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    LESS_EQUAL      reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    GREATER_EQUAL   reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    LESS_THAN       reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    GREATER_THAN    reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    AS              reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    IN              reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    ELSE            reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    ELIF            reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    AND             reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    RETURN          reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    ASSIGN          reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)
    LBRACE          reduce using rule 29 (type_anotation -> COLON NUMBER_TYPE .)


state 128

    (30) type_anotation -> COLON IDENTIFIER .
    MODULE          reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    DIVIDE          reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    MULTIPLY        reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    ASTERPOWER      reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    POWER           reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    MINUS           reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    PLUS            reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    SEMICOLON       reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    $end            reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    OR              reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    SINCETHAT       reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    COMMA           reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    RBRACKET        reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    RPAREN          reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    NOT_EQUAL       reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    EQUAL           reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    LESS_EQUAL      reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    LESS_THAN       reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    GREATER_THAN    reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    AS              reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    IN              reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    ELSE            reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    ELIF            reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    AND             reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    RETURN          reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    ASSIGN          reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)
    LBRACE          reduce using rule 30 (type_anotation -> COLON IDENTIFIER .)


state 129

    (62) function_declaration -> func_decl_id LPAREN RPAREN . function_inline_declaration
    (64) function_declaration -> func_decl_id LPAREN RPAREN . function_full_declaration SEMICOLON
    (66) function_declaration -> func_decl_id LPAREN RPAREN . function_full_declaration
    (70) function_inline_declaration -> . type_anotation RETURN inst SEMICOLON
    (71) function_inline_declaration -> . RETURN inst SEMICOLON
    (69) function_full_declaration -> . scope
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 134
    COLON           shift and go to state 69
    LBRACE          shift and go to state 26

    function_inline_declaration    shift and go to state 191
    function_full_declaration      shift and go to state 192
    type_anotation                 shift and go to state 133
    scope                          shift and go to state 135

state 130

    (111) parameters -> LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 193


state 131

    (63) function_declaration -> func_decl_id parameters function_inline_declaration .
    PROTOCOL        reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    TYPE            reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LPAREN          reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    FUNCTION        reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LBRACE          reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LET             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    STRING          reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    NUMBER          reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    FOR             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    IF              reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    WHILE           reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    IDENTIFIER      reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    E_CONST         reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    PI_CONST        reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    RAND            reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LOG             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    EXP             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    COS             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    SIN             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    SQRT            reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    FALSE           reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    TRUE            reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    NEW             reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LBRACKET        reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    PRINT           reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    RANGE           reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    $end            reduce using rule 63 (function_declaration -> func_decl_id parameters function_inline_declaration .)


state 132

    (65) function_declaration -> func_decl_id parameters function_full_declaration . SEMICOLON
    (67) function_declaration -> func_decl_id parameters function_full_declaration .
    SEMICOLON       shift and go to state 194
    PROTOCOL        reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    TYPE            reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LPAREN          reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    FUNCTION        reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LBRACE          reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LET             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    STRING          reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    NUMBER          reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    FOR             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    IF              reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    WHILE           reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    IDENTIFIER      reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    E_CONST         reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    PI_CONST        reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    RAND            reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LOG             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    EXP             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    COS             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    SIN             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    SQRT            reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    FALSE           reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    TRUE            reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    NEW             reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LBRACKET        reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    PRINT           reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    RANGE           reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)
    $end            reduce using rule 67 (function_declaration -> func_decl_id parameters function_full_declaration .)


state 133

    (70) function_inline_declaration -> type_anotation . RETURN inst SEMICOLON
    RETURN          shift and go to state 195


state 134

    (71) function_inline_declaration -> RETURN . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    inst                           shift and go to state 196
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 135

    (69) function_full_declaration -> scope .
    SEMICOLON       reduce using rule 69 (function_full_declaration -> scope .)
    PROTOCOL        reduce using rule 69 (function_full_declaration -> scope .)
    TYPE            reduce using rule 69 (function_full_declaration -> scope .)
    LPAREN          reduce using rule 69 (function_full_declaration -> scope .)
    FUNCTION        reduce using rule 69 (function_full_declaration -> scope .)
    LBRACE          reduce using rule 69 (function_full_declaration -> scope .)
    LET             reduce using rule 69 (function_full_declaration -> scope .)
    STRING          reduce using rule 69 (function_full_declaration -> scope .)
    NUMBER          reduce using rule 69 (function_full_declaration -> scope .)
    FOR             reduce using rule 69 (function_full_declaration -> scope .)
    IF              reduce using rule 69 (function_full_declaration -> scope .)
    WHILE           reduce using rule 69 (function_full_declaration -> scope .)
    IDENTIFIER      reduce using rule 69 (function_full_declaration -> scope .)
    E_CONST         reduce using rule 69 (function_full_declaration -> scope .)
    PI_CONST        reduce using rule 69 (function_full_declaration -> scope .)
    RAND            reduce using rule 69 (function_full_declaration -> scope .)
    LOG             reduce using rule 69 (function_full_declaration -> scope .)
    EXP             reduce using rule 69 (function_full_declaration -> scope .)
    COS             reduce using rule 69 (function_full_declaration -> scope .)
    SIN             reduce using rule 69 (function_full_declaration -> scope .)
    SQRT            reduce using rule 69 (function_full_declaration -> scope .)
    FALSE           reduce using rule 69 (function_full_declaration -> scope .)
    TRUE            reduce using rule 69 (function_full_declaration -> scope .)
    NEW             reduce using rule 69 (function_full_declaration -> scope .)
    LBRACKET        reduce using rule 69 (function_full_declaration -> scope .)
    PRINT           reduce using rule 69 (function_full_declaration -> scope .)
    RANGE           reduce using rule 69 (function_full_declaration -> scope .)
    $end            reduce using rule 69 (function_full_declaration -> scope .)


state 136

    (12) inst -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)


state 137

    (48) base_exponent -> LPAREN aritmetic_operation RPAREN .
    MODULE          reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    DIVIDE          reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MULTIPLY        reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ASTERPOWER      reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    POWER           reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MINUS           reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    PLUS            reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SEMICOLON       reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    $end            reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RPAREN          reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    OR              reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SINCETHAT       reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    COMMA           reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RBRACKET        reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    NOT_EQUAL       reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    EQUAL           reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_EQUAL      reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_EQUAL   reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_THAN       reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_THAN    reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AS              reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    IN              reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELSE            reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELIF            reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AND             reduce using rule 48 (base_exponent -> LPAREN aritmetic_operation RPAREN .)


state 138

    (103) type_declaration -> TYPE IDENTIFIER inherits_type . decl_body SEMICOLON
    (105) type_declaration -> TYPE IDENTIFIER inherits_type . decl_body
    (114) decl_body -> . LBRACE decl_list RBRACE
    (115) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 142

    decl_body                      shift and go to state 197

state 139

    (104) type_declaration -> TYPE IDENTIFIER decl_body . SEMICOLON
    (106) type_declaration -> TYPE IDENTIFIER decl_body .
    SEMICOLON       shift and go to state 198
    PROTOCOL        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    TYPE            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LPAREN          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FUNCTION        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LBRACE          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LET             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    STRING          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    NUMBER          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FOR             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    IF              reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    WHILE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    IDENTIFIER      reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    E_CONST         reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PI_CONST        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    RAND            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LOG             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    EXP             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    COS             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    SIN             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    SQRT            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FALSE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    TRUE            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    NEW             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LBRACKET        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PRINT           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    RANGE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)
    $end            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER decl_body .)


state 140

    (107) type_declaration -> TYPE IDENTIFIER parameters . inherits_type decl_body SEMICOLON
    (108) type_declaration -> TYPE IDENTIFIER parameters . decl_body SEMICOLON
    (109) type_declaration -> TYPE IDENTIFIER parameters . inherits_type decl_body
    (110) type_declaration -> TYPE IDENTIFIER parameters . decl_body
    (112) inherits_type -> . INHERITS IDENTIFIER parameters
    (113) inherits_type -> . INHERITS IDENTIFIER
    (114) decl_body -> . LBRACE decl_list RBRACE
    (115) decl_body -> . LBRACE RBRACE
    INHERITS        shift and go to state 141
    LBRACE          shift and go to state 142

    inherits_type                  shift and go to state 199
    decl_body                      shift and go to state 200

state 141

    (112) inherits_type -> INHERITS . IDENTIFIER parameters
    (113) inherits_type -> INHERITS . IDENTIFIER
    IDENTIFIER      shift and go to state 201


state 142

    (114) decl_body -> LBRACE . decl_list RBRACE
    (115) decl_body -> LBRACE . RBRACE
    (116) decl_list -> . decl SEMICOLON decl_list
    (117) decl_list -> . decl SEMICOLON
    (118) decl -> . method_declaration
    (119) decl -> . atribute_declaration
    (122) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (123) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (125) method_declaration -> . IDENTIFIER parameters type_anotation function_full_declaration
    (126) method_declaration -> . IDENTIFIER parameters type_anotation RETURN expression
    (127) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (128) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (129) method_declaration -> . IDENTIFIER parameters function_full_declaration
    (130) method_declaration -> . IDENTIFIER parameters RETURN expression
    (120) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (121) atribute_declaration -> . identifier ASSIGN expression
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          shift and go to state 203
    IDENTIFIER      shift and go to state 207
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    decl_list                      shift and go to state 202
    decl                           shift and go to state 204
    method_declaration             shift and go to state 205
    atribute_declaration           shift and go to state 206
    identifier                     shift and go to state 208
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 143

    (111) parameters -> LPAREN . arguments_list RPAREN
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    arguments_list                 shift and go to state 130
    argument                       shift and go to state 101
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 144

    (35) expression -> atom ESPACEDCONCAT expression .
    SEMICOLON       reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    $end            reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    OR              reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    SINCETHAT       reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    COMMA           reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    RBRACKET        reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    RPAREN          reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    NOT_EQUAL       reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    EQUAL           reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    LESS_EQUAL      reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_EQUAL   reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    LESS_THAN       reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_THAN    reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    AS              reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    IN              reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    ELSE            reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    ELIF            reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)
    AND             reduce using rule 35 (expression -> atom ESPACEDCONCAT expression .)


state 145

    (36) expression -> atom CONCAT expression .
    SEMICOLON       reduce using rule 36 (expression -> atom CONCAT expression .)
    $end            reduce using rule 36 (expression -> atom CONCAT expression .)
    OR              reduce using rule 36 (expression -> atom CONCAT expression .)
    SINCETHAT       reduce using rule 36 (expression -> atom CONCAT expression .)
    COMMA           reduce using rule 36 (expression -> atom CONCAT expression .)
    RBRACKET        reduce using rule 36 (expression -> atom CONCAT expression .)
    RPAREN          reduce using rule 36 (expression -> atom CONCAT expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> atom CONCAT expression .)
    EQUAL           reduce using rule 36 (expression -> atom CONCAT expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> atom CONCAT expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> atom CONCAT expression .)
    LESS_THAN       reduce using rule 36 (expression -> atom CONCAT expression .)
    GREATER_THAN    reduce using rule 36 (expression -> atom CONCAT expression .)
    AS              reduce using rule 36 (expression -> atom CONCAT expression .)
    IN              reduce using rule 36 (expression -> atom CONCAT expression .)
    ELSE            reduce using rule 36 (expression -> atom CONCAT expression .)
    ELIF            reduce using rule 36 (expression -> atom CONCAT expression .)
    AND             reduce using rule 36 (expression -> atom CONCAT expression .)


state 146

    (142) var_use -> atom LBRACKET expression . RBRACKET
    RBRACKET        shift and go to state 209


state 147

    (32) scope -> LBRACE inst_list RBRACE .
    SEMICOLON       reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    $end            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    PROTOCOL        reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    TYPE            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LPAREN          reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    FUNCTION        reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LBRACE          reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LET             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    STRING          reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    NUMBER          reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    FOR             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    IF              reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    WHILE           reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    IDENTIFIER      reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    E_CONST         reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    PI_CONST        reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    RAND            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LOG             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    EXP             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    COS             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    SIN             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    SQRT            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    FALSE           reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    TRUE            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    NEW             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LBRACKET        reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    PRINT           reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    RANGE           reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    OR              reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    SINCETHAT       reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    COMMA           reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    RBRACKET        reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    RPAREN          reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    NOT_EQUAL       reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    EQUAL           reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LESS_EQUAL      reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    GREATER_EQUAL   reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    LESS_THAN       reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    GREATER_THAN    reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    AS              reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    IN              reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    ELSE            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    ELIF            reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)
    AND             reduce using rule 32 (scope -> LBRACE inst_list RBRACE .)


state 148

    (8) inst_list -> inst SEMICOLON . inst_list
    (9) inst_list -> inst SEMICOLON .
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RBRACE          reduce using rule 9 (inst_list -> inst SEMICOLON .)
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    inst                           shift and go to state 85
    inst_list                      shift and go to state 210
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 149

    (16) var_dec -> LET var_init_list IN . var_decl_expr
    (17) var_decl_expr -> . LPAREN var_dec RPAREN
    (18) var_decl_expr -> . expression
    (19) var_decl_expr -> . flux_control
    (20) var_decl_expr -> . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 212
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    var_decl_expr                  shift and go to state 211
    var_dec                        shift and go to state 15
    expression                     shift and go to state 213
    flux_control                   shift and go to state 214
    scope                          shift and go to state 215
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 150

    (21) var_init_list -> var_init COMMA . var_init_list
    (21) var_init_list -> . var_init COMMA var_init_list
    (22) var_init_list -> . var_init
    (23) var_init -> . identifier ASSIGN inst type_downcast
    (24) var_init -> . identifier ASSIGN inst
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    var_init                       shift and go to state 87
    var_init_list                  shift and go to state 216
    identifier                     shift and go to state 88
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 151

    (23) var_init -> identifier ASSIGN . inst type_downcast
    (24) var_init -> identifier ASSIGN . inst
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    identifier                     shift and go to state 40
    inst                           shift and go to state 217
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 152

    (60) var_asign -> var_use ASSIGN expression .
    SEMICOLON       reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    $end            reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    OR              reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    SINCETHAT       reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    COMMA           reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    RBRACKET        reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    RPAREN          reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    NOT_EQUAL       reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    EQUAL           reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    LESS_EQUAL      reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    LESS_THAN       reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    GREATER_THAN    reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    AS              reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    IN              reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    ELSE            reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    ELIF            reduce using rule 60 (var_asign -> var_use ASSIGN expression .)
    AND             reduce using rule 60 (var_asign -> var_use ASSIGN expression .)


state 153

    (61) var_asign -> var_use DEST_ASSIGN expression .
    SEMICOLON       reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    $end            reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    OR              reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    SINCETHAT       reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    COMMA           reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    RBRACKET        reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    RPAREN          reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    EQUAL           reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_THAN       reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_THAN    reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    AS              reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    IN              reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    ELSE            reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    ELIF            reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)
    AND             reduce using rule 61 (var_asign -> var_use DEST_ASSIGN expression .)


state 154

    (39) aritmetic_operation -> term MINUS aritmetic_operation .
    SEMICOLON       reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    $end            reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RPAREN          reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    OR              reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    SINCETHAT       reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    COMMA           reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RBRACKET        reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    EQUAL           reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_THAN       reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AS              reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    IN              reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELSE            reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELIF            reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AND             reduce using rule 39 (aritmetic_operation -> term MINUS aritmetic_operation .)


state 155

    (40) aritmetic_operation -> term PLUS aritmetic_operation .
    SEMICOLON       reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    $end            reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RPAREN          reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    OR              reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    SINCETHAT       reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    COMMA           reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RBRACKET        reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    EQUAL           reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_THAN       reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AS              reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    IN              reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELSE            reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELIF            reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AND             reduce using rule 40 (aritmetic_operation -> term PLUS aritmetic_operation .)


state 156

    (86) for_loop -> FOR LPAREN identifier . IN expression RPAREN expression
    (87) for_loop -> FOR LPAREN identifier . IN expression RPAREN scope
    IN              shift and go to state 218


state 157

    (92) condition -> LPAREN . conditional_expression RPAREN
    (48) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (88) conditional_expression -> . condition
    (89) conditional_expression -> . NOT condition
    (90) conditional_expression -> . condition OR conditional_expression
    (91) conditional_expression -> . condition AND conditional_expression
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 221
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    conditional_expression         shift and go to state 219
    aritmetic_operation            shift and go to state 220
    condition                      shift and go to state 160
    term                           shift and go to state 38
    comparation                    shift and go to state 163
    factor                         shift and go to state 58
    expression                     shift and go to state 159
    base_exponent                  shift and go to state 61
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 222
    identifier                     shift and go to state 40
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    fully_typed_param              shift and go to state 62
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54

state 158

    (75) full_conditional -> LPAREN conditional_expression . RPAREN scope else_elif_statement
    (74) inline_conditional -> LPAREN conditional_expression . RPAREN expression else_elif_statement
    RPAREN          shift and go to state 223


state 159

    (95) comparation -> expression . NOT_EQUAL expression
    (96) comparation -> expression . EQUAL expression
    (97) comparation -> expression . LESS_EQUAL expression
    (98) comparation -> expression . GREATER_EQUAL expression
    (99) comparation -> expression . LESS_THAN expression
    (100) comparation -> expression . GREATER_THAN expression
    NOT_EQUAL       shift and go to state 224
    EQUAL           shift and go to state 225
    LESS_EQUAL      shift and go to state 226
    GREATER_EQUAL   shift and go to state 227
    LESS_THAN       shift and go to state 228
    GREATER_THAN    shift and go to state 229


state 160

    (88) conditional_expression -> condition .
    (90) conditional_expression -> condition . OR conditional_expression
    (91) conditional_expression -> condition . AND conditional_expression
    RPAREN          reduce using rule 88 (conditional_expression -> condition .)
    SEMICOLON       reduce using rule 88 (conditional_expression -> condition .)
    OR              shift and go to state 230
    AND             shift and go to state 231


state 161

    (89) conditional_expression -> NOT . condition
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    condition                      shift and go to state 232
    comparation                    shift and go to state 163
    expression                     shift and go to state 159
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 162

    (93) condition -> IDENTIFIER . type_conforming
    (143) var_use -> IDENTIFIER .
    (146) var_method -> IDENTIFIER . DOT function_call
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (27) fully_typed_param -> IDENTIFIER . type_anotation
    (135) type_conforming -> . IS identifier
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 143 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 66
    LPAREN          shift and go to state 67
    IS              shift and go to state 234
    COLON           shift and go to state 69

    type_conforming                shift and go to state 233
    type_anotation                 shift and go to state 68

state 163

    (94) condition -> comparation .
    OR              reduce using rule 94 (condition -> comparation .)
    AND             reduce using rule 94 (condition -> comparation .)
    RPAREN          reduce using rule 94 (condition -> comparation .)
    SEMICOLON       reduce using rule 94 (condition -> comparation .)


state 164

    (82) while_loop -> WHILE LPAREN expression . RPAREN expression
    (83) while_loop -> WHILE LPAREN expression . RPAREN scope
    (95) comparation -> expression . NOT_EQUAL expression
    (96) comparation -> expression . EQUAL expression
    (97) comparation -> expression . LESS_EQUAL expression
    (98) comparation -> expression . GREATER_EQUAL expression
    (99) comparation -> expression . LESS_THAN expression
    (100) comparation -> expression . GREATER_THAN expression
    RPAREN          shift and go to state 235
    NOT_EQUAL       shift and go to state 224
    EQUAL           shift and go to state 225
    LESS_EQUAL      shift and go to state 226
    GREATER_EQUAL   shift and go to state 227
    LESS_THAN       shift and go to state 228
    GREATER_THAN    shift and go to state 229


state 165

    (84) while_loop -> WHILE LPAREN conditional_expression . RPAREN expression
    (85) while_loop -> WHILE LPAREN conditional_expression . RPAREN scope
    RPAREN          shift and go to state 236


state 166

    (159) vector -> LBRACKET vector_decl RBRACKET .
    ESPACEDCONCAT   reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    CONCAT          reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    LBRACKET        reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    MODULE          reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    DIVIDE          reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    MULTIPLY        reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    ASTERPOWER      reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    POWER           reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    MINUS           reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    PLUS            reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    SEMICOLON       reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    $end            reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    RPAREN          reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    ASSIGN          reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    OR              reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    SINCETHAT       reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    COMMA           reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    RBRACKET        reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    NOT_EQUAL       reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    EQUAL           reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_EQUAL      reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_EQUAL   reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_THAN       reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_THAN    reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    AS              reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    IN              reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    ELSE            reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    ELIF            reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)
    AND             reduce using rule 159 (vector -> LBRACKET vector_decl RBRACKET .)


state 167

    (160) vector_decl -> expression OR . identifier IN expression
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    identifier                     shift and go to state 237
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 168

    (161) vector_decl -> expression SINCETHAT . identifier IN expression
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    identifier                     shift and go to state 238
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 169

    (137) arguments_list -> argument COMMA . arguments_list
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 101
    arguments_list                 shift and go to state 239
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 170

    (165) build_in_functions -> RAND LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    CONCAT          reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    LBRACKET        reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    MODULE          reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    DIVIDE          reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    MULTIPLY        reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    POWER           reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    MINUS           reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    PLUS            reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    SEMICOLON       reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    $end            reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    RPAREN          reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    ASSIGN          reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    OR              reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    SINCETHAT       reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    COMMA           reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    RBRACKET        reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    EQUAL           reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_THAN       reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    AS              reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    IN              reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    ELSE            reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    ELIF            reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)
    AND             reduce using rule 165 (build_in_functions -> RAND LPAREN RPAREN .)


state 171

    (166) build_in_functions -> LOG LPAREN argument . COMMA argument RPAREN
    COMMA           shift and go to state 240


state 172

    (167) build_in_functions -> EXP LPAREN argument . RPAREN
    RPAREN          shift and go to state 241


state 173

    (168) build_in_functions -> COS LPAREN argument . RPAREN
    RPAREN          shift and go to state 242


state 174

    (169) build_in_functions -> SIN LPAREN argument . RPAREN
    RPAREN          shift and go to state 243


state 175

    (170) build_in_functions -> SQRT LPAREN argument . RPAREN
    RPAREN          shift and go to state 244


state 176

    (133) type_instanciation -> NEW IDENTIFIER LPAREN . RPAREN
    (134) type_instanciation -> NEW IDENTIFIER LPAREN . arguments_list RPAREN
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 245
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    arguments_list                 shift and go to state 246
    argument                       shift and go to state 101
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 177

    (42) term -> factor MODULE term .
    MINUS           reduce using rule 42 (term -> factor MODULE term .)
    PLUS            reduce using rule 42 (term -> factor MODULE term .)
    SEMICOLON       reduce using rule 42 (term -> factor MODULE term .)
    $end            reduce using rule 42 (term -> factor MODULE term .)
    RPAREN          reduce using rule 42 (term -> factor MODULE term .)
    OR              reduce using rule 42 (term -> factor MODULE term .)
    SINCETHAT       reduce using rule 42 (term -> factor MODULE term .)
    COMMA           reduce using rule 42 (term -> factor MODULE term .)
    RBRACKET        reduce using rule 42 (term -> factor MODULE term .)
    NOT_EQUAL       reduce using rule 42 (term -> factor MODULE term .)
    EQUAL           reduce using rule 42 (term -> factor MODULE term .)
    LESS_EQUAL      reduce using rule 42 (term -> factor MODULE term .)
    GREATER_EQUAL   reduce using rule 42 (term -> factor MODULE term .)
    LESS_THAN       reduce using rule 42 (term -> factor MODULE term .)
    GREATER_THAN    reduce using rule 42 (term -> factor MODULE term .)
    AS              reduce using rule 42 (term -> factor MODULE term .)
    IN              reduce using rule 42 (term -> factor MODULE term .)
    ELSE            reduce using rule 42 (term -> factor MODULE term .)
    ELIF            reduce using rule 42 (term -> factor MODULE term .)
    AND             reduce using rule 42 (term -> factor MODULE term .)


state 178

    (43) term -> factor DIVIDE term .
    MINUS           reduce using rule 43 (term -> factor DIVIDE term .)
    PLUS            reduce using rule 43 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 43 (term -> factor DIVIDE term .)
    $end            reduce using rule 43 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 43 (term -> factor DIVIDE term .)
    OR              reduce using rule 43 (term -> factor DIVIDE term .)
    SINCETHAT       reduce using rule 43 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 43 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 43 (term -> factor DIVIDE term .)
    NOT_EQUAL       reduce using rule 43 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 43 (term -> factor DIVIDE term .)
    LESS_EQUAL      reduce using rule 43 (term -> factor DIVIDE term .)
    GREATER_EQUAL   reduce using rule 43 (term -> factor DIVIDE term .)
    LESS_THAN       reduce using rule 43 (term -> factor DIVIDE term .)
    GREATER_THAN    reduce using rule 43 (term -> factor DIVIDE term .)
    AS              reduce using rule 43 (term -> factor DIVIDE term .)
    IN              reduce using rule 43 (term -> factor DIVIDE term .)
    ELSE            reduce using rule 43 (term -> factor DIVIDE term .)
    ELIF            reduce using rule 43 (term -> factor DIVIDE term .)
    AND             reduce using rule 43 (term -> factor DIVIDE term .)


state 179

    (44) term -> factor MULTIPLY term .
    MINUS           reduce using rule 44 (term -> factor MULTIPLY term .)
    PLUS            reduce using rule 44 (term -> factor MULTIPLY term .)
    SEMICOLON       reduce using rule 44 (term -> factor MULTIPLY term .)
    $end            reduce using rule 44 (term -> factor MULTIPLY term .)
    RPAREN          reduce using rule 44 (term -> factor MULTIPLY term .)
    OR              reduce using rule 44 (term -> factor MULTIPLY term .)
    SINCETHAT       reduce using rule 44 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 44 (term -> factor MULTIPLY term .)
    RBRACKET        reduce using rule 44 (term -> factor MULTIPLY term .)
    NOT_EQUAL       reduce using rule 44 (term -> factor MULTIPLY term .)
    EQUAL           reduce using rule 44 (term -> factor MULTIPLY term .)
    LESS_EQUAL      reduce using rule 44 (term -> factor MULTIPLY term .)
    GREATER_EQUAL   reduce using rule 44 (term -> factor MULTIPLY term .)
    LESS_THAN       reduce using rule 44 (term -> factor MULTIPLY term .)
    GREATER_THAN    reduce using rule 44 (term -> factor MULTIPLY term .)
    AS              reduce using rule 44 (term -> factor MULTIPLY term .)
    IN              reduce using rule 44 (term -> factor MULTIPLY term .)
    ELSE            reduce using rule 44 (term -> factor MULTIPLY term .)
    ELIF            reduce using rule 44 (term -> factor MULTIPLY term .)
    AND             reduce using rule 44 (term -> factor MULTIPLY term .)


state 180

    (46) factor -> factor ASTERPOWER base_exponent .
    MODULE          reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    DIVIDE          reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    MULTIPLY        reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    ASTERPOWER      reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    POWER           reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    MINUS           reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    PLUS            reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    SEMICOLON       reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    $end            reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    RPAREN          reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    OR              reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    SINCETHAT       reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    COMMA           reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    RBRACKET        reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    NOT_EQUAL       reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    EQUAL           reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    LESS_EQUAL      reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_EQUAL   reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    LESS_THAN       reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_THAN    reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    AS              reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    IN              reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    ELSE            reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    ELIF            reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)
    AND             reduce using rule 46 (factor -> factor ASTERPOWER base_exponent .)


state 181

    (47) factor -> factor POWER base_exponent .
    MODULE          reduce using rule 47 (factor -> factor POWER base_exponent .)
    DIVIDE          reduce using rule 47 (factor -> factor POWER base_exponent .)
    MULTIPLY        reduce using rule 47 (factor -> factor POWER base_exponent .)
    ASTERPOWER      reduce using rule 47 (factor -> factor POWER base_exponent .)
    POWER           reduce using rule 47 (factor -> factor POWER base_exponent .)
    MINUS           reduce using rule 47 (factor -> factor POWER base_exponent .)
    PLUS            reduce using rule 47 (factor -> factor POWER base_exponent .)
    SEMICOLON       reduce using rule 47 (factor -> factor POWER base_exponent .)
    $end            reduce using rule 47 (factor -> factor POWER base_exponent .)
    RPAREN          reduce using rule 47 (factor -> factor POWER base_exponent .)
    OR              reduce using rule 47 (factor -> factor POWER base_exponent .)
    SINCETHAT       reduce using rule 47 (factor -> factor POWER base_exponent .)
    COMMA           reduce using rule 47 (factor -> factor POWER base_exponent .)
    RBRACKET        reduce using rule 47 (factor -> factor POWER base_exponent .)
    NOT_EQUAL       reduce using rule 47 (factor -> factor POWER base_exponent .)
    EQUAL           reduce using rule 47 (factor -> factor POWER base_exponent .)
    LESS_EQUAL      reduce using rule 47 (factor -> factor POWER base_exponent .)
    GREATER_EQUAL   reduce using rule 47 (factor -> factor POWER base_exponent .)
    LESS_THAN       reduce using rule 47 (factor -> factor POWER base_exponent .)
    GREATER_THAN    reduce using rule 47 (factor -> factor POWER base_exponent .)
    AS              reduce using rule 47 (factor -> factor POWER base_exponent .)
    IN              reduce using rule 47 (factor -> factor POWER base_exponent .)
    ELSE            reduce using rule 47 (factor -> factor POWER base_exponent .)
    ELIF            reduce using rule 47 (factor -> factor POWER base_exponent .)
    AND             reduce using rule 47 (factor -> factor POWER base_exponent .)


state 182

    (164) build_in_print -> PRINT LPAREN argument . RPAREN
    RPAREN          shift and go to state 247


state 183

    (163) build_in_range -> RANGE LPAREN argument . COMMA argument RPAREN
    COMMA           shift and go to state 248


state 184

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body
    (154) protocol_body -> . LBRACE virtual_method_list RBRACE
    LBRACE          shift and go to state 119

    protocol_body                  shift and go to state 249

state 185

    (152) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)


state 186

    (154) protocol_body -> LBRACE virtual_method_list . RBRACE
    RBRACE          shift and go to state 250


state 187

    (155) virtual_method_list -> virtual_method . SEMICOLON virtual_method_list
    (156) virtual_method_list -> virtual_method . SEMICOLON
    SEMICOLON       shift and go to state 251


state 188

    (157) virtual_method -> IDENTIFIER . LPAREN RPAREN type_anotation
    (158) virtual_method -> IDENTIFIER . parameters type_anotation
    (111) parameters -> . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 252

    parameters                     shift and go to state 253

state 189

    (144) var_attr -> IDENTIFIER DOT . var_attr
    (145) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 254

    var_attr                       shift and go to state 122

state 190

    (132) function_call -> IDENTIFIER LPAREN arguments_list RPAREN .
    ESPACEDCONCAT   reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    CONCAT          reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MODULE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    DIVIDE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MULTIPLY        reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASTERPOWER      reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    POWER           reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MINUS           reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    PLUS            reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    SEMICOLON       reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    $end            reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RPAREN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    OR              reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    SINCETHAT       reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    COMMA           reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    NOT_EQUAL       reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    EQUAL           reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_EQUAL      reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_EQUAL   reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_THAN       reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_THAN    reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    AS              reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    IN              reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ELSE            reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ELIF            reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    AND             reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)


state 191

    (62) function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .
    PROTOCOL        reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    TYPE            reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LPAREN          reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FUNCTION        reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LBRACE          reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LET             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    STRING          reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    NUMBER          reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FOR             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    IF              reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    WHILE           reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    IDENTIFIER      reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    E_CONST         reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    PI_CONST        reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    RAND            reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LOG             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    EXP             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    COS             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    SIN             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    SQRT            reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FALSE           reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    TRUE            reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    NEW             reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LBRACKET        reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    PRINT           reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    RANGE           reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    $end            reduce using rule 62 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)


state 192

    (64) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration . SEMICOLON
    (66) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .
    SEMICOLON       shift and go to state 255
    PROTOCOL        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    TYPE            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LPAREN          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FUNCTION        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LBRACE          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LET             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    STRING          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    NUMBER          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FOR             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    IF              reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    WHILE           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    IDENTIFIER      reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    E_CONST         reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    PI_CONST        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    RAND            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LOG             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    EXP             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    COS             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    SIN             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    SQRT            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FALSE           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    TRUE            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    NEW             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LBRACKET        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    PRINT           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    RANGE           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    $end            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)


state 193

    (111) parameters -> LPAREN arguments_list RPAREN .
    RETURN          reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)
    COLON           reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)
    LBRACE          reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)
    INHERITS        reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)


state 194

    (65) function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LET             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    STRING          reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    FOR             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    IF              reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    RAND            reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LOG             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    EXP             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    COS             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    SIN             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    NEW             reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    $end            reduce using rule 65 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)


state 195

    (70) function_inline_declaration -> type_anotation RETURN . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (86) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (82) while_loop -> . WHILE LPAREN expression RPAREN expression
    (83) while_loop -> . WHILE LPAREN expression RPAREN scope
    (84) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    inst                           shift and go to state 256
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 196

    (71) function_inline_declaration -> RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 257


state 197

    (103) type_declaration -> TYPE IDENTIFIER inherits_type decl_body . SEMICOLON
    (105) type_declaration -> TYPE IDENTIFIER inherits_type decl_body .
    SEMICOLON       shift and go to state 258
    PROTOCOL        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    TYPE            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LPAREN          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FUNCTION        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LBRACE          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LET             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    STRING          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    NUMBER          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FOR             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    IF              reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    WHILE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    IDENTIFIER      reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    E_CONST         reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PI_CONST        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    RAND            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LOG             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    EXP             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    COS             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    SIN             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    SQRT            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FALSE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    TRUE            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    NEW             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LBRACKET        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PRINT           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    RANGE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    $end            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)


state 198

    (104) type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .
    PROTOCOL        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    TYPE            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LPAREN          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FUNCTION        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LBRACE          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LET             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    STRING          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    NUMBER          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FOR             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    IF              reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    WHILE           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    E_CONST         reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PI_CONST        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    RAND            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LOG             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    EXP             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    COS             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    SIN             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    SQRT            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FALSE           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    TRUE            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    NEW             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LBRACKET        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PRINT           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    RANGE           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    $end            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)


state 199

    (107) type_declaration -> TYPE IDENTIFIER parameters inherits_type . decl_body SEMICOLON
    (109) type_declaration -> TYPE IDENTIFIER parameters inherits_type . decl_body
    (114) decl_body -> . LBRACE decl_list RBRACE
    (115) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 142

    decl_body                      shift and go to state 259

state 200

    (108) type_declaration -> TYPE IDENTIFIER parameters decl_body . SEMICOLON
    (110) type_declaration -> TYPE IDENTIFIER parameters decl_body .
    SEMICOLON       shift and go to state 260
    PROTOCOL        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    TYPE            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LPAREN          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FUNCTION        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LBRACE          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LET             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    STRING          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    NUMBER          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FOR             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    IF              reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    WHILE           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    IDENTIFIER      reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    E_CONST         reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PI_CONST        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    RAND            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LOG             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    EXP             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    COS             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    SIN             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    SQRT            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FALSE           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    TRUE            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    NEW             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LBRACKET        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PRINT           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    RANGE           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    $end            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)


state 201

    (112) inherits_type -> INHERITS IDENTIFIER . parameters
    (113) inherits_type -> INHERITS IDENTIFIER .
    (111) parameters -> . LPAREN arguments_list RPAREN
    LBRACE          reduce using rule 113 (inherits_type -> INHERITS IDENTIFIER .)
    LPAREN          shift and go to state 143

    parameters                     shift and go to state 261

state 202

    (114) decl_body -> LBRACE decl_list . RBRACE
    RBRACE          shift and go to state 262


state 203

    (115) decl_body -> LBRACE RBRACE .
    SEMICOLON       reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    TYPE            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LPAREN          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LBRACE          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LET             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    STRING          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    NUMBER          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    FOR             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    IF              reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    WHILE           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    E_CONST         reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    RAND            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LOG             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    EXP             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    COS             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    SIN             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    SQRT            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    FALSE           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    TRUE            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    NEW             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    PRINT           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    RANGE           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    $end            reduce using rule 115 (decl_body -> LBRACE RBRACE .)


state 204

    (116) decl_list -> decl . SEMICOLON decl_list
    (117) decl_list -> decl . SEMICOLON
    SEMICOLON       shift and go to state 263


state 205

    (118) decl -> method_declaration .
    SEMICOLON       reduce using rule 118 (decl -> method_declaration .)


state 206

    (119) decl -> atribute_declaration .
    SEMICOLON       reduce using rule 119 (decl -> atribute_declaration .)


state 207

    (122) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation function_full_declaration
    (123) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN expression
    (125) method_declaration -> IDENTIFIER . parameters type_anotation function_full_declaration
    (126) method_declaration -> IDENTIFIER . parameters type_anotation RETURN expression
    (127) method_declaration -> IDENTIFIER . LPAREN RPAREN function_full_declaration
    (128) method_declaration -> IDENTIFIER . LPAREN RPAREN RETURN expression
    (129) method_declaration -> IDENTIFIER . parameters function_full_declaration
    (130) method_declaration -> IDENTIFIER . parameters RETURN expression
    (27) fully_typed_param -> IDENTIFIER . type_anotation
    (146) var_method -> IDENTIFIER . DOT function_call
    (143) var_use -> IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (111) parameters -> . LPAREN arguments_list RPAREN
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    LPAREN          shift and go to state 264
    DOT             shift and go to state 66
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    COLON           shift and go to state 69

    type_anotation                 shift and go to state 68
    parameters                     shift and go to state 265

state 208

    (120) atribute_declaration -> identifier . ASSIGN expression type_downcast
    (121) atribute_declaration -> identifier . ASSIGN expression
    ASSIGN          shift and go to state 266


state 209

    (142) var_use -> atom LBRACKET expression RBRACKET .
    ASSIGN          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    DEST_ASSIGN     reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ESPACEDCONCAT   reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    CONCAT          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    MODULE          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ASTERPOWER      reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    POWER           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    $end            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    OR              reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    SINCETHAT       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_EQUAL      reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_EQUAL   reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    AS              reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    IN              reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ELIF            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    AND             reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)


state 210

    (8) inst_list -> inst SEMICOLON inst_list .
    RBRACE          reduce using rule 8 (inst_list -> inst SEMICOLON inst_list .)


state 211

    (16) var_dec -> LET var_init_list IN var_decl_expr .
    SEMICOLON       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    $end            reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    RPAREN          reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    OR              reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    SINCETHAT       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    COMMA           reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    RBRACKET        reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    NOT_EQUAL       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    EQUAL           reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_EQUAL      reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_EQUAL   reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_THAN       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_THAN    reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    AS              reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    IN              reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELSE            reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELIF            reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    AND             reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)


state 212

    (17) var_decl_expr -> LPAREN . var_dec RPAREN
    (48) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LET             shift and go to state 27
    LPAREN          shift and go to state 72
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    var_dec                        shift and go to state 267
    aritmetic_operation            shift and go to state 74
    term                           shift and go to state 38
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 213

    (18) var_decl_expr -> expression .
    SEMICOLON       reduce using rule 18 (var_decl_expr -> expression .)
    $end            reduce using rule 18 (var_decl_expr -> expression .)
    OR              reduce using rule 18 (var_decl_expr -> expression .)
    SINCETHAT       reduce using rule 18 (var_decl_expr -> expression .)
    COMMA           reduce using rule 18 (var_decl_expr -> expression .)
    RBRACKET        reduce using rule 18 (var_decl_expr -> expression .)
    RPAREN          reduce using rule 18 (var_decl_expr -> expression .)
    NOT_EQUAL       reduce using rule 18 (var_decl_expr -> expression .)
    EQUAL           reduce using rule 18 (var_decl_expr -> expression .)
    LESS_EQUAL      reduce using rule 18 (var_decl_expr -> expression .)
    GREATER_EQUAL   reduce using rule 18 (var_decl_expr -> expression .)
    LESS_THAN       reduce using rule 18 (var_decl_expr -> expression .)
    GREATER_THAN    reduce using rule 18 (var_decl_expr -> expression .)
    AS              reduce using rule 18 (var_decl_expr -> expression .)
    IN              reduce using rule 18 (var_decl_expr -> expression .)
    ELSE            reduce using rule 18 (var_decl_expr -> expression .)
    ELIF            reduce using rule 18 (var_decl_expr -> expression .)
    AND             reduce using rule 18 (var_decl_expr -> expression .)


state 214

    (19) var_decl_expr -> flux_control .
    SEMICOLON       reduce using rule 19 (var_decl_expr -> flux_control .)
    $end            reduce using rule 19 (var_decl_expr -> flux_control .)
    OR              reduce using rule 19 (var_decl_expr -> flux_control .)
    SINCETHAT       reduce using rule 19 (var_decl_expr -> flux_control .)
    COMMA           reduce using rule 19 (var_decl_expr -> flux_control .)
    RBRACKET        reduce using rule 19 (var_decl_expr -> flux_control .)
    RPAREN          reduce using rule 19 (var_decl_expr -> flux_control .)
    NOT_EQUAL       reduce using rule 19 (var_decl_expr -> flux_control .)
    EQUAL           reduce using rule 19 (var_decl_expr -> flux_control .)
    LESS_EQUAL      reduce using rule 19 (var_decl_expr -> flux_control .)
    GREATER_EQUAL   reduce using rule 19 (var_decl_expr -> flux_control .)
    LESS_THAN       reduce using rule 19 (var_decl_expr -> flux_control .)
    GREATER_THAN    reduce using rule 19 (var_decl_expr -> flux_control .)
    AS              reduce using rule 19 (var_decl_expr -> flux_control .)
    IN              reduce using rule 19 (var_decl_expr -> flux_control .)
    ELSE            reduce using rule 19 (var_decl_expr -> flux_control .)
    ELIF            reduce using rule 19 (var_decl_expr -> flux_control .)
    AND             reduce using rule 19 (var_decl_expr -> flux_control .)


state 215

    (20) var_decl_expr -> scope .
    SEMICOLON       reduce using rule 20 (var_decl_expr -> scope .)
    $end            reduce using rule 20 (var_decl_expr -> scope .)
    OR              reduce using rule 20 (var_decl_expr -> scope .)
    SINCETHAT       reduce using rule 20 (var_decl_expr -> scope .)
    COMMA           reduce using rule 20 (var_decl_expr -> scope .)
    RBRACKET        reduce using rule 20 (var_decl_expr -> scope .)
    RPAREN          reduce using rule 20 (var_decl_expr -> scope .)
    NOT_EQUAL       reduce using rule 20 (var_decl_expr -> scope .)
    EQUAL           reduce using rule 20 (var_decl_expr -> scope .)
    LESS_EQUAL      reduce using rule 20 (var_decl_expr -> scope .)
    GREATER_EQUAL   reduce using rule 20 (var_decl_expr -> scope .)
    LESS_THAN       reduce using rule 20 (var_decl_expr -> scope .)
    GREATER_THAN    reduce using rule 20 (var_decl_expr -> scope .)
    AS              reduce using rule 20 (var_decl_expr -> scope .)
    IN              reduce using rule 20 (var_decl_expr -> scope .)
    ELSE            reduce using rule 20 (var_decl_expr -> scope .)
    ELIF            reduce using rule 20 (var_decl_expr -> scope .)
    AND             reduce using rule 20 (var_decl_expr -> scope .)


state 216

    (21) var_init_list -> var_init COMMA var_init_list .
    IN              reduce using rule 21 (var_init_list -> var_init COMMA var_init_list .)


state 217

    (23) var_init -> identifier ASSIGN inst . type_downcast
    (24) var_init -> identifier ASSIGN inst .
    (136) type_downcast -> . AS identifier
    COMMA           reduce using rule 24 (var_init -> identifier ASSIGN inst .)
    IN              reduce using rule 24 (var_init -> identifier ASSIGN inst .)
    AS              shift and go to state 269

    type_downcast                  shift and go to state 268

state 218

    (86) for_loop -> FOR LPAREN identifier IN . expression RPAREN expression
    (87) for_loop -> FOR LPAREN identifier IN . expression RPAREN scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    identifier                     shift and go to state 40
    expression                     shift and go to state 270
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 219

    (92) condition -> LPAREN conditional_expression . RPAREN
    RPAREN          shift and go to state 271


state 220

    (48) base_exponent -> LPAREN aritmetic_operation . RPAREN
    (37) expression -> aritmetic_operation .
    RPAREN          shift and go to state 137
    NOT_EQUAL       reduce using rule 37 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 37 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 37 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 37 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 37 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 37 (expression -> aritmetic_operation .)


state 221

    (93) condition -> IDENTIFIER . type_conforming
    (143) var_use -> IDENTIFIER .
    (146) var_method -> IDENTIFIER . DOT function_call
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (27) fully_typed_param -> IDENTIFIER . type_anotation
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (135) type_conforming -> . IS identifier
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 143 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 66
    LPAREN          shift and go to state 67
    IS              shift and go to state 234
    COLON           shift and go to state 69

    type_conforming                shift and go to state 233
    type_anotation                 shift and go to state 68

state 222

    (35) expression -> atom . ESPACEDCONCAT expression
    (36) expression -> atom . CONCAT expression
    (26) identifier -> atom .
    (142) var_use -> atom . LBRACKET expression RBRACKET
    ESPACEDCONCAT   shift and go to state 80
    CONCAT          shift and go to state 81
    MODULE          reduce using rule 26 (identifier -> atom .)
    DIVIDE          reduce using rule 26 (identifier -> atom .)
    MULTIPLY        reduce using rule 26 (identifier -> atom .)
    ASTERPOWER      reduce using rule 26 (identifier -> atom .)
    POWER           reduce using rule 26 (identifier -> atom .)
    MINUS           reduce using rule 26 (identifier -> atom .)
    PLUS            reduce using rule 26 (identifier -> atom .)
    RPAREN          reduce using rule 26 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 26 (identifier -> atom .)
    EQUAL           reduce using rule 26 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 26 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 26 (identifier -> atom .)
    LESS_THAN       reduce using rule 26 (identifier -> atom .)
    GREATER_THAN    reduce using rule 26 (identifier -> atom .)
    LBRACKET        shift and go to state 82


state 223

    (75) full_conditional -> LPAREN conditional_expression RPAREN . scope else_elif_statement
    (74) inline_conditional -> LPAREN conditional_expression RPAREN . expression else_elif_statement
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    scope                          shift and go to state 272
    expression                     shift and go to state 273
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 224

    (95) comparation -> expression NOT_EQUAL . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 274
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 225

    (96) comparation -> expression EQUAL . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 275
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 226

    (97) comparation -> expression LESS_EQUAL . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 276
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 227

    (98) comparation -> expression GREATER_EQUAL . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 277
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 228

    (99) comparation -> expression LESS_THAN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 278
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 229

    (100) comparation -> expression GREATER_THAN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 279
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 230

    (90) conditional_expression -> condition OR . conditional_expression
    (88) conditional_expression -> . condition
    (89) conditional_expression -> . NOT condition
    (90) conditional_expression -> . condition OR conditional_expression
    (91) conditional_expression -> . condition AND conditional_expression
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    condition                      shift and go to state 160
    conditional_expression         shift and go to state 280
    comparation                    shift and go to state 163
    expression                     shift and go to state 159
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 231

    (91) conditional_expression -> condition AND . conditional_expression
    (88) conditional_expression -> . condition
    (89) conditional_expression -> . NOT condition
    (90) conditional_expression -> . condition OR conditional_expression
    (91) conditional_expression -> . condition AND conditional_expression
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    condition                      shift and go to state 160
    conditional_expression         shift and go to state 281
    comparation                    shift and go to state 163
    expression                     shift and go to state 159
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 232

    (89) conditional_expression -> NOT condition .
    RPAREN          reduce using rule 89 (conditional_expression -> NOT condition .)
    SEMICOLON       reduce using rule 89 (conditional_expression -> NOT condition .)


state 233

    (93) condition -> IDENTIFIER type_conforming .
    OR              reduce using rule 93 (condition -> IDENTIFIER type_conforming .)
    AND             reduce using rule 93 (condition -> IDENTIFIER type_conforming .)
    RPAREN          reduce using rule 93 (condition -> IDENTIFIER type_conforming .)
    SEMICOLON       reduce using rule 93 (condition -> IDENTIFIER type_conforming .)


state 234

    (135) type_conforming -> IS . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    identifier                     shift and go to state 282
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 235

    (82) while_loop -> WHILE LPAREN expression RPAREN . expression
    (83) while_loop -> WHILE LPAREN expression RPAREN . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 283
    scope                          shift and go to state 284
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 236

    (84) while_loop -> WHILE LPAREN conditional_expression RPAREN . expression
    (85) while_loop -> WHILE LPAREN conditional_expression RPAREN . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 285
    scope                          shift and go to state 286
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 237

    (160) vector_decl -> expression OR identifier . IN expression
    IN              shift and go to state 287


state 238

    (161) vector_decl -> expression SINCETHAT identifier . IN expression
    IN              shift and go to state 288


state 239

    (137) arguments_list -> argument COMMA arguments_list .
    RBRACKET        reduce using rule 137 (arguments_list -> argument COMMA arguments_list .)
    RPAREN          reduce using rule 137 (arguments_list -> argument COMMA arguments_list .)


state 240

    (166) build_in_functions -> LOG LPAREN argument COMMA . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 289
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 241

    (167) build_in_functions -> EXP LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    CONCAT          reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MODULE          reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    POWER           reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MINUS           reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    PLUS            reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    $end            reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RPAREN          reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    OR              reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    COMMA           reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    EQUAL           reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    AS              reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    IN              reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ELSE            reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ELIF            reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)
    AND             reduce using rule 167 (build_in_functions -> EXP LPAREN argument RPAREN .)


state 242

    (168) build_in_functions -> COS LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    CONCAT          reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    MODULE          reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    POWER           reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    MINUS           reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    PLUS            reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    $end            reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    RPAREN          reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    OR              reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    COMMA           reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    EQUAL           reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    AS              reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    IN              reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    ELSE            reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    ELIF            reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)
    AND             reduce using rule 168 (build_in_functions -> COS LPAREN argument RPAREN .)


state 243

    (169) build_in_functions -> SIN LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    CONCAT          reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MODULE          reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    POWER           reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MINUS           reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    PLUS            reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    $end            reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RPAREN          reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    OR              reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    COMMA           reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    EQUAL           reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    AS              reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    IN              reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ELSE            reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ELIF            reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)
    AND             reduce using rule 169 (build_in_functions -> SIN LPAREN argument RPAREN .)


state 244

    (170) build_in_functions -> SQRT LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    CONCAT          reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MODULE          reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    POWER           reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MINUS           reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    PLUS            reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    $end            reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RPAREN          reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    OR              reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    COMMA           reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    EQUAL           reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    AS              reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    IN              reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ELSE            reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ELIF            reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    AND             reduce using rule 170 (build_in_functions -> SQRT LPAREN argument RPAREN .)


state 245

    (133) type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)


state 246

    (134) type_instanciation -> NEW IDENTIFIER LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 290


state 247

    (164) build_in_print -> PRINT LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    CONCAT          reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MODULE          reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    POWER           reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MINUS           reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    PLUS            reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    $end            reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RPAREN          reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    OR              reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    COMMA           reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    EQUAL           reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    AS              reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    IN              reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ELSE            reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ELIF            reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)
    AND             reduce using rule 164 (build_in_print -> PRINT LPAREN argument RPAREN .)


state 248

    (163) build_in_range -> RANGE LPAREN argument COMMA . argument RPAREN
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    argument                       shift and go to state 291
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 249

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body . SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 292
    PROTOCOL        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TYPE            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LET             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    STRING          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FOR             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IF              reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    WHILE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RAND            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LOG             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    EXP             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    COS             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SIN             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SQRT            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FALSE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TRUE            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NEW             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PRINT           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RANGE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    $end            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)


state 250

    (154) protocol_body -> LBRACE virtual_method_list RBRACE .
    SEMICOLON       reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PROTOCOL        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TYPE            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LPAREN          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FUNCTION        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACE          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LET             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    STRING          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NUMBER          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FOR             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IF              reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    WHILE           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IDENTIFIER      reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    E_CONST         reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PI_CONST        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RAND            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LOG             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    EXP             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    COS             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SIN             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SQRT            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FALSE           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TRUE            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NEW             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACKET        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PRINT           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RANGE           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    $end            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)


state 251

    (155) virtual_method_list -> virtual_method SEMICOLON . virtual_method_list
    (156) virtual_method_list -> virtual_method SEMICOLON .
    (155) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (156) virtual_method_list -> . virtual_method SEMICOLON
    (157) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    (158) virtual_method -> . IDENTIFIER parameters type_anotation
    RBRACE          reduce using rule 156 (virtual_method_list -> virtual_method SEMICOLON .)
    IDENTIFIER      shift and go to state 188

    virtual_method                 shift and go to state 187
    virtual_method_list            shift and go to state 293

state 252

    (157) virtual_method -> IDENTIFIER LPAREN . RPAREN type_anotation
    (111) parameters -> LPAREN . arguments_list RPAREN
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 294
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    arguments_list                 shift and go to state 130
    argument                       shift and go to state 101
    conditional                    shift and go to state 102
    expression                     shift and go to state 125
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 253

    (158) virtual_method -> IDENTIFIER parameters . type_anotation
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 69

    type_anotation                 shift and go to state 295

state 254

    (145) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DOT             shift and go to state 189


state 255

    (64) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LET             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    STRING          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FOR             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    IF              reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    RAND            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LOG             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    EXP             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    COS             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    SIN             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    NEW             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    $end            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)


state 256

    (70) function_inline_declaration -> type_anotation RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 296


state 257

    (71) function_inline_declaration -> RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TYPE            reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LET             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    STRING          reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FOR             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IF              reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    WHILE           reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RAND            reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LOG             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    EXP             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    COS             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SIN             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SQRT            reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FALSE           reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TRUE            reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NEW             reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PRINT           reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RANGE           reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)
    $end            reduce using rule 71 (function_inline_declaration -> RETURN inst SEMICOLON .)


state 258

    (103) type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 103 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)


state 259

    (107) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body . SEMICOLON
    (109) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .
    SEMICOLON       shift and go to state 297
    PROTOCOL        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    TYPE            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LPAREN          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FUNCTION        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LBRACE          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LET             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    STRING          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    NUMBER          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FOR             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    IF              reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    WHILE           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    IDENTIFIER      reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    E_CONST         reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PI_CONST        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    RAND            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LOG             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    EXP             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    COS             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    SIN             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    SQRT            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FALSE           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    TRUE            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    NEW             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LBRACKET        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PRINT           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    RANGE           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    $end            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)


state 260

    (108) type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .
    PROTOCOL        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    TYPE            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LPAREN          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FUNCTION        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LBRACE          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LET             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    STRING          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    NUMBER          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FOR             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    IF              reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    WHILE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    E_CONST         reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PI_CONST        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    RAND            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LOG             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    EXP             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    COS             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    SIN             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    SQRT            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FALSE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    TRUE            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    NEW             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LBRACKET        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PRINT           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    RANGE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    $end            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)


state 261

    (112) inherits_type -> INHERITS IDENTIFIER parameters .
    LBRACE          reduce using rule 112 (inherits_type -> INHERITS IDENTIFIER parameters .)


state 262

    (114) decl_body -> LBRACE decl_list RBRACE .
    SEMICOLON       reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    PROTOCOL        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    TYPE            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LPAREN          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    FUNCTION        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACE          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LET             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    STRING          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    NUMBER          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    FOR             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    IF              reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    WHILE           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    IDENTIFIER      reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    E_CONST         reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    PI_CONST        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    RAND            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LOG             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    EXP             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    COS             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    SIN             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    SQRT            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    FALSE           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    TRUE            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    NEW             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACKET        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    PRINT           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    RANGE           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    $end            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)


state 263

    (116) decl_list -> decl SEMICOLON . decl_list
    (117) decl_list -> decl SEMICOLON .
    (116) decl_list -> . decl SEMICOLON decl_list
    (117) decl_list -> . decl SEMICOLON
    (118) decl -> . method_declaration
    (119) decl -> . atribute_declaration
    (122) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (123) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (125) method_declaration -> . IDENTIFIER parameters type_anotation function_full_declaration
    (126) method_declaration -> . IDENTIFIER parameters type_anotation RETURN expression
    (127) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (128) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (129) method_declaration -> . IDENTIFIER parameters function_full_declaration
    (130) method_declaration -> . IDENTIFIER parameters RETURN expression
    (120) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (121) atribute_declaration -> . identifier ASSIGN expression
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          reduce using rule 117 (decl_list -> decl SEMICOLON .)
    IDENTIFIER      shift and go to state 207
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    decl                           shift and go to state 204
    decl_list                      shift and go to state 298
    method_declaration             shift and go to state 205
    atribute_declaration           shift and go to state 206
    identifier                     shift and go to state 208
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 264

    (122) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation function_full_declaration
    (123) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN expression
    (127) method_declaration -> IDENTIFIER LPAREN . RPAREN function_full_declaration
    (128) method_declaration -> IDENTIFIER LPAREN . RPAREN RETURN expression
    (131) function_call -> IDENTIFIER LPAREN . RPAREN
    (132) function_call -> IDENTIFIER LPAREN . arguments_list RPAREN
    (111) parameters -> LPAREN . arguments_list RPAREN
    (137) arguments_list -> . argument COMMA arguments_list
    (138) arguments_list -> . argument
    (139) argument -> . conditional
    (140) argument -> . expression
    (72) conditional -> . IF full_conditional
    (73) conditional -> . IF inline_conditional
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 299
    IF              shift and go to state 41
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 125
    arguments_list                 shift and go to state 300
    argument                       shift and go to state 101
    conditional                    shift and go to state 102
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 265

    (125) method_declaration -> IDENTIFIER parameters . type_anotation function_full_declaration
    (126) method_declaration -> IDENTIFIER parameters . type_anotation RETURN expression
    (129) method_declaration -> IDENTIFIER parameters . function_full_declaration
    (130) method_declaration -> IDENTIFIER parameters . RETURN expression
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    (69) function_full_declaration -> . scope
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 303
    COLON           shift and go to state 69
    LBRACE          shift and go to state 26

    type_anotation                 shift and go to state 301
    function_full_declaration      shift and go to state 302
    scope                          shift and go to state 135

state 266

    (120) atribute_declaration -> identifier ASSIGN . expression type_downcast
    (121) atribute_declaration -> identifier ASSIGN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    identifier                     shift and go to state 40
    expression                     shift and go to state 304
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 267

    (17) var_decl_expr -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 305


state 268

    (23) var_init -> identifier ASSIGN inst type_downcast .
    COMMA           reduce using rule 23 (var_init -> identifier ASSIGN inst type_downcast .)
    IN              reduce using rule 23 (var_init -> identifier ASSIGN inst type_downcast .)


state 269

    (136) type_downcast -> AS . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 76
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    identifier                     shift and go to state 306
    fully_typed_param              shift and go to state 62
    atom                           shift and go to state 75
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 77
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    var_attr                       shift and go to state 43

state 270

    (86) for_loop -> FOR LPAREN identifier IN expression . RPAREN expression
    (87) for_loop -> FOR LPAREN identifier IN expression . RPAREN scope
    RPAREN          shift and go to state 307


state 271

    (92) condition -> LPAREN conditional_expression RPAREN .
    OR              reduce using rule 92 (condition -> LPAREN conditional_expression RPAREN .)
    AND             reduce using rule 92 (condition -> LPAREN conditional_expression RPAREN .)
    RPAREN          reduce using rule 92 (condition -> LPAREN conditional_expression RPAREN .)
    SEMICOLON       reduce using rule 92 (condition -> LPAREN conditional_expression RPAREN .)


state 272

    (75) full_conditional -> LPAREN conditional_expression RPAREN scope . else_elif_statement
    (76) else_elif_statement -> . ELSE full_else
    (77) else_elif_statement -> . ELSE inline_else
    (78) else_elif_statement -> . ELIF full_conditional
    (79) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 309
    ELIF            shift and go to state 310

    else_elif_statement            shift and go to state 308

state 273

    (74) inline_conditional -> LPAREN conditional_expression RPAREN expression . else_elif_statement
    (76) else_elif_statement -> . ELSE full_else
    (77) else_elif_statement -> . ELSE inline_else
    (78) else_elif_statement -> . ELIF full_conditional
    (79) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 309
    ELIF            shift and go to state 310

    else_elif_statement            shift and go to state 311

state 274

    (95) comparation -> expression NOT_EQUAL expression .
    OR              reduce using rule 95 (comparation -> expression NOT_EQUAL expression .)
    AND             reduce using rule 95 (comparation -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 95 (comparation -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 95 (comparation -> expression NOT_EQUAL expression .)


state 275

    (96) comparation -> expression EQUAL expression .
    OR              reduce using rule 96 (comparation -> expression EQUAL expression .)
    AND             reduce using rule 96 (comparation -> expression EQUAL expression .)
    RPAREN          reduce using rule 96 (comparation -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 96 (comparation -> expression EQUAL expression .)


state 276

    (97) comparation -> expression LESS_EQUAL expression .
    OR              reduce using rule 97 (comparation -> expression LESS_EQUAL expression .)
    AND             reduce using rule 97 (comparation -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 97 (comparation -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 97 (comparation -> expression LESS_EQUAL expression .)


state 277

    (98) comparation -> expression GREATER_EQUAL expression .
    OR              reduce using rule 98 (comparation -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 98 (comparation -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 98 (comparation -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 98 (comparation -> expression GREATER_EQUAL expression .)


state 278

    (99) comparation -> expression LESS_THAN expression .
    OR              reduce using rule 99 (comparation -> expression LESS_THAN expression .)
    AND             reduce using rule 99 (comparation -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 99 (comparation -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 99 (comparation -> expression LESS_THAN expression .)


state 279

    (100) comparation -> expression GREATER_THAN expression .
    OR              reduce using rule 100 (comparation -> expression GREATER_THAN expression .)
    AND             reduce using rule 100 (comparation -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 100 (comparation -> expression GREATER_THAN expression .)
    SEMICOLON       reduce using rule 100 (comparation -> expression GREATER_THAN expression .)


state 280

    (90) conditional_expression -> condition OR conditional_expression .
    RPAREN          reduce using rule 90 (conditional_expression -> condition OR conditional_expression .)
    SEMICOLON       reduce using rule 90 (conditional_expression -> condition OR conditional_expression .)


state 281

    (91) conditional_expression -> condition AND conditional_expression .
    RPAREN          reduce using rule 91 (conditional_expression -> condition AND conditional_expression .)
    SEMICOLON       reduce using rule 91 (conditional_expression -> condition AND conditional_expression .)


state 282

    (135) type_conforming -> IS identifier .
    OR              reduce using rule 135 (type_conforming -> IS identifier .)
    AND             reduce using rule 135 (type_conforming -> IS identifier .)
    RPAREN          reduce using rule 135 (type_conforming -> IS identifier .)
    SEMICOLON       reduce using rule 135 (type_conforming -> IS identifier .)


state 283

    (82) while_loop -> WHILE LPAREN expression RPAREN expression .
    SEMICOLON       reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    $end            reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    OR              reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    SINCETHAT       reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    COMMA           reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RBRACKET        reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RPAREN          reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    EQUAL           reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_THAN       reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AS              reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    IN              reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELSE            reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELIF            reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AND             reduce using rule 82 (while_loop -> WHILE LPAREN expression RPAREN expression .)


state 284

    (83) while_loop -> WHILE LPAREN expression RPAREN scope .
    SEMICOLON       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    $end            reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    OR              reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    SINCETHAT       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    COMMA           reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RBRACKET        reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RPAREN          reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    EQUAL           reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_THAN       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AS              reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    IN              reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELSE            reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELIF            reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AND             reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN scope .)


state 285

    (84) while_loop -> WHILE LPAREN conditional_expression RPAREN expression .
    SEMICOLON       reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    $end            reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    OR              reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    SINCETHAT       reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    COMMA           reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RBRACKET        reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RPAREN          reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    EQUAL           reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_THAN       reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_THAN    reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AS              reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    IN              reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELSE            reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELIF            reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AND             reduce using rule 84 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)


state 286

    (85) while_loop -> WHILE LPAREN conditional_expression RPAREN scope .
    SEMICOLON       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    $end            reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    OR              reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    SINCETHAT       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    COMMA           reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RBRACKET        reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RPAREN          reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    EQUAL           reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_THAN       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_THAN    reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AS              reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    IN              reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELSE            reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELIF            reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AND             reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)


state 287

    (160) vector_decl -> expression OR identifier IN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 312
    identifier                     shift and go to state 40
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 288

    (161) vector_decl -> expression SINCETHAT identifier IN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 313
    identifier                     shift and go to state 40
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 289

    (166) build_in_functions -> LOG LPAREN argument COMMA argument . RPAREN
    RPAREN          shift and go to state 314


state 290

    (134) type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .
    ESPACEDCONCAT   reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    CONCAT          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LBRACKET        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MODULE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    DIVIDE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MULTIPLY        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ASTERPOWER      reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    POWER           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MINUS           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    PLUS            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    SEMICOLON       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    $end            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RPAREN          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    OR              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    SINCETHAT       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    COMMA           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACKET        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    NOT_EQUAL       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    EQUAL           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_EQUAL      reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_EQUAL   reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_THAN       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_THAN    reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    AS              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    IN              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ELSE            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ELIF            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    AND             reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)


state 291

    (163) build_in_range -> RANGE LPAREN argument COMMA argument . RPAREN
    RPAREN          shift and go to state 315


state 292

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)


state 293

    (155) virtual_method_list -> virtual_method SEMICOLON virtual_method_list .
    RBRACE          reduce using rule 155 (virtual_method_list -> virtual_method SEMICOLON virtual_method_list .)


state 294

    (157) virtual_method -> IDENTIFIER LPAREN RPAREN . type_anotation
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 69

    type_anotation                 shift and go to state 316

state 295

    (158) virtual_method -> IDENTIFIER parameters type_anotation .
    SEMICOLON       reduce using rule 158 (virtual_method -> IDENTIFIER parameters type_anotation .)


state 296

    (70) function_inline_declaration -> type_anotation RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    TYPE            reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LET             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    STRING          reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FOR             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    IF              reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    WHILE           reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    RAND            reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LOG             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    EXP             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    COS             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    SIN             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    SQRT            reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FALSE           reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    TRUE            reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    NEW             reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    PRINT           reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    RANGE           reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    $end            reduce using rule 70 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)


state 297

    (107) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)


state 298

    (116) decl_list -> decl SEMICOLON decl_list .
    RBRACE          reduce using rule 116 (decl_list -> decl SEMICOLON decl_list .)


state 299

    (122) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation function_full_declaration
    (123) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN expression
    (127) method_declaration -> IDENTIFIER LPAREN RPAREN . function_full_declaration
    (128) method_declaration -> IDENTIFIER LPAREN RPAREN . RETURN expression
    (131) function_call -> IDENTIFIER LPAREN RPAREN .
    (28) type_anotation -> . COLON BOOLEAN_TYPE
    (29) type_anotation -> . COLON NUMBER_TYPE
    (30) type_anotation -> . COLON IDENTIFIER
    (69) function_full_declaration -> . scope
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 319
    LBRACKET        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           shift and go to state 69
    LBRACE          shift and go to state 26

    type_anotation                 shift and go to state 317
    function_full_declaration      shift and go to state 318
    scope                          shift and go to state 135

state 300

    (132) function_call -> IDENTIFIER LPAREN arguments_list . RPAREN
    (111) parameters -> LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 320


state 301

    (125) method_declaration -> IDENTIFIER parameters type_anotation . function_full_declaration
    (126) method_declaration -> IDENTIFIER parameters type_anotation . RETURN expression
    (69) function_full_declaration -> . scope
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 322
    LBRACE          shift and go to state 26

    function_full_declaration      shift and go to state 321
    scope                          shift and go to state 135

state 302

    (129) method_declaration -> IDENTIFIER parameters function_full_declaration .
    SEMICOLON       reduce using rule 129 (method_declaration -> IDENTIFIER parameters function_full_declaration .)


state 303

    (130) method_declaration -> IDENTIFIER parameters RETURN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 323
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 304

    (120) atribute_declaration -> identifier ASSIGN expression . type_downcast
    (121) atribute_declaration -> identifier ASSIGN expression .
    (136) type_downcast -> . AS identifier
    SEMICOLON       reduce using rule 121 (atribute_declaration -> identifier ASSIGN expression .)
    AS              shift and go to state 269

    type_downcast                  shift and go to state 324

state 305

    (17) var_decl_expr -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    OR              reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    SINCETHAT       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RBRACKET        reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RPAREN          reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    NOT_EQUAL       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    EQUAL           reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_EQUAL      reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_EQUAL   reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_THAN       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_THAN    reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELSE            reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELIF            reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AND             reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)


state 306

    (136) type_downcast -> AS identifier .
    COMMA           reduce using rule 136 (type_downcast -> AS identifier .)
    IN              reduce using rule 136 (type_downcast -> AS identifier .)
    SEMICOLON       reduce using rule 136 (type_downcast -> AS identifier .)


state 307

    (86) for_loop -> FOR LPAREN identifier IN expression RPAREN . expression
    (87) for_loop -> FOR LPAREN identifier IN expression RPAREN . scope
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    identifier                     shift and go to state 40
    expression                     shift and go to state 325
    scope                          shift and go to state 326
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    fully_typed_param              shift and go to state 62

state 308

    (75) full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .
    SEMICOLON       reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    $end            reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    OR              reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    SINCETHAT       reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    COMMA           reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    RBRACKET        reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    RPAREN          reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    NOT_EQUAL       reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    EQUAL           reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    LESS_EQUAL      reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    GREATER_EQUAL   reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    LESS_THAN       reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    GREATER_THAN    reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    AS              reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    IN              reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    ELSE            reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    ELIF            reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    AND             reduce using rule 75 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)


state 309

    (76) else_elif_statement -> ELSE . full_else
    (77) else_elif_statement -> ELSE . inline_else
    (81) full_else -> . scope
    (80) inline_else -> . expression
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    full_else                      shift and go to state 327
    inline_else                    shift and go to state 328
    scope                          shift and go to state 329
    expression                     shift and go to state 330
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 310

    (78) else_elif_statement -> ELIF . full_conditional
    (79) else_elif_statement -> ELIF . inline_conditional
    (75) full_conditional -> . LPAREN conditional_expression RPAREN scope else_elif_statement
    (74) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 96

    full_conditional               shift and go to state 331
    inline_conditional             shift and go to state 332

state 311

    (74) inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .
    SEMICOLON       reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    $end            reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    OR              reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    SINCETHAT       reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    COMMA           reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RBRACKET        reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RPAREN          reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    NOT_EQUAL       reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    EQUAL           reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_EQUAL      reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_EQUAL   reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_THAN       reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_THAN    reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AS              reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    IN              reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELSE            reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELIF            reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AND             reduce using rule 74 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)


state 312

    (160) vector_decl -> expression OR identifier IN expression .
    RBRACKET        reduce using rule 160 (vector_decl -> expression OR identifier IN expression .)


state 313

    (161) vector_decl -> expression SINCETHAT identifier IN expression .
    RBRACKET        reduce using rule 161 (vector_decl -> expression SINCETHAT identifier IN expression .)


state 314

    (166) build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .
    ESPACEDCONCAT   reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    CONCAT          reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LBRACKET        reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MODULE          reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    DIVIDE          reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MULTIPLY        reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ASTERPOWER      reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    POWER           reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MINUS           reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    PLUS            reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    SEMICOLON       reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    $end            reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RPAREN          reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ASSIGN          reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    OR              reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    SINCETHAT       reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    COMMA           reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RBRACKET        reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    NOT_EQUAL       reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    EQUAL           reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LESS_EQUAL      reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    GREATER_EQUAL   reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LESS_THAN       reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    GREATER_THAN    reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    AS              reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    IN              reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ELSE            reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ELIF            reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    AND             reduce using rule 166 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)


state 315

    (163) build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .
    ESPACEDCONCAT   reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    CONCAT          reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LBRACKET        reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MODULE          reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    DIVIDE          reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MULTIPLY        reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ASTERPOWER      reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    POWER           reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MINUS           reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    PLUS            reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    SEMICOLON       reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    $end            reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RPAREN          reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ASSIGN          reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    OR              reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    SINCETHAT       reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    COMMA           reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RBRACKET        reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    NOT_EQUAL       reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    EQUAL           reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LESS_EQUAL      reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    GREATER_EQUAL   reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LESS_THAN       reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    GREATER_THAN    reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    AS              reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    IN              reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ELSE            reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ELIF            reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    AND             reduce using rule 163 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)


state 316

    (157) virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .
    SEMICOLON       reduce using rule 157 (virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .)


state 317

    (122) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . function_full_declaration
    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN expression
    (69) function_full_declaration -> . scope
    (31) scope -> . LBRACE RBRACE
    (32) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 334
    LBRACE          shift and go to state 26

    function_full_declaration      shift and go to state 333
    scope                          shift and go to state 135

state 318

    (127) method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .
    SEMICOLON       reduce using rule 127 (method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .)


state 319

    (128) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 335
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 320

    (132) function_call -> IDENTIFIER LPAREN arguments_list RPAREN .
    (111) parameters -> LPAREN arguments_list RPAREN .
    LBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RETURN          reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)
    COLON           reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)
    LBRACE          reduce using rule 111 (parameters -> LPAREN arguments_list RPAREN .)


state 321

    (125) method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 125 (method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration .)


state 322

    (126) method_declaration -> IDENTIFIER parameters type_anotation RETURN . expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60
    LPAREN          shift and go to state 72

    expression                     shift and go to state 336
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 323

    (130) method_declaration -> IDENTIFIER parameters RETURN expression .
    SEMICOLON       reduce using rule 130 (method_declaration -> IDENTIFIER parameters RETURN expression .)


state 324

    (120) atribute_declaration -> identifier ASSIGN expression type_downcast .
    SEMICOLON       reduce using rule 120 (atribute_declaration -> identifier ASSIGN expression type_downcast .)


state 325

    (86) for_loop -> FOR LPAREN identifier IN expression RPAREN expression .
    SEMICOLON       reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    $end            reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    OR              reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    SINCETHAT       reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    COMMA           reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RBRACKET        reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RPAREN          reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    EQUAL           reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_THAN       reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AS              reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    IN              reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELSE            reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELIF            reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AND             reduce using rule 86 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)


state 326

    (87) for_loop -> FOR LPAREN identifier IN expression RPAREN scope .
    SEMICOLON       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    $end            reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    OR              reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    SINCETHAT       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    COMMA           reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RBRACKET        reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RPAREN          reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    EQUAL           reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_THAN       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AS              reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    IN              reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELSE            reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELIF            reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AND             reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)


state 327

    (76) else_elif_statement -> ELSE full_else .
    SEMICOLON       reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    $end            reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    OR              reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    SINCETHAT       reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    COMMA           reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    RBRACKET        reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    RPAREN          reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    NOT_EQUAL       reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    EQUAL           reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    LESS_EQUAL      reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    GREATER_EQUAL   reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    LESS_THAN       reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    GREATER_THAN    reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    AS              reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    IN              reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    ELSE            reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    ELIF            reduce using rule 76 (else_elif_statement -> ELSE full_else .)
    AND             reduce using rule 76 (else_elif_statement -> ELSE full_else .)


state 328

    (77) else_elif_statement -> ELSE inline_else .
    SEMICOLON       reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    $end            reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    OR              reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    SINCETHAT       reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    COMMA           reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    RBRACKET        reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    RPAREN          reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    NOT_EQUAL       reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    EQUAL           reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    LESS_EQUAL      reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    GREATER_EQUAL   reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    LESS_THAN       reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    GREATER_THAN    reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    AS              reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    IN              reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    ELSE            reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    ELIF            reduce using rule 77 (else_elif_statement -> ELSE inline_else .)
    AND             reduce using rule 77 (else_elif_statement -> ELSE inline_else .)


state 329

    (81) full_else -> scope .
    SEMICOLON       reduce using rule 81 (full_else -> scope .)
    $end            reduce using rule 81 (full_else -> scope .)
    OR              reduce using rule 81 (full_else -> scope .)
    SINCETHAT       reduce using rule 81 (full_else -> scope .)
    COMMA           reduce using rule 81 (full_else -> scope .)
    RBRACKET        reduce using rule 81 (full_else -> scope .)
    RPAREN          reduce using rule 81 (full_else -> scope .)
    NOT_EQUAL       reduce using rule 81 (full_else -> scope .)
    EQUAL           reduce using rule 81 (full_else -> scope .)
    LESS_EQUAL      reduce using rule 81 (full_else -> scope .)
    GREATER_EQUAL   reduce using rule 81 (full_else -> scope .)
    LESS_THAN       reduce using rule 81 (full_else -> scope .)
    GREATER_THAN    reduce using rule 81 (full_else -> scope .)
    AS              reduce using rule 81 (full_else -> scope .)
    IN              reduce using rule 81 (full_else -> scope .)
    ELSE            reduce using rule 81 (full_else -> scope .)
    ELIF            reduce using rule 81 (full_else -> scope .)
    AND             reduce using rule 81 (full_else -> scope .)


state 330

    (80) inline_else -> expression .
    SEMICOLON       reduce using rule 80 (inline_else -> expression .)
    $end            reduce using rule 80 (inline_else -> expression .)
    OR              reduce using rule 80 (inline_else -> expression .)
    SINCETHAT       reduce using rule 80 (inline_else -> expression .)
    COMMA           reduce using rule 80 (inline_else -> expression .)
    RBRACKET        reduce using rule 80 (inline_else -> expression .)
    RPAREN          reduce using rule 80 (inline_else -> expression .)
    NOT_EQUAL       reduce using rule 80 (inline_else -> expression .)
    EQUAL           reduce using rule 80 (inline_else -> expression .)
    LESS_EQUAL      reduce using rule 80 (inline_else -> expression .)
    GREATER_EQUAL   reduce using rule 80 (inline_else -> expression .)
    LESS_THAN       reduce using rule 80 (inline_else -> expression .)
    GREATER_THAN    reduce using rule 80 (inline_else -> expression .)
    AS              reduce using rule 80 (inline_else -> expression .)
    IN              reduce using rule 80 (inline_else -> expression .)
    ELSE            reduce using rule 80 (inline_else -> expression .)
    ELIF            reduce using rule 80 (inline_else -> expression .)
    AND             reduce using rule 80 (inline_else -> expression .)


state 331

    (78) else_elif_statement -> ELIF full_conditional .
    SEMICOLON       reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    $end            reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    OR              reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    SINCETHAT       reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    COMMA           reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    RBRACKET        reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    RPAREN          reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    NOT_EQUAL       reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    EQUAL           reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    LESS_EQUAL      reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    GREATER_EQUAL   reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    LESS_THAN       reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    GREATER_THAN    reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    AS              reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    IN              reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    ELSE            reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    ELIF            reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)
    AND             reduce using rule 78 (else_elif_statement -> ELIF full_conditional .)


state 332

    (79) else_elif_statement -> ELIF inline_conditional .
    SEMICOLON       reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    $end            reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    OR              reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    SINCETHAT       reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    COMMA           reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    RBRACKET        reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    RPAREN          reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    NOT_EQUAL       reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    EQUAL           reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    LESS_EQUAL      reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_EQUAL   reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    LESS_THAN       reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_THAN    reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    AS              reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    IN              reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    ELSE            reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    ELIF            reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)
    AND             reduce using rule 79 (else_elif_statement -> ELIF inline_conditional .)


state 333

    (122) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 122 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)


state 334

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . expression
    (88) conditional_expression -> . condition
    (89) conditional_expression -> . NOT condition
    (90) conditional_expression -> . condition OR conditional_expression
    (91) conditional_expression -> . condition AND conditional_expression
    (33) expression -> . var_dec
    (34) expression -> . var_asign
    (35) expression -> . atom ESPACEDCONCAT expression
    (36) expression -> . atom CONCAT expression
    (37) expression -> . aritmetic_operation
    (92) condition -> . LPAREN conditional_expression RPAREN
    (93) condition -> . IDENTIFIER type_conforming
    (94) condition -> . comparation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (60) var_asign -> . var_use ASSIGN expression
    (61) var_asign -> . var_use DEST_ASSIGN expression
    (50) atom -> . build_in_consts
    (51) atom -> . build_in_functions
    (52) atom -> . boolean_value
    (53) atom -> . type_instanciation
    (54) atom -> . var_method
    (55) atom -> . vector
    (56) atom -> . var_use
    (57) atom -> . function_call
    (58) atom -> . STRING
    (59) atom -> . NUMBER
    (38) aritmetic_operation -> . term
    (39) aritmetic_operation -> . term MINUS aritmetic_operation
    (40) aritmetic_operation -> . term PLUS aritmetic_operation
    (95) comparation -> . expression NOT_EQUAL expression
    (96) comparation -> . expression EQUAL expression
    (97) comparation -> . expression LESS_EQUAL expression
    (98) comparation -> . expression GREATER_EQUAL expression
    (99) comparation -> . expression LESS_THAN expression
    (100) comparation -> . expression GREATER_THAN expression
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (173) build_in_consts -> . E_CONST
    (174) build_in_consts -> . PI_CONST
    (165) build_in_functions -> . RAND LPAREN RPAREN
    (166) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (167) build_in_functions -> . EXP LPAREN argument RPAREN
    (168) build_in_functions -> . COS LPAREN argument RPAREN
    (169) build_in_functions -> . SIN LPAREN argument RPAREN
    (170) build_in_functions -> . SQRT LPAREN argument RPAREN
    (171) build_in_functions -> . build_in_print
    (172) build_in_functions -> . build_in_range
    (101) boolean_value -> . FALSE
    (102) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (159) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (41) term -> . factor
    (42) term -> . factor MODULE term
    (43) term -> . factor DIVIDE term
    (44) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (164) build_in_print -> . PRINT LPAREN argument RPAREN
    (163) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (45) factor -> . base_exponent
    (46) factor -> . factor ASTERPOWER base_exponent
    (47) factor -> . factor POWER base_exponent
    (48) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (49) base_exponent -> . identifier
    (25) identifier -> . fully_typed_param
    (26) identifier -> . atom
    (27) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 45
    PI_CONST        shift and go to state 46
    RAND            shift and go to state 47
    LOG             shift and go to state 48
    EXP             shift and go to state 49
    COS             shift and go to state 50
    SIN             shift and go to state 51
    SQRT            shift and go to state 52
    FALSE           shift and go to state 55
    TRUE            shift and go to state 56
    NEW             shift and go to state 57
    LBRACKET        shift and go to state 44
    PRINT           shift and go to state 59
    RANGE           shift and go to state 60

    conditional_expression         shift and go to state 337
    expression                     shift and go to state 338
    condition                      shift and go to state 160
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    comparation                    shift and go to state 163
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 43
    build_in_print                 shift and go to state 53
    build_in_range                 shift and go to state 54
    factor                         shift and go to state 58
    base_exponent                  shift and go to state 61
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 62

state 335

    (128) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .
    SEMICOLON       reduce using rule 128 (method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .)


state 336

    (126) method_declaration -> IDENTIFIER parameters type_anotation RETURN expression .
    SEMICOLON       reduce using rule 126 (method_declaration -> IDENTIFIER parameters type_anotation RETURN expression .)


state 337

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .
    SEMICOLON       reduce using rule 123 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .)


state 338

    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .
    (95) comparation -> expression . NOT_EQUAL expression
    (96) comparation -> expression . EQUAL expression
    (97) comparation -> expression . LESS_EQUAL expression
    (98) comparation -> expression . GREATER_EQUAL expression
    (99) comparation -> expression . LESS_THAN expression
    (100) comparation -> expression . GREATER_THAN expression
    SEMICOLON       reduce using rule 124 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .)
    NOT_EQUAL       shift and go to state 224
    EQUAL           shift and go to state 225
    LESS_EQUAL      shift and go to state 226
    GREATER_EQUAL   shift and go to state 227
    LESS_THAN       shift and go to state 228
    GREATER_THAN    shift and go to state 229
