Grammar:

Rule 0     S' -> program
Rule 1     program -> program_decl_list
Rule 2     program_decl_list -> empty
Rule 3     program_decl_list -> program_level_decl program_decl_list
Rule 4     program_decl_list -> inst_list
Rule 5     program_level_decl -> protocol_declaration
Rule 6     program_level_decl -> function_declaration
Rule 7     program_level_decl -> type_declaration
Rule 8     inst_list -> inst SEMICOLON inst_list
Rule 9     inst_list -> inst SEMICOLON
Rule 10    inst_list -> inst
Rule 11    inst -> LPAREN var_dec RPAREN
Rule 12    inst -> expression
Rule 13    inst -> flux_control
Rule 14    inst -> scope_list
Rule 15    var_dec -> LET var_init_list IN var_decl_expr
Rule 16    var_decl_expr -> LPAREN var_dec RPAREN
Rule 17    var_decl_expr -> expression
Rule 18    var_decl_expr -> flux_control
Rule 19    var_decl_expr -> scope
Rule 20    var_init_list -> var_init COMMA var_init_list
Rule 21    var_init_list -> var_init
Rule 22    var_init -> identifier ASSIGN inst type_downcast
Rule 23    var_init -> identifier ASSIGN inst
Rule 24    identifier -> fully_typed_param
Rule 25    identifier -> atom
Rule 26    fully_typed_param -> IDENTIFIER type_anotation
Rule 27    type_anotation -> COLON BOOLEAN_TYPE
Rule 28    type_anotation -> COLON NUMBER_TYPE
Rule 29    type_anotation -> COLON IDENTIFIER
Rule 30    scope_list -> scope scope_list
Rule 31    scope_list -> scope
Rule 32    scope -> LBRACE RBRACE
Rule 33    scope -> LBRACE inst_list RBRACE
Rule 34    expression -> var_dec
Rule 35    expression -> var_asign
Rule 36    expression -> atom ESPACEDCONCAT expression  [precedence=left, level=4]
Rule 37    expression -> atom CONCAT expression  [precedence=left, level=4]
Rule 38    expression -> aritmetic_operation
Rule 39    aritmetic_operation -> term
Rule 40    aritmetic_operation -> term MINUS aritmetic_operation  [precedence=left, level=4]
Rule 41    aritmetic_operation -> term PLUS aritmetic_operation  [precedence=left, level=4]
Rule 42    term -> factor
Rule 43    term -> factor MODULE term  [precedence=left, level=5]
Rule 44    term -> factor DIVIDE term  [precedence=left, level=5]
Rule 45    term -> factor MULTIPLY term  [precedence=left, level=5]
Rule 46    factor -> base_exponent
Rule 47    factor -> factor ASTERPOWER base_exponent  [precedence=right, level=6]
Rule 48    factor -> factor POWER base_exponent  [precedence=right, level=6]
Rule 49    base_exponent -> LPAREN aritmetic_operation RPAREN
Rule 50    base_exponent -> identifier
Rule 51    atom -> NUMBER
Rule 52    atom -> STRING
Rule 53    atom -> build_in_consts
Rule 54    atom -> build_in_functions
Rule 55    atom -> boolean_value
Rule 56    atom -> type_instanciation
Rule 57    atom -> var_method
Rule 58    atom -> vector
Rule 59    atom -> var_use
Rule 60    atom -> function_call
Rule 61    var_asign -> var_use ASSIGN expression
Rule 62    var_asign -> var_use DEST_ASSIGN expression
Rule 63    function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration
Rule 64    function_declaration -> func_decl_id parameters function_inline_declaration
Rule 65    function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
Rule 66    function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON
Rule 67    function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration
Rule 68    function_declaration -> func_decl_id parameters function_full_declaration
Rule 69    func_decl_id -> FUNCTION IDENTIFIER
Rule 70    function_full_declaration -> scope
Rule 71    function_inline_declaration -> type_anotation RETURN inst SEMICOLON
Rule 72    function_inline_declaration -> RETURN inst SEMICOLON
Rule 73    conditional -> IF full_conditional
Rule 74    conditional -> IF inline_conditional
Rule 75    inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement
Rule 76    full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement
Rule 77    else_elif_statement -> ELSE full_else
Rule 78    else_elif_statement -> ELSE inline_else
Rule 79    else_elif_statement -> ELIF full_conditional
Rule 80    else_elif_statement -> ELIF inline_conditional
Rule 81    inline_else -> expression
Rule 82    full_else -> scope
Rule 83    while_loop -> WHILE LPAREN expression RPAREN expression
Rule 84    while_loop -> WHILE LPAREN expression RPAREN scope
Rule 85    while_loop -> WHILE LPAREN conditional_expression RPAREN expression
Rule 86    while_loop -> WHILE LPAREN conditional_expression RPAREN scope
Rule 87    for_loop -> FOR LPAREN identifier IN expression RPAREN expression
Rule 88    for_loop -> FOR LPAREN identifier IN expression RPAREN scope
Rule 89    conditional_expression -> condition
Rule 90    conditional_expression -> NOT condition  [precedence=right, level=7]
Rule 91    conditional_expression -> condition OR conditional_expression  [precedence=left, level=1]
Rule 92    conditional_expression -> condition AND conditional_expression  [precedence=left, level=1]
Rule 93    condition -> LPAREN conditional_expression RPAREN
Rule 94    condition -> IDENTIFIER type_conforming
Rule 95    condition -> comparation
Rule 96    comparation -> expression NOT_EQUAL expression  [precedence=left, level=2]
Rule 97    comparation -> expression EQUAL expression  [precedence=left, level=2]
Rule 98    comparation -> expression LESS_EQUAL expression  [precedence=left, level=3]
Rule 99    comparation -> expression GREATER_EQUAL expression  [precedence=left, level=3]
Rule 100   comparation -> expression LESS_THAN expression  [precedence=left, level=3]
Rule 101   comparation -> expression GREATER_THAN expression  [precedence=left, level=3]
Rule 102   boolean_value -> FALSE
Rule 103   boolean_value -> TRUE
Rule 104   type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON
Rule 105   type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON
Rule 106   type_declaration -> TYPE IDENTIFIER inherits_type decl_body
Rule 107   type_declaration -> TYPE IDENTIFIER decl_body
Rule 108   type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
Rule 109   type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON
Rule 110   type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body
Rule 111   type_declaration -> TYPE IDENTIFIER parameters decl_body
Rule 112   parameters -> LPAREN arguments_list RPAREN
Rule 113   inherits_type -> INHERITS IDENTIFIER parameters
Rule 114   inherits_type -> INHERITS IDENTIFIER
Rule 115   decl_body -> LBRACE decl_list RBRACE
Rule 116   decl_body -> LBRACE RBRACE
Rule 117   decl_list -> decl SEMICOLON decl_list
Rule 118   decl_list -> decl SEMICOLON
Rule 119   decl -> method_declaration
Rule 120   decl -> atribute_declaration
Rule 121   atribute_declaration -> identifier ASSIGN expression type_downcast
Rule 122   atribute_declaration -> identifier ASSIGN expression
Rule 123   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
Rule 124   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
Rule 125   method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
Rule 126   method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration
Rule 127   method_declaration -> IDENTIFIER parameters type_anotation RETURN expression
Rule 128   method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration
Rule 129   method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression
Rule 130   method_declaration -> IDENTIFIER parameters function_full_declaration
Rule 131   method_declaration -> IDENTIFIER parameters RETURN expression
Rule 132   function_call -> IDENTIFIER LPAREN RPAREN
Rule 133   function_call -> IDENTIFIER LPAREN arguments_list RPAREN
Rule 134   type_instanciation -> NEW IDENTIFIER LPAREN RPAREN
Rule 135   type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN
Rule 136   type_conforming -> IS identifier
Rule 137   type_downcast -> AS identifier
Rule 138   arguments_list -> argument COMMA arguments_list
Rule 139   arguments_list -> argument
Rule 140   argument -> conditional
Rule 141   argument -> expression
Rule 142   var_use -> var_attr
Rule 143   var_use -> atom LBRACKET expression RBRACKET
Rule 144   var_use -> IDENTIFIER
Rule 145   var_attr -> IDENTIFIER DOT var_attr
Rule 146   var_attr -> IDENTIFIER DOT IDENTIFIER
Rule 147   var_method -> IDENTIFIER DOT function_call
Rule 148   flux_control -> for_loop
Rule 149   flux_control -> conditional
Rule 150   flux_control -> while_loop
Rule 151   protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
Rule 152   protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
Rule 153   protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON
Rule 154   protocol_declaration -> PROTOCOL IDENTIFIER protocol_body
Rule 155   protocol_body -> LBRACE virtual_method_list RBRACE
Rule 156   virtual_method_list -> virtual_method SEMICOLON virtual_method_list
Rule 157   virtual_method_list -> virtual_method SEMICOLON
Rule 158   virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation
Rule 159   virtual_method -> IDENTIFIER parameters type_anotation
Rule 160   vector -> LBRACKET vector_decl RBRACKET
Rule 161   vector_decl -> expression OR identifier IN expression
Rule 162   vector_decl -> expression SINCETHAT identifier IN expression
Rule 163   vector_decl -> arguments_list
Rule 164   build_in_range -> RANGE LPAREN argument COMMA argument RPAREN
Rule 165   build_in_print -> PRINT LPAREN argument RPAREN
Rule 166   build_in_functions -> RAND LPAREN RPAREN
Rule 167   build_in_functions -> LOG LPAREN argument COMMA argument RPAREN
Rule 168   build_in_functions -> EXP LPAREN argument RPAREN
Rule 169   build_in_functions -> COS LPAREN argument RPAREN
Rule 170   build_in_functions -> SIN LPAREN argument RPAREN
Rule 171   build_in_functions -> SQRT LPAREN argument RPAREN
Rule 172   build_in_functions -> build_in_print
Rule 173   build_in_functions -> build_in_range
Rule 174   build_in_consts -> E_CONST
Rule 175   build_in_consts -> PI_CONST
Rule 176   empty -> <empty>

Terminals, with rules where they appear:

AND                  : 92
AS                   : 137
ASSIGN               : 22 23 61 121 122
ASTERPOWER           : 47
BOOLEAN_TYPE         : 27
COLON                : 27 28 29
COMMA                : 20 138 164 167
CONCAT               : 37
COS                  : 169
DEST_ASSIGN          : 62
DIVIDE               : 44
DOT                  : 145 146 147
ELIF                 : 79 80
ELSE                 : 77 78
EQUAL                : 97
ESPACEDCONCAT        : 36
EXP                  : 168
EXTENDS              : 151 152
E_CONST              : 174
FALSE                : 102
FOR                  : 87 88
FUNCTION             : 69
GREATER_EQUAL        : 99
GREATER_THAN         : 101
IDENTIFIER           : 26 29 69 94 104 105 106 107 108 109 110 111 113 114 123 124 125 126 127 128 129 130 131 132 133 134 135 144 145 146 146 147 151 151 152 152 153 154 158 159
IF                   : 73 74
IN                   : 15 87 88 161 162
INHERITS             : 113 114
IS                   : 136
LBRACE               : 32 33 115 116 155
LBRACKET             : 143 160
LESS_EQUAL           : 98
LESS_THAN            : 100
LET                  : 15
LOG                  : 167
LPAREN               : 11 16 49 63 65 67 75 76 83 84 85 86 87 88 93 112 123 124 125 128 129 132 133 134 135 158 164 165 166 167 168 169 170 171
MINUS                : 40
MODULE               : 43
MULTIPLY             : 45
NEW                  : 134 135
NOT                  : 90
NOT_EQUAL            : 96
NUMBER               : 51
NUMBER_TYPE          : 28
OR                   : 91 161
PI_CONST             : 175
PLUS                 : 41
POWER                : 48
PRINT                : 165
PROTOCOL             : 151 152 153 154
RAND                 : 166
RANGE                : 164
RBRACE               : 32 33 115 116 155
RBRACKET             : 143 160
RETURN               : 71 72 124 125 127 129 131
RPAREN               : 11 16 49 63 65 67 75 76 83 84 85 86 87 88 93 112 123 124 125 128 129 132 133 134 135 158 164 165 166 167 168 169 170 171
SEMICOLON            : 8 9 65 66 71 72 104 105 108 109 117 118 151 153 156 157
SIN                  : 170
SINCETHAT            : 162
SQRT                 : 171
STRING               : 52
TRUE                 : 103
TYPE                 : 104 105 106 107 108 109 110 111
WHILE                : 83 84 85 86
error                : 

Nonterminals, with rules where they appear:

argument             : 138 139 164 164 165 167 167 168 169 170 171
arguments_list       : 112 133 135 138 163
aritmetic_operation  : 38 40 41 49
atom                 : 25 36 37 143
atribute_declaration : 120
base_exponent        : 46 47 48
boolean_value        : 55
build_in_consts      : 53
build_in_functions   : 54
build_in_print       : 172
build_in_range       : 173
comparation          : 95
condition            : 89 90 91 92
conditional          : 140 149
conditional_expression : 75 76 85 86 91 92 93 124
decl                 : 117 118
decl_body            : 104 105 106 107 108 109 110 111
decl_list            : 115 117
else_elif_statement  : 75 76
empty                : 2
expression           : 12 17 36 37 61 62 75 81 83 83 84 85 87 87 88 96 96 97 97 98 98 99 99 100 100 101 101 121 122 125 127 129 131 141 143 161 161 162 162
factor               : 42 43 44 45 47 48
flux_control         : 13 18
for_loop             : 148
full_conditional     : 73 79
full_else            : 77
fully_typed_param    : 24
func_decl_id         : 63 64 65 66 67 68
function_call        : 60 147
function_declaration : 6
function_full_declaration : 65 66 67 68 123 126 128 130
function_inline_declaration : 63 64
identifier           : 22 23 50 87 88 121 122 136 137 161 162
inherits_type        : 104 106 108 110
inline_conditional   : 74 80
inline_else          : 78
inst                 : 8 9 10 22 23 71 72
inst_list            : 4 8 33
method_declaration   : 119
parameters           : 64 66 68 108 109 110 111 113 126 127 130 131 159
program              : 0
program_decl_list    : 1 3
program_level_decl   : 3
protocol_body        : 151 152 153 154
protocol_declaration : 5
scope                : 19 30 31 70 82 84 86 88
scope_list           : 14 30 76
term                 : 39 40 41 43 44 45
type_anotation       : 26 71 123 124 125 126 127 158 159
type_conforming      : 94
type_declaration     : 7
type_downcast        : 22 121
type_instanciation   : 56
var_asign            : 35
var_attr             : 142 145
var_dec              : 11 16 34
var_decl_expr        : 15
var_init             : 20 21
var_init_list        : 15 20
var_method           : 57
var_use              : 59 61 62
vector               : 58
vector_decl          : 160
virtual_method       : 156 157
virtual_method_list  : 155 156
while_loop           : 150


state 0

    (0) S' -> . program
    (1) program -> . program_decl_list
    (2) program_decl_list -> . empty
    (3) program_decl_list -> . program_level_decl program_decl_list
    (4) program_decl_list -> . inst_list
    (176) empty -> .
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (151) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (152) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (153) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (154) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (63) function_declaration -> . func_decl_id LPAREN RPAREN function_inline_declaration
    (64) function_declaration -> . func_decl_id parameters function_inline_declaration
    (65) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
    (66) function_declaration -> . func_decl_id parameters function_full_declaration SEMICOLON
    (67) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration
    (68) function_declaration -> . func_decl_id parameters function_full_declaration
    (104) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body SEMICOLON
    (105) type_declaration -> . TYPE IDENTIFIER decl_body SEMICOLON
    (106) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body
    (107) type_declaration -> . TYPE IDENTIFIER decl_body
    (108) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (109) type_declaration -> . TYPE IDENTIFIER parameters decl_body SEMICOLON
    (110) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body
    (111) type_declaration -> . TYPE IDENTIFIER parameters decl_body
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (69) func_decl_id -> . FUNCTION IDENTIFIER
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 176 (empty -> .)
    PROTOCOL        shift and go to state 10
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    FUNCTION        shift and go to state 19
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    program                        shift and go to state 1
    program_decl_list              shift and go to state 2
    empty                          shift and go to state 3
    program_level_decl             shift and go to state 4
    inst_list                      shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    func_decl_id                   shift and go to state 12
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 1

    (0) S' -> program .


state 2

    (1) program -> program_decl_list .
    $end            reduce using rule 1 (program -> program_decl_list .)


state 3

    (2) program_decl_list -> empty .
    $end            reduce using rule 2 (program_decl_list -> empty .)


state 4

    (3) program_decl_list -> program_level_decl . program_decl_list
    (2) program_decl_list -> . empty
    (3) program_decl_list -> . program_level_decl program_decl_list
    (4) program_decl_list -> . inst_list
    (176) empty -> .
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (151) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (152) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (153) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (154) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (63) function_declaration -> . func_decl_id LPAREN RPAREN function_inline_declaration
    (64) function_declaration -> . func_decl_id parameters function_inline_declaration
    (65) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
    (66) function_declaration -> . func_decl_id parameters function_full_declaration SEMICOLON
    (67) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration
    (68) function_declaration -> . func_decl_id parameters function_full_declaration
    (104) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body SEMICOLON
    (105) type_declaration -> . TYPE IDENTIFIER decl_body SEMICOLON
    (106) type_declaration -> . TYPE IDENTIFIER inherits_type decl_body
    (107) type_declaration -> . TYPE IDENTIFIER decl_body
    (108) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (109) type_declaration -> . TYPE IDENTIFIER parameters decl_body SEMICOLON
    (110) type_declaration -> . TYPE IDENTIFIER parameters inherits_type decl_body
    (111) type_declaration -> . TYPE IDENTIFIER parameters decl_body
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (69) func_decl_id -> . FUNCTION IDENTIFIER
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 176 (empty -> .)
    PROTOCOL        shift and go to state 10
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    FUNCTION        shift and go to state 19
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    program_level_decl             shift and go to state 4
    program_decl_list              shift and go to state 64
    empty                          shift and go to state 3
    inst_list                      shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    func_decl_id                   shift and go to state 12
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 5

    (4) program_decl_list -> inst_list .
    $end            reduce using rule 4 (program_decl_list -> inst_list .)


state 6

    (5) program_level_decl -> protocol_declaration .
    PROTOCOL        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TYPE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LPAREN          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FUNCTION        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LET             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NUMBER          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    STRING          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FOR             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IF              reduce using rule 5 (program_level_decl -> protocol_declaration .)
    WHILE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACE          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IDENTIFIER      reduce using rule 5 (program_level_decl -> protocol_declaration .)
    E_CONST         reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PI_CONST        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RAND            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LOG             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    EXP             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    COS             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SIN             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SQRT            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FALSE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TRUE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NEW             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACKET        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PRINT           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RANGE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    $end            reduce using rule 5 (program_level_decl -> protocol_declaration .)


state 7

    (6) program_level_decl -> function_declaration .
    PROTOCOL        reduce using rule 6 (program_level_decl -> function_declaration .)
    TYPE            reduce using rule 6 (program_level_decl -> function_declaration .)
    LPAREN          reduce using rule 6 (program_level_decl -> function_declaration .)
    FUNCTION        reduce using rule 6 (program_level_decl -> function_declaration .)
    LET             reduce using rule 6 (program_level_decl -> function_declaration .)
    NUMBER          reduce using rule 6 (program_level_decl -> function_declaration .)
    STRING          reduce using rule 6 (program_level_decl -> function_declaration .)
    FOR             reduce using rule 6 (program_level_decl -> function_declaration .)
    IF              reduce using rule 6 (program_level_decl -> function_declaration .)
    WHILE           reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACE          reduce using rule 6 (program_level_decl -> function_declaration .)
    IDENTIFIER      reduce using rule 6 (program_level_decl -> function_declaration .)
    E_CONST         reduce using rule 6 (program_level_decl -> function_declaration .)
    PI_CONST        reduce using rule 6 (program_level_decl -> function_declaration .)
    RAND            reduce using rule 6 (program_level_decl -> function_declaration .)
    LOG             reduce using rule 6 (program_level_decl -> function_declaration .)
    EXP             reduce using rule 6 (program_level_decl -> function_declaration .)
    COS             reduce using rule 6 (program_level_decl -> function_declaration .)
    SIN             reduce using rule 6 (program_level_decl -> function_declaration .)
    SQRT            reduce using rule 6 (program_level_decl -> function_declaration .)
    FALSE           reduce using rule 6 (program_level_decl -> function_declaration .)
    TRUE            reduce using rule 6 (program_level_decl -> function_declaration .)
    NEW             reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACKET        reduce using rule 6 (program_level_decl -> function_declaration .)
    PRINT           reduce using rule 6 (program_level_decl -> function_declaration .)
    RANGE           reduce using rule 6 (program_level_decl -> function_declaration .)
    $end            reduce using rule 6 (program_level_decl -> function_declaration .)


state 8

    (7) program_level_decl -> type_declaration .
    PROTOCOL        reduce using rule 7 (program_level_decl -> type_declaration .)
    TYPE            reduce using rule 7 (program_level_decl -> type_declaration .)
    LPAREN          reduce using rule 7 (program_level_decl -> type_declaration .)
    FUNCTION        reduce using rule 7 (program_level_decl -> type_declaration .)
    LET             reduce using rule 7 (program_level_decl -> type_declaration .)
    NUMBER          reduce using rule 7 (program_level_decl -> type_declaration .)
    STRING          reduce using rule 7 (program_level_decl -> type_declaration .)
    FOR             reduce using rule 7 (program_level_decl -> type_declaration .)
    IF              reduce using rule 7 (program_level_decl -> type_declaration .)
    WHILE           reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACE          reduce using rule 7 (program_level_decl -> type_declaration .)
    IDENTIFIER      reduce using rule 7 (program_level_decl -> type_declaration .)
    E_CONST         reduce using rule 7 (program_level_decl -> type_declaration .)
    PI_CONST        reduce using rule 7 (program_level_decl -> type_declaration .)
    RAND            reduce using rule 7 (program_level_decl -> type_declaration .)
    LOG             reduce using rule 7 (program_level_decl -> type_declaration .)
    EXP             reduce using rule 7 (program_level_decl -> type_declaration .)
    COS             reduce using rule 7 (program_level_decl -> type_declaration .)
    SIN             reduce using rule 7 (program_level_decl -> type_declaration .)
    SQRT            reduce using rule 7 (program_level_decl -> type_declaration .)
    FALSE           reduce using rule 7 (program_level_decl -> type_declaration .)
    TRUE            reduce using rule 7 (program_level_decl -> type_declaration .)
    NEW             reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACKET        reduce using rule 7 (program_level_decl -> type_declaration .)
    PRINT           reduce using rule 7 (program_level_decl -> type_declaration .)
    RANGE           reduce using rule 7 (program_level_decl -> type_declaration .)
    $end            reduce using rule 7 (program_level_decl -> type_declaration .)


state 9

    (8) inst_list -> inst . SEMICOLON inst_list
    (9) inst_list -> inst . SEMICOLON
    (10) inst_list -> inst .
    SEMICOLON       shift and go to state 65
    $end            reduce using rule 10 (inst_list -> inst .)
    RBRACE          reduce using rule 10 (inst_list -> inst .)


state 10

    (151) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (152) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (153) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body SEMICOLON
    (154) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 66


state 11

    (144) var_use -> IDENTIFIER .
    (147) var_method -> IDENTIFIER . DOT function_call
    (132) function_call -> IDENTIFIER . LPAREN RPAREN
    (133) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 144 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 144 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 144 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 144 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 144 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 144 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 144 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 144 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 144 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 144 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 144 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 144 (var_use -> IDENTIFIER .)
    $end            reduce using rule 144 (var_use -> IDENTIFIER .)
    RBRACE          reduce using rule 144 (var_use -> IDENTIFIER .)
    OR              reduce using rule 144 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 144 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 144 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 144 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 144 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 144 (var_use -> IDENTIFIER .)
    AS              reduce using rule 144 (var_use -> IDENTIFIER .)
    IN              reduce using rule 144 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 144 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 144 (var_use -> IDENTIFIER .)
    AND             reduce using rule 144 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 67
    LPAREN          shift and go to state 68
    COLON           shift and go to state 70

    type_anotation                 shift and go to state 69

state 12

    (63) function_declaration -> func_decl_id . LPAREN RPAREN function_inline_declaration
    (64) function_declaration -> func_decl_id . parameters function_inline_declaration
    (65) function_declaration -> func_decl_id . LPAREN RPAREN function_full_declaration SEMICOLON
    (66) function_declaration -> func_decl_id . parameters function_full_declaration SEMICOLON
    (67) function_declaration -> func_decl_id . LPAREN RPAREN function_full_declaration
    (68) function_declaration -> func_decl_id . parameters function_full_declaration
    (112) parameters -> . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 71

    parameters                     shift and go to state 72

state 13

    (11) inst -> LPAREN . var_dec RPAREN
    (49) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LET             shift and go to state 27
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    var_dec                        shift and go to state 74
    aritmetic_operation            shift and go to state 75
    term                           shift and go to state 38
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 14

    (104) type_declaration -> TYPE . IDENTIFIER inherits_type decl_body SEMICOLON
    (105) type_declaration -> TYPE . IDENTIFIER decl_body SEMICOLON
    (106) type_declaration -> TYPE . IDENTIFIER inherits_type decl_body
    (107) type_declaration -> TYPE . IDENTIFIER decl_body
    (108) type_declaration -> TYPE . IDENTIFIER parameters inherits_type decl_body SEMICOLON
    (109) type_declaration -> TYPE . IDENTIFIER parameters decl_body SEMICOLON
    (110) type_declaration -> TYPE . IDENTIFIER parameters inherits_type decl_body
    (111) type_declaration -> TYPE . IDENTIFIER parameters decl_body
    IDENTIFIER      shift and go to state 79


state 15

    (34) expression -> var_dec .
    SEMICOLON       reduce using rule 34 (expression -> var_dec .)
    $end            reduce using rule 34 (expression -> var_dec .)
    RBRACE          reduce using rule 34 (expression -> var_dec .)
    OR              reduce using rule 34 (expression -> var_dec .)
    SINCETHAT       reduce using rule 34 (expression -> var_dec .)
    COMMA           reduce using rule 34 (expression -> var_dec .)
    RBRACKET        reduce using rule 34 (expression -> var_dec .)
    RPAREN          reduce using rule 34 (expression -> var_dec .)
    NOT_EQUAL       reduce using rule 34 (expression -> var_dec .)
    EQUAL           reduce using rule 34 (expression -> var_dec .)
    LESS_EQUAL      reduce using rule 34 (expression -> var_dec .)
    GREATER_EQUAL   reduce using rule 34 (expression -> var_dec .)
    LESS_THAN       reduce using rule 34 (expression -> var_dec .)
    GREATER_THAN    reduce using rule 34 (expression -> var_dec .)
    AS              reduce using rule 34 (expression -> var_dec .)
    IN              reduce using rule 34 (expression -> var_dec .)
    ELSE            reduce using rule 34 (expression -> var_dec .)
    ELIF            reduce using rule 34 (expression -> var_dec .)
    AND             reduce using rule 34 (expression -> var_dec .)


state 16

    (12) inst -> expression .
    SEMICOLON       reduce using rule 12 (inst -> expression .)
    $end            reduce using rule 12 (inst -> expression .)
    RBRACE          reduce using rule 12 (inst -> expression .)
    AS              reduce using rule 12 (inst -> expression .)
    COMMA           reduce using rule 12 (inst -> expression .)
    IN              reduce using rule 12 (inst -> expression .)


state 17

    (13) inst -> flux_control .
    SEMICOLON       reduce using rule 13 (inst -> flux_control .)
    $end            reduce using rule 13 (inst -> flux_control .)
    RBRACE          reduce using rule 13 (inst -> flux_control .)
    AS              reduce using rule 13 (inst -> flux_control .)
    COMMA           reduce using rule 13 (inst -> flux_control .)
    IN              reduce using rule 13 (inst -> flux_control .)


state 18

    (14) inst -> scope_list .
    SEMICOLON       reduce using rule 14 (inst -> scope_list .)
    $end            reduce using rule 14 (inst -> scope_list .)
    RBRACE          reduce using rule 14 (inst -> scope_list .)
    AS              reduce using rule 14 (inst -> scope_list .)
    COMMA           reduce using rule 14 (inst -> scope_list .)
    IN              reduce using rule 14 (inst -> scope_list .)


state 19

    (69) func_decl_id -> FUNCTION . IDENTIFIER
    IDENTIFIER      shift and go to state 80


state 20

    (35) expression -> var_asign .
    SEMICOLON       reduce using rule 35 (expression -> var_asign .)
    $end            reduce using rule 35 (expression -> var_asign .)
    RBRACE          reduce using rule 35 (expression -> var_asign .)
    OR              reduce using rule 35 (expression -> var_asign .)
    SINCETHAT       reduce using rule 35 (expression -> var_asign .)
    COMMA           reduce using rule 35 (expression -> var_asign .)
    RBRACKET        reduce using rule 35 (expression -> var_asign .)
    RPAREN          reduce using rule 35 (expression -> var_asign .)
    NOT_EQUAL       reduce using rule 35 (expression -> var_asign .)
    EQUAL           reduce using rule 35 (expression -> var_asign .)
    LESS_EQUAL      reduce using rule 35 (expression -> var_asign .)
    GREATER_EQUAL   reduce using rule 35 (expression -> var_asign .)
    LESS_THAN       reduce using rule 35 (expression -> var_asign .)
    GREATER_THAN    reduce using rule 35 (expression -> var_asign .)
    AS              reduce using rule 35 (expression -> var_asign .)
    IN              reduce using rule 35 (expression -> var_asign .)
    ELSE            reduce using rule 35 (expression -> var_asign .)
    ELIF            reduce using rule 35 (expression -> var_asign .)
    AND             reduce using rule 35 (expression -> var_asign .)


state 21

    (36) expression -> atom . ESPACEDCONCAT expression
    (37) expression -> atom . CONCAT expression
    (143) var_use -> atom . LBRACKET expression RBRACKET
    (25) identifier -> atom .
    ESPACEDCONCAT   shift and go to state 81
    CONCAT          shift and go to state 82
    LBRACKET        shift and go to state 83
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    SEMICOLON       reduce using rule 25 (identifier -> atom .)
    $end            reduce using rule 25 (identifier -> atom .)
    RBRACE          reduce using rule 25 (identifier -> atom .)
    OR              reduce using rule 25 (identifier -> atom .)
    SINCETHAT       reduce using rule 25 (identifier -> atom .)
    COMMA           reduce using rule 25 (identifier -> atom .)
    RBRACKET        reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 25 (identifier -> atom .)
    EQUAL           reduce using rule 25 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 25 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> atom .)
    LESS_THAN       reduce using rule 25 (identifier -> atom .)
    GREATER_THAN    reduce using rule 25 (identifier -> atom .)
    AS              reduce using rule 25 (identifier -> atom .)
    IN              reduce using rule 25 (identifier -> atom .)
    ELSE            reduce using rule 25 (identifier -> atom .)
    ELIF            reduce using rule 25 (identifier -> atom .)
    AND             reduce using rule 25 (identifier -> atom .)


state 22

    (38) expression -> aritmetic_operation .
    SEMICOLON       reduce using rule 38 (expression -> aritmetic_operation .)
    $end            reduce using rule 38 (expression -> aritmetic_operation .)
    RBRACE          reduce using rule 38 (expression -> aritmetic_operation .)
    OR              reduce using rule 38 (expression -> aritmetic_operation .)
    SINCETHAT       reduce using rule 38 (expression -> aritmetic_operation .)
    COMMA           reduce using rule 38 (expression -> aritmetic_operation .)
    RBRACKET        reduce using rule 38 (expression -> aritmetic_operation .)
    RPAREN          reduce using rule 38 (expression -> aritmetic_operation .)
    NOT_EQUAL       reduce using rule 38 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 38 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 38 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 38 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 38 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 38 (expression -> aritmetic_operation .)
    AS              reduce using rule 38 (expression -> aritmetic_operation .)
    IN              reduce using rule 38 (expression -> aritmetic_operation .)
    ELSE            reduce using rule 38 (expression -> aritmetic_operation .)
    ELIF            reduce using rule 38 (expression -> aritmetic_operation .)
    AND             reduce using rule 38 (expression -> aritmetic_operation .)


state 23

    (148) flux_control -> for_loop .
    SEMICOLON       reduce using rule 148 (flux_control -> for_loop .)
    $end            reduce using rule 148 (flux_control -> for_loop .)
    RBRACE          reduce using rule 148 (flux_control -> for_loop .)
    OR              reduce using rule 148 (flux_control -> for_loop .)
    SINCETHAT       reduce using rule 148 (flux_control -> for_loop .)
    COMMA           reduce using rule 148 (flux_control -> for_loop .)
    RBRACKET        reduce using rule 148 (flux_control -> for_loop .)
    RPAREN          reduce using rule 148 (flux_control -> for_loop .)
    NOT_EQUAL       reduce using rule 148 (flux_control -> for_loop .)
    EQUAL           reduce using rule 148 (flux_control -> for_loop .)
    LESS_EQUAL      reduce using rule 148 (flux_control -> for_loop .)
    GREATER_EQUAL   reduce using rule 148 (flux_control -> for_loop .)
    LESS_THAN       reduce using rule 148 (flux_control -> for_loop .)
    GREATER_THAN    reduce using rule 148 (flux_control -> for_loop .)
    AS              reduce using rule 148 (flux_control -> for_loop .)
    IN              reduce using rule 148 (flux_control -> for_loop .)
    ELSE            reduce using rule 148 (flux_control -> for_loop .)
    ELIF            reduce using rule 148 (flux_control -> for_loop .)
    AND             reduce using rule 148 (flux_control -> for_loop .)


state 24

    (149) flux_control -> conditional .
    SEMICOLON       reduce using rule 149 (flux_control -> conditional .)
    $end            reduce using rule 149 (flux_control -> conditional .)
    RBRACE          reduce using rule 149 (flux_control -> conditional .)
    OR              reduce using rule 149 (flux_control -> conditional .)
    SINCETHAT       reduce using rule 149 (flux_control -> conditional .)
    COMMA           reduce using rule 149 (flux_control -> conditional .)
    RBRACKET        reduce using rule 149 (flux_control -> conditional .)
    RPAREN          reduce using rule 149 (flux_control -> conditional .)
    NOT_EQUAL       reduce using rule 149 (flux_control -> conditional .)
    EQUAL           reduce using rule 149 (flux_control -> conditional .)
    LESS_EQUAL      reduce using rule 149 (flux_control -> conditional .)
    GREATER_EQUAL   reduce using rule 149 (flux_control -> conditional .)
    LESS_THAN       reduce using rule 149 (flux_control -> conditional .)
    GREATER_THAN    reduce using rule 149 (flux_control -> conditional .)
    AS              reduce using rule 149 (flux_control -> conditional .)
    IN              reduce using rule 149 (flux_control -> conditional .)
    ELSE            reduce using rule 149 (flux_control -> conditional .)
    ELIF            reduce using rule 149 (flux_control -> conditional .)
    AND             reduce using rule 149 (flux_control -> conditional .)


state 25

    (150) flux_control -> while_loop .
    SEMICOLON       reduce using rule 150 (flux_control -> while_loop .)
    $end            reduce using rule 150 (flux_control -> while_loop .)
    RBRACE          reduce using rule 150 (flux_control -> while_loop .)
    OR              reduce using rule 150 (flux_control -> while_loop .)
    SINCETHAT       reduce using rule 150 (flux_control -> while_loop .)
    COMMA           reduce using rule 150 (flux_control -> while_loop .)
    RBRACKET        reduce using rule 150 (flux_control -> while_loop .)
    RPAREN          reduce using rule 150 (flux_control -> while_loop .)
    NOT_EQUAL       reduce using rule 150 (flux_control -> while_loop .)
    EQUAL           reduce using rule 150 (flux_control -> while_loop .)
    LESS_EQUAL      reduce using rule 150 (flux_control -> while_loop .)
    GREATER_EQUAL   reduce using rule 150 (flux_control -> while_loop .)
    LESS_THAN       reduce using rule 150 (flux_control -> while_loop .)
    GREATER_THAN    reduce using rule 150 (flux_control -> while_loop .)
    AS              reduce using rule 150 (flux_control -> while_loop .)
    IN              reduce using rule 150 (flux_control -> while_loop .)
    ELSE            reduce using rule 150 (flux_control -> while_loop .)
    ELIF            reduce using rule 150 (flux_control -> while_loop .)
    AND             reduce using rule 150 (flux_control -> while_loop .)


state 26

    (30) scope_list -> scope . scope_list
    (31) scope_list -> scope .
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    SEMICOLON       reduce using rule 31 (scope_list -> scope .)
    $end            reduce using rule 31 (scope_list -> scope .)
    RBRACE          reduce using rule 31 (scope_list -> scope .)
    AS              reduce using rule 31 (scope_list -> scope .)
    COMMA           reduce using rule 31 (scope_list -> scope .)
    IN              reduce using rule 31 (scope_list -> scope .)
    ELSE            reduce using rule 31 (scope_list -> scope .)
    ELIF            reduce using rule 31 (scope_list -> scope .)
    LBRACE          shift and go to state 43

    scope                          shift and go to state 26
    scope_list                     shift and go to state 84

state 27

    (15) var_dec -> LET . var_init_list IN var_decl_expr
    (20) var_init_list -> . var_init COMMA var_init_list
    (21) var_init_list -> . var_init
    (22) var_init -> . identifier ASSIGN inst type_downcast
    (23) var_init -> . identifier ASSIGN inst
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    var_init_list                  shift and go to state 85
    var_init                       shift and go to state 86
    identifier                     shift and go to state 87
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 28

    (61) var_asign -> var_use . ASSIGN expression
    (62) var_asign -> var_use . DEST_ASSIGN expression
    (59) atom -> var_use .
    ASSIGN          shift and go to state 88
    DEST_ASSIGN     shift and go to state 89
    ESPACEDCONCAT   reduce using rule 59 (atom -> var_use .)
    CONCAT          reduce using rule 59 (atom -> var_use .)
    LBRACKET        reduce using rule 59 (atom -> var_use .)
    MODULE          reduce using rule 59 (atom -> var_use .)
    DIVIDE          reduce using rule 59 (atom -> var_use .)
    MULTIPLY        reduce using rule 59 (atom -> var_use .)
    ASTERPOWER      reduce using rule 59 (atom -> var_use .)
    POWER           reduce using rule 59 (atom -> var_use .)
    MINUS           reduce using rule 59 (atom -> var_use .)
    PLUS            reduce using rule 59 (atom -> var_use .)
    SEMICOLON       reduce using rule 59 (atom -> var_use .)
    $end            reduce using rule 59 (atom -> var_use .)
    RBRACE          reduce using rule 59 (atom -> var_use .)
    OR              reduce using rule 59 (atom -> var_use .)
    SINCETHAT       reduce using rule 59 (atom -> var_use .)
    COMMA           reduce using rule 59 (atom -> var_use .)
    RBRACKET        reduce using rule 59 (atom -> var_use .)
    RPAREN          reduce using rule 59 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 59 (atom -> var_use .)
    EQUAL           reduce using rule 59 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 59 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 59 (atom -> var_use .)
    LESS_THAN       reduce using rule 59 (atom -> var_use .)
    GREATER_THAN    reduce using rule 59 (atom -> var_use .)
    AS              reduce using rule 59 (atom -> var_use .)
    IN              reduce using rule 59 (atom -> var_use .)
    ELSE            reduce using rule 59 (atom -> var_use .)
    ELIF            reduce using rule 59 (atom -> var_use .)
    AND             reduce using rule 59 (atom -> var_use .)


state 29

    (51) atom -> NUMBER .
    ESPACEDCONCAT   reduce using rule 51 (atom -> NUMBER .)
    CONCAT          reduce using rule 51 (atom -> NUMBER .)
    LBRACKET        reduce using rule 51 (atom -> NUMBER .)
    MODULE          reduce using rule 51 (atom -> NUMBER .)
    DIVIDE          reduce using rule 51 (atom -> NUMBER .)
    MULTIPLY        reduce using rule 51 (atom -> NUMBER .)
    ASTERPOWER      reduce using rule 51 (atom -> NUMBER .)
    POWER           reduce using rule 51 (atom -> NUMBER .)
    MINUS           reduce using rule 51 (atom -> NUMBER .)
    PLUS            reduce using rule 51 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 51 (atom -> NUMBER .)
    $end            reduce using rule 51 (atom -> NUMBER .)
    RPAREN          reduce using rule 51 (atom -> NUMBER .)
    ASSIGN          reduce using rule 51 (atom -> NUMBER .)
    RBRACE          reduce using rule 51 (atom -> NUMBER .)
    OR              reduce using rule 51 (atom -> NUMBER .)
    SINCETHAT       reduce using rule 51 (atom -> NUMBER .)
    COMMA           reduce using rule 51 (atom -> NUMBER .)
    RBRACKET        reduce using rule 51 (atom -> NUMBER .)
    NOT_EQUAL       reduce using rule 51 (atom -> NUMBER .)
    EQUAL           reduce using rule 51 (atom -> NUMBER .)
    LESS_EQUAL      reduce using rule 51 (atom -> NUMBER .)
    GREATER_EQUAL   reduce using rule 51 (atom -> NUMBER .)
    LESS_THAN       reduce using rule 51 (atom -> NUMBER .)
    GREATER_THAN    reduce using rule 51 (atom -> NUMBER .)
    AS              reduce using rule 51 (atom -> NUMBER .)
    IN              reduce using rule 51 (atom -> NUMBER .)
    ELSE            reduce using rule 51 (atom -> NUMBER .)
    ELIF            reduce using rule 51 (atom -> NUMBER .)
    AND             reduce using rule 51 (atom -> NUMBER .)


state 30

    (52) atom -> STRING .
    ESPACEDCONCAT   reduce using rule 52 (atom -> STRING .)
    CONCAT          reduce using rule 52 (atom -> STRING .)
    LBRACKET        reduce using rule 52 (atom -> STRING .)
    MODULE          reduce using rule 52 (atom -> STRING .)
    DIVIDE          reduce using rule 52 (atom -> STRING .)
    MULTIPLY        reduce using rule 52 (atom -> STRING .)
    ASTERPOWER      reduce using rule 52 (atom -> STRING .)
    POWER           reduce using rule 52 (atom -> STRING .)
    MINUS           reduce using rule 52 (atom -> STRING .)
    PLUS            reduce using rule 52 (atom -> STRING .)
    SEMICOLON       reduce using rule 52 (atom -> STRING .)
    $end            reduce using rule 52 (atom -> STRING .)
    RPAREN          reduce using rule 52 (atom -> STRING .)
    ASSIGN          reduce using rule 52 (atom -> STRING .)
    RBRACE          reduce using rule 52 (atom -> STRING .)
    OR              reduce using rule 52 (atom -> STRING .)
    SINCETHAT       reduce using rule 52 (atom -> STRING .)
    COMMA           reduce using rule 52 (atom -> STRING .)
    RBRACKET        reduce using rule 52 (atom -> STRING .)
    NOT_EQUAL       reduce using rule 52 (atom -> STRING .)
    EQUAL           reduce using rule 52 (atom -> STRING .)
    LESS_EQUAL      reduce using rule 52 (atom -> STRING .)
    GREATER_EQUAL   reduce using rule 52 (atom -> STRING .)
    LESS_THAN       reduce using rule 52 (atom -> STRING .)
    GREATER_THAN    reduce using rule 52 (atom -> STRING .)
    AS              reduce using rule 52 (atom -> STRING .)
    IN              reduce using rule 52 (atom -> STRING .)
    ELSE            reduce using rule 52 (atom -> STRING .)
    ELIF            reduce using rule 52 (atom -> STRING .)
    AND             reduce using rule 52 (atom -> STRING .)


state 31

    (53) atom -> build_in_consts .
    ESPACEDCONCAT   reduce using rule 53 (atom -> build_in_consts .)
    CONCAT          reduce using rule 53 (atom -> build_in_consts .)
    LBRACKET        reduce using rule 53 (atom -> build_in_consts .)
    MODULE          reduce using rule 53 (atom -> build_in_consts .)
    DIVIDE          reduce using rule 53 (atom -> build_in_consts .)
    MULTIPLY        reduce using rule 53 (atom -> build_in_consts .)
    ASTERPOWER      reduce using rule 53 (atom -> build_in_consts .)
    POWER           reduce using rule 53 (atom -> build_in_consts .)
    MINUS           reduce using rule 53 (atom -> build_in_consts .)
    PLUS            reduce using rule 53 (atom -> build_in_consts .)
    SEMICOLON       reduce using rule 53 (atom -> build_in_consts .)
    $end            reduce using rule 53 (atom -> build_in_consts .)
    RPAREN          reduce using rule 53 (atom -> build_in_consts .)
    ASSIGN          reduce using rule 53 (atom -> build_in_consts .)
    RBRACE          reduce using rule 53 (atom -> build_in_consts .)
    OR              reduce using rule 53 (atom -> build_in_consts .)
    SINCETHAT       reduce using rule 53 (atom -> build_in_consts .)
    COMMA           reduce using rule 53 (atom -> build_in_consts .)
    RBRACKET        reduce using rule 53 (atom -> build_in_consts .)
    NOT_EQUAL       reduce using rule 53 (atom -> build_in_consts .)
    EQUAL           reduce using rule 53 (atom -> build_in_consts .)
    LESS_EQUAL      reduce using rule 53 (atom -> build_in_consts .)
    GREATER_EQUAL   reduce using rule 53 (atom -> build_in_consts .)
    LESS_THAN       reduce using rule 53 (atom -> build_in_consts .)
    GREATER_THAN    reduce using rule 53 (atom -> build_in_consts .)
    AS              reduce using rule 53 (atom -> build_in_consts .)
    IN              reduce using rule 53 (atom -> build_in_consts .)
    ELSE            reduce using rule 53 (atom -> build_in_consts .)
    ELIF            reduce using rule 53 (atom -> build_in_consts .)
    AND             reduce using rule 53 (atom -> build_in_consts .)


state 32

    (54) atom -> build_in_functions .
    ESPACEDCONCAT   reduce using rule 54 (atom -> build_in_functions .)
    CONCAT          reduce using rule 54 (atom -> build_in_functions .)
    LBRACKET        reduce using rule 54 (atom -> build_in_functions .)
    MODULE          reduce using rule 54 (atom -> build_in_functions .)
    DIVIDE          reduce using rule 54 (atom -> build_in_functions .)
    MULTIPLY        reduce using rule 54 (atom -> build_in_functions .)
    ASTERPOWER      reduce using rule 54 (atom -> build_in_functions .)
    POWER           reduce using rule 54 (atom -> build_in_functions .)
    MINUS           reduce using rule 54 (atom -> build_in_functions .)
    PLUS            reduce using rule 54 (atom -> build_in_functions .)
    SEMICOLON       reduce using rule 54 (atom -> build_in_functions .)
    $end            reduce using rule 54 (atom -> build_in_functions .)
    RPAREN          reduce using rule 54 (atom -> build_in_functions .)
    ASSIGN          reduce using rule 54 (atom -> build_in_functions .)
    RBRACE          reduce using rule 54 (atom -> build_in_functions .)
    OR              reduce using rule 54 (atom -> build_in_functions .)
    SINCETHAT       reduce using rule 54 (atom -> build_in_functions .)
    COMMA           reduce using rule 54 (atom -> build_in_functions .)
    RBRACKET        reduce using rule 54 (atom -> build_in_functions .)
    NOT_EQUAL       reduce using rule 54 (atom -> build_in_functions .)
    EQUAL           reduce using rule 54 (atom -> build_in_functions .)
    LESS_EQUAL      reduce using rule 54 (atom -> build_in_functions .)
    GREATER_EQUAL   reduce using rule 54 (atom -> build_in_functions .)
    LESS_THAN       reduce using rule 54 (atom -> build_in_functions .)
    GREATER_THAN    reduce using rule 54 (atom -> build_in_functions .)
    AS              reduce using rule 54 (atom -> build_in_functions .)
    IN              reduce using rule 54 (atom -> build_in_functions .)
    ELSE            reduce using rule 54 (atom -> build_in_functions .)
    ELIF            reduce using rule 54 (atom -> build_in_functions .)
    AND             reduce using rule 54 (atom -> build_in_functions .)


state 33

    (55) atom -> boolean_value .
    ESPACEDCONCAT   reduce using rule 55 (atom -> boolean_value .)
    CONCAT          reduce using rule 55 (atom -> boolean_value .)
    LBRACKET        reduce using rule 55 (atom -> boolean_value .)
    MODULE          reduce using rule 55 (atom -> boolean_value .)
    DIVIDE          reduce using rule 55 (atom -> boolean_value .)
    MULTIPLY        reduce using rule 55 (atom -> boolean_value .)
    ASTERPOWER      reduce using rule 55 (atom -> boolean_value .)
    POWER           reduce using rule 55 (atom -> boolean_value .)
    MINUS           reduce using rule 55 (atom -> boolean_value .)
    PLUS            reduce using rule 55 (atom -> boolean_value .)
    SEMICOLON       reduce using rule 55 (atom -> boolean_value .)
    $end            reduce using rule 55 (atom -> boolean_value .)
    RPAREN          reduce using rule 55 (atom -> boolean_value .)
    ASSIGN          reduce using rule 55 (atom -> boolean_value .)
    RBRACE          reduce using rule 55 (atom -> boolean_value .)
    OR              reduce using rule 55 (atom -> boolean_value .)
    SINCETHAT       reduce using rule 55 (atom -> boolean_value .)
    COMMA           reduce using rule 55 (atom -> boolean_value .)
    RBRACKET        reduce using rule 55 (atom -> boolean_value .)
    NOT_EQUAL       reduce using rule 55 (atom -> boolean_value .)
    EQUAL           reduce using rule 55 (atom -> boolean_value .)
    LESS_EQUAL      reduce using rule 55 (atom -> boolean_value .)
    GREATER_EQUAL   reduce using rule 55 (atom -> boolean_value .)
    LESS_THAN       reduce using rule 55 (atom -> boolean_value .)
    GREATER_THAN    reduce using rule 55 (atom -> boolean_value .)
    AS              reduce using rule 55 (atom -> boolean_value .)
    IN              reduce using rule 55 (atom -> boolean_value .)
    ELSE            reduce using rule 55 (atom -> boolean_value .)
    ELIF            reduce using rule 55 (atom -> boolean_value .)
    AND             reduce using rule 55 (atom -> boolean_value .)


state 34

    (56) atom -> type_instanciation .
    ESPACEDCONCAT   reduce using rule 56 (atom -> type_instanciation .)
    CONCAT          reduce using rule 56 (atom -> type_instanciation .)
    LBRACKET        reduce using rule 56 (atom -> type_instanciation .)
    MODULE          reduce using rule 56 (atom -> type_instanciation .)
    DIVIDE          reduce using rule 56 (atom -> type_instanciation .)
    MULTIPLY        reduce using rule 56 (atom -> type_instanciation .)
    ASTERPOWER      reduce using rule 56 (atom -> type_instanciation .)
    POWER           reduce using rule 56 (atom -> type_instanciation .)
    MINUS           reduce using rule 56 (atom -> type_instanciation .)
    PLUS            reduce using rule 56 (atom -> type_instanciation .)
    SEMICOLON       reduce using rule 56 (atom -> type_instanciation .)
    $end            reduce using rule 56 (atom -> type_instanciation .)
    RPAREN          reduce using rule 56 (atom -> type_instanciation .)
    ASSIGN          reduce using rule 56 (atom -> type_instanciation .)
    RBRACE          reduce using rule 56 (atom -> type_instanciation .)
    OR              reduce using rule 56 (atom -> type_instanciation .)
    SINCETHAT       reduce using rule 56 (atom -> type_instanciation .)
    COMMA           reduce using rule 56 (atom -> type_instanciation .)
    RBRACKET        reduce using rule 56 (atom -> type_instanciation .)
    NOT_EQUAL       reduce using rule 56 (atom -> type_instanciation .)
    EQUAL           reduce using rule 56 (atom -> type_instanciation .)
    LESS_EQUAL      reduce using rule 56 (atom -> type_instanciation .)
    GREATER_EQUAL   reduce using rule 56 (atom -> type_instanciation .)
    LESS_THAN       reduce using rule 56 (atom -> type_instanciation .)
    GREATER_THAN    reduce using rule 56 (atom -> type_instanciation .)
    AS              reduce using rule 56 (atom -> type_instanciation .)
    IN              reduce using rule 56 (atom -> type_instanciation .)
    ELSE            reduce using rule 56 (atom -> type_instanciation .)
    ELIF            reduce using rule 56 (atom -> type_instanciation .)
    AND             reduce using rule 56 (atom -> type_instanciation .)


state 35

    (57) atom -> var_method .
    ESPACEDCONCAT   reduce using rule 57 (atom -> var_method .)
    CONCAT          reduce using rule 57 (atom -> var_method .)
    LBRACKET        reduce using rule 57 (atom -> var_method .)
    MODULE          reduce using rule 57 (atom -> var_method .)
    DIVIDE          reduce using rule 57 (atom -> var_method .)
    MULTIPLY        reduce using rule 57 (atom -> var_method .)
    ASTERPOWER      reduce using rule 57 (atom -> var_method .)
    POWER           reduce using rule 57 (atom -> var_method .)
    MINUS           reduce using rule 57 (atom -> var_method .)
    PLUS            reduce using rule 57 (atom -> var_method .)
    SEMICOLON       reduce using rule 57 (atom -> var_method .)
    $end            reduce using rule 57 (atom -> var_method .)
    RPAREN          reduce using rule 57 (atom -> var_method .)
    ASSIGN          reduce using rule 57 (atom -> var_method .)
    RBRACE          reduce using rule 57 (atom -> var_method .)
    OR              reduce using rule 57 (atom -> var_method .)
    SINCETHAT       reduce using rule 57 (atom -> var_method .)
    COMMA           reduce using rule 57 (atom -> var_method .)
    RBRACKET        reduce using rule 57 (atom -> var_method .)
    NOT_EQUAL       reduce using rule 57 (atom -> var_method .)
    EQUAL           reduce using rule 57 (atom -> var_method .)
    LESS_EQUAL      reduce using rule 57 (atom -> var_method .)
    GREATER_EQUAL   reduce using rule 57 (atom -> var_method .)
    LESS_THAN       reduce using rule 57 (atom -> var_method .)
    GREATER_THAN    reduce using rule 57 (atom -> var_method .)
    AS              reduce using rule 57 (atom -> var_method .)
    IN              reduce using rule 57 (atom -> var_method .)
    ELSE            reduce using rule 57 (atom -> var_method .)
    ELIF            reduce using rule 57 (atom -> var_method .)
    AND             reduce using rule 57 (atom -> var_method .)


state 36

    (58) atom -> vector .
    ESPACEDCONCAT   reduce using rule 58 (atom -> vector .)
    CONCAT          reduce using rule 58 (atom -> vector .)
    LBRACKET        reduce using rule 58 (atom -> vector .)
    MODULE          reduce using rule 58 (atom -> vector .)
    DIVIDE          reduce using rule 58 (atom -> vector .)
    MULTIPLY        reduce using rule 58 (atom -> vector .)
    ASTERPOWER      reduce using rule 58 (atom -> vector .)
    POWER           reduce using rule 58 (atom -> vector .)
    MINUS           reduce using rule 58 (atom -> vector .)
    PLUS            reduce using rule 58 (atom -> vector .)
    SEMICOLON       reduce using rule 58 (atom -> vector .)
    $end            reduce using rule 58 (atom -> vector .)
    RPAREN          reduce using rule 58 (atom -> vector .)
    ASSIGN          reduce using rule 58 (atom -> vector .)
    RBRACE          reduce using rule 58 (atom -> vector .)
    OR              reduce using rule 58 (atom -> vector .)
    SINCETHAT       reduce using rule 58 (atom -> vector .)
    COMMA           reduce using rule 58 (atom -> vector .)
    RBRACKET        reduce using rule 58 (atom -> vector .)
    NOT_EQUAL       reduce using rule 58 (atom -> vector .)
    EQUAL           reduce using rule 58 (atom -> vector .)
    LESS_EQUAL      reduce using rule 58 (atom -> vector .)
    GREATER_EQUAL   reduce using rule 58 (atom -> vector .)
    LESS_THAN       reduce using rule 58 (atom -> vector .)
    GREATER_THAN    reduce using rule 58 (atom -> vector .)
    AS              reduce using rule 58 (atom -> vector .)
    IN              reduce using rule 58 (atom -> vector .)
    ELSE            reduce using rule 58 (atom -> vector .)
    ELIF            reduce using rule 58 (atom -> vector .)
    AND             reduce using rule 58 (atom -> vector .)


state 37

    (60) atom -> function_call .
    ESPACEDCONCAT   reduce using rule 60 (atom -> function_call .)
    CONCAT          reduce using rule 60 (atom -> function_call .)
    LBRACKET        reduce using rule 60 (atom -> function_call .)
    MODULE          reduce using rule 60 (atom -> function_call .)
    DIVIDE          reduce using rule 60 (atom -> function_call .)
    MULTIPLY        reduce using rule 60 (atom -> function_call .)
    ASTERPOWER      reduce using rule 60 (atom -> function_call .)
    POWER           reduce using rule 60 (atom -> function_call .)
    MINUS           reduce using rule 60 (atom -> function_call .)
    PLUS            reduce using rule 60 (atom -> function_call .)
    SEMICOLON       reduce using rule 60 (atom -> function_call .)
    $end            reduce using rule 60 (atom -> function_call .)
    RPAREN          reduce using rule 60 (atom -> function_call .)
    ASSIGN          reduce using rule 60 (atom -> function_call .)
    RBRACE          reduce using rule 60 (atom -> function_call .)
    OR              reduce using rule 60 (atom -> function_call .)
    SINCETHAT       reduce using rule 60 (atom -> function_call .)
    COMMA           reduce using rule 60 (atom -> function_call .)
    RBRACKET        reduce using rule 60 (atom -> function_call .)
    NOT_EQUAL       reduce using rule 60 (atom -> function_call .)
    EQUAL           reduce using rule 60 (atom -> function_call .)
    LESS_EQUAL      reduce using rule 60 (atom -> function_call .)
    GREATER_EQUAL   reduce using rule 60 (atom -> function_call .)
    LESS_THAN       reduce using rule 60 (atom -> function_call .)
    GREATER_THAN    reduce using rule 60 (atom -> function_call .)
    AS              reduce using rule 60 (atom -> function_call .)
    IN              reduce using rule 60 (atom -> function_call .)
    ELSE            reduce using rule 60 (atom -> function_call .)
    ELIF            reduce using rule 60 (atom -> function_call .)
    AND             reduce using rule 60 (atom -> function_call .)


state 38

    (39) aritmetic_operation -> term .
    (40) aritmetic_operation -> term . MINUS aritmetic_operation
    (41) aritmetic_operation -> term . PLUS aritmetic_operation
    SEMICOLON       reduce using rule 39 (aritmetic_operation -> term .)
    $end            reduce using rule 39 (aritmetic_operation -> term .)
    RPAREN          reduce using rule 39 (aritmetic_operation -> term .)
    RBRACE          reduce using rule 39 (aritmetic_operation -> term .)
    OR              reduce using rule 39 (aritmetic_operation -> term .)
    SINCETHAT       reduce using rule 39 (aritmetic_operation -> term .)
    COMMA           reduce using rule 39 (aritmetic_operation -> term .)
    RBRACKET        reduce using rule 39 (aritmetic_operation -> term .)
    NOT_EQUAL       reduce using rule 39 (aritmetic_operation -> term .)
    EQUAL           reduce using rule 39 (aritmetic_operation -> term .)
    LESS_EQUAL      reduce using rule 39 (aritmetic_operation -> term .)
    GREATER_EQUAL   reduce using rule 39 (aritmetic_operation -> term .)
    LESS_THAN       reduce using rule 39 (aritmetic_operation -> term .)
    GREATER_THAN    reduce using rule 39 (aritmetic_operation -> term .)
    AS              reduce using rule 39 (aritmetic_operation -> term .)
    IN              reduce using rule 39 (aritmetic_operation -> term .)
    ELSE            reduce using rule 39 (aritmetic_operation -> term .)
    ELIF            reduce using rule 39 (aritmetic_operation -> term .)
    AND             reduce using rule 39 (aritmetic_operation -> term .)
    MINUS           shift and go to state 90
    PLUS            shift and go to state 91


state 39

    (87) for_loop -> FOR . LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> FOR . LPAREN identifier IN expression RPAREN scope
    LPAREN          shift and go to state 92


state 40

    (50) base_exponent -> identifier .
    MODULE          reduce using rule 50 (base_exponent -> identifier .)
    DIVIDE          reduce using rule 50 (base_exponent -> identifier .)
    MULTIPLY        reduce using rule 50 (base_exponent -> identifier .)
    ASTERPOWER      reduce using rule 50 (base_exponent -> identifier .)
    POWER           reduce using rule 50 (base_exponent -> identifier .)
    MINUS           reduce using rule 50 (base_exponent -> identifier .)
    PLUS            reduce using rule 50 (base_exponent -> identifier .)
    SEMICOLON       reduce using rule 50 (base_exponent -> identifier .)
    $end            reduce using rule 50 (base_exponent -> identifier .)
    RPAREN          reduce using rule 50 (base_exponent -> identifier .)
    RBRACE          reduce using rule 50 (base_exponent -> identifier .)
    OR              reduce using rule 50 (base_exponent -> identifier .)
    SINCETHAT       reduce using rule 50 (base_exponent -> identifier .)
    COMMA           reduce using rule 50 (base_exponent -> identifier .)
    RBRACKET        reduce using rule 50 (base_exponent -> identifier .)
    NOT_EQUAL       reduce using rule 50 (base_exponent -> identifier .)
    EQUAL           reduce using rule 50 (base_exponent -> identifier .)
    LESS_EQUAL      reduce using rule 50 (base_exponent -> identifier .)
    GREATER_EQUAL   reduce using rule 50 (base_exponent -> identifier .)
    LESS_THAN       reduce using rule 50 (base_exponent -> identifier .)
    GREATER_THAN    reduce using rule 50 (base_exponent -> identifier .)
    AS              reduce using rule 50 (base_exponent -> identifier .)
    IN              reduce using rule 50 (base_exponent -> identifier .)
    ELSE            reduce using rule 50 (base_exponent -> identifier .)
    ELIF            reduce using rule 50 (base_exponent -> identifier .)
    AND             reduce using rule 50 (base_exponent -> identifier .)


state 41

    (73) conditional -> IF . full_conditional
    (74) conditional -> IF . inline_conditional
    (76) full_conditional -> . LPAREN conditional_expression RPAREN scope_list else_elif_statement
    (75) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 95

    full_conditional               shift and go to state 93
    inline_conditional             shift and go to state 94

state 42

    (83) while_loop -> WHILE . LPAREN expression RPAREN expression
    (84) while_loop -> WHILE . LPAREN expression RPAREN scope
    (85) while_loop -> WHILE . LPAREN conditional_expression RPAREN expression
    (86) while_loop -> WHILE . LPAREN conditional_expression RPAREN scope
    LPAREN          shift and go to state 96


state 43

    (32) scope -> LBRACE . RBRACE
    (33) scope -> LBRACE . inst_list RBRACE
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RBRACE          shift and go to state 97
    LPAREN          shift and go to state 13
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    inst_list                      shift and go to state 98
    inst                           shift and go to state 9
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 44

    (142) var_use -> var_attr .
    ASSIGN          reduce using rule 142 (var_use -> var_attr .)
    DEST_ASSIGN     reduce using rule 142 (var_use -> var_attr .)
    ESPACEDCONCAT   reduce using rule 142 (var_use -> var_attr .)
    CONCAT          reduce using rule 142 (var_use -> var_attr .)
    LBRACKET        reduce using rule 142 (var_use -> var_attr .)
    MODULE          reduce using rule 142 (var_use -> var_attr .)
    DIVIDE          reduce using rule 142 (var_use -> var_attr .)
    MULTIPLY        reduce using rule 142 (var_use -> var_attr .)
    ASTERPOWER      reduce using rule 142 (var_use -> var_attr .)
    POWER           reduce using rule 142 (var_use -> var_attr .)
    MINUS           reduce using rule 142 (var_use -> var_attr .)
    PLUS            reduce using rule 142 (var_use -> var_attr .)
    SEMICOLON       reduce using rule 142 (var_use -> var_attr .)
    $end            reduce using rule 142 (var_use -> var_attr .)
    RPAREN          reduce using rule 142 (var_use -> var_attr .)
    RBRACE          reduce using rule 142 (var_use -> var_attr .)
    OR              reduce using rule 142 (var_use -> var_attr .)
    SINCETHAT       reduce using rule 142 (var_use -> var_attr .)
    COMMA           reduce using rule 142 (var_use -> var_attr .)
    RBRACKET        reduce using rule 142 (var_use -> var_attr .)
    NOT_EQUAL       reduce using rule 142 (var_use -> var_attr .)
    EQUAL           reduce using rule 142 (var_use -> var_attr .)
    LESS_EQUAL      reduce using rule 142 (var_use -> var_attr .)
    GREATER_EQUAL   reduce using rule 142 (var_use -> var_attr .)
    LESS_THAN       reduce using rule 142 (var_use -> var_attr .)
    GREATER_THAN    reduce using rule 142 (var_use -> var_attr .)
    AS              reduce using rule 142 (var_use -> var_attr .)
    IN              reduce using rule 142 (var_use -> var_attr .)
    ELSE            reduce using rule 142 (var_use -> var_attr .)
    ELIF            reduce using rule 142 (var_use -> var_attr .)
    AND             reduce using rule 142 (var_use -> var_attr .)


state 45

    (160) vector -> LBRACKET . vector_decl RBRACKET
    (161) vector_decl -> . expression OR identifier IN expression
    (162) vector_decl -> . expression SINCETHAT identifier IN expression
    (163) vector_decl -> . arguments_list
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (140) argument -> . conditional
    (141) argument -> . expression
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    IF              shift and go to state 41
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    vector_decl                    shift and go to state 99
    expression                     shift and go to state 100
    identifier                     shift and go to state 40
    arguments_list                 shift and go to state 101
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    argument                       shift and go to state 102
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    conditional                    shift and go to state 103
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 46

    (174) build_in_consts -> E_CONST .
    ESPACEDCONCAT   reduce using rule 174 (build_in_consts -> E_CONST .)
    CONCAT          reduce using rule 174 (build_in_consts -> E_CONST .)
    LBRACKET        reduce using rule 174 (build_in_consts -> E_CONST .)
    MODULE          reduce using rule 174 (build_in_consts -> E_CONST .)
    DIVIDE          reduce using rule 174 (build_in_consts -> E_CONST .)
    MULTIPLY        reduce using rule 174 (build_in_consts -> E_CONST .)
    ASTERPOWER      reduce using rule 174 (build_in_consts -> E_CONST .)
    POWER           reduce using rule 174 (build_in_consts -> E_CONST .)
    MINUS           reduce using rule 174 (build_in_consts -> E_CONST .)
    PLUS            reduce using rule 174 (build_in_consts -> E_CONST .)
    SEMICOLON       reduce using rule 174 (build_in_consts -> E_CONST .)
    $end            reduce using rule 174 (build_in_consts -> E_CONST .)
    RPAREN          reduce using rule 174 (build_in_consts -> E_CONST .)
    ASSIGN          reduce using rule 174 (build_in_consts -> E_CONST .)
    RBRACE          reduce using rule 174 (build_in_consts -> E_CONST .)
    OR              reduce using rule 174 (build_in_consts -> E_CONST .)
    SINCETHAT       reduce using rule 174 (build_in_consts -> E_CONST .)
    COMMA           reduce using rule 174 (build_in_consts -> E_CONST .)
    RBRACKET        reduce using rule 174 (build_in_consts -> E_CONST .)
    NOT_EQUAL       reduce using rule 174 (build_in_consts -> E_CONST .)
    EQUAL           reduce using rule 174 (build_in_consts -> E_CONST .)
    LESS_EQUAL      reduce using rule 174 (build_in_consts -> E_CONST .)
    GREATER_EQUAL   reduce using rule 174 (build_in_consts -> E_CONST .)
    LESS_THAN       reduce using rule 174 (build_in_consts -> E_CONST .)
    GREATER_THAN    reduce using rule 174 (build_in_consts -> E_CONST .)
    AS              reduce using rule 174 (build_in_consts -> E_CONST .)
    IN              reduce using rule 174 (build_in_consts -> E_CONST .)
    ELSE            reduce using rule 174 (build_in_consts -> E_CONST .)
    ELIF            reduce using rule 174 (build_in_consts -> E_CONST .)
    AND             reduce using rule 174 (build_in_consts -> E_CONST .)


state 47

    (175) build_in_consts -> PI_CONST .
    ESPACEDCONCAT   reduce using rule 175 (build_in_consts -> PI_CONST .)
    CONCAT          reduce using rule 175 (build_in_consts -> PI_CONST .)
    LBRACKET        reduce using rule 175 (build_in_consts -> PI_CONST .)
    MODULE          reduce using rule 175 (build_in_consts -> PI_CONST .)
    DIVIDE          reduce using rule 175 (build_in_consts -> PI_CONST .)
    MULTIPLY        reduce using rule 175 (build_in_consts -> PI_CONST .)
    ASTERPOWER      reduce using rule 175 (build_in_consts -> PI_CONST .)
    POWER           reduce using rule 175 (build_in_consts -> PI_CONST .)
    MINUS           reduce using rule 175 (build_in_consts -> PI_CONST .)
    PLUS            reduce using rule 175 (build_in_consts -> PI_CONST .)
    SEMICOLON       reduce using rule 175 (build_in_consts -> PI_CONST .)
    $end            reduce using rule 175 (build_in_consts -> PI_CONST .)
    RPAREN          reduce using rule 175 (build_in_consts -> PI_CONST .)
    ASSIGN          reduce using rule 175 (build_in_consts -> PI_CONST .)
    RBRACE          reduce using rule 175 (build_in_consts -> PI_CONST .)
    OR              reduce using rule 175 (build_in_consts -> PI_CONST .)
    SINCETHAT       reduce using rule 175 (build_in_consts -> PI_CONST .)
    COMMA           reduce using rule 175 (build_in_consts -> PI_CONST .)
    RBRACKET        reduce using rule 175 (build_in_consts -> PI_CONST .)
    NOT_EQUAL       reduce using rule 175 (build_in_consts -> PI_CONST .)
    EQUAL           reduce using rule 175 (build_in_consts -> PI_CONST .)
    LESS_EQUAL      reduce using rule 175 (build_in_consts -> PI_CONST .)
    GREATER_EQUAL   reduce using rule 175 (build_in_consts -> PI_CONST .)
    LESS_THAN       reduce using rule 175 (build_in_consts -> PI_CONST .)
    GREATER_THAN    reduce using rule 175 (build_in_consts -> PI_CONST .)
    AS              reduce using rule 175 (build_in_consts -> PI_CONST .)
    IN              reduce using rule 175 (build_in_consts -> PI_CONST .)
    ELSE            reduce using rule 175 (build_in_consts -> PI_CONST .)
    ELIF            reduce using rule 175 (build_in_consts -> PI_CONST .)
    AND             reduce using rule 175 (build_in_consts -> PI_CONST .)


state 48

    (166) build_in_functions -> RAND . LPAREN RPAREN
    LPAREN          shift and go to state 104


state 49

    (167) build_in_functions -> LOG . LPAREN argument COMMA argument RPAREN
    LPAREN          shift and go to state 105


state 50

    (168) build_in_functions -> EXP . LPAREN argument RPAREN
    LPAREN          shift and go to state 106


state 51

    (169) build_in_functions -> COS . LPAREN argument RPAREN
    LPAREN          shift and go to state 107


state 52

    (170) build_in_functions -> SIN . LPAREN argument RPAREN
    LPAREN          shift and go to state 108


state 53

    (171) build_in_functions -> SQRT . LPAREN argument RPAREN
    LPAREN          shift and go to state 109


state 54

    (172) build_in_functions -> build_in_print .
    ESPACEDCONCAT   reduce using rule 172 (build_in_functions -> build_in_print .)
    CONCAT          reduce using rule 172 (build_in_functions -> build_in_print .)
    LBRACKET        reduce using rule 172 (build_in_functions -> build_in_print .)
    MODULE          reduce using rule 172 (build_in_functions -> build_in_print .)
    DIVIDE          reduce using rule 172 (build_in_functions -> build_in_print .)
    MULTIPLY        reduce using rule 172 (build_in_functions -> build_in_print .)
    ASTERPOWER      reduce using rule 172 (build_in_functions -> build_in_print .)
    POWER           reduce using rule 172 (build_in_functions -> build_in_print .)
    MINUS           reduce using rule 172 (build_in_functions -> build_in_print .)
    PLUS            reduce using rule 172 (build_in_functions -> build_in_print .)
    SEMICOLON       reduce using rule 172 (build_in_functions -> build_in_print .)
    $end            reduce using rule 172 (build_in_functions -> build_in_print .)
    RPAREN          reduce using rule 172 (build_in_functions -> build_in_print .)
    ASSIGN          reduce using rule 172 (build_in_functions -> build_in_print .)
    RBRACE          reduce using rule 172 (build_in_functions -> build_in_print .)
    OR              reduce using rule 172 (build_in_functions -> build_in_print .)
    SINCETHAT       reduce using rule 172 (build_in_functions -> build_in_print .)
    COMMA           reduce using rule 172 (build_in_functions -> build_in_print .)
    RBRACKET        reduce using rule 172 (build_in_functions -> build_in_print .)
    NOT_EQUAL       reduce using rule 172 (build_in_functions -> build_in_print .)
    EQUAL           reduce using rule 172 (build_in_functions -> build_in_print .)
    LESS_EQUAL      reduce using rule 172 (build_in_functions -> build_in_print .)
    GREATER_EQUAL   reduce using rule 172 (build_in_functions -> build_in_print .)
    LESS_THAN       reduce using rule 172 (build_in_functions -> build_in_print .)
    GREATER_THAN    reduce using rule 172 (build_in_functions -> build_in_print .)
    AS              reduce using rule 172 (build_in_functions -> build_in_print .)
    IN              reduce using rule 172 (build_in_functions -> build_in_print .)
    ELSE            reduce using rule 172 (build_in_functions -> build_in_print .)
    ELIF            reduce using rule 172 (build_in_functions -> build_in_print .)
    AND             reduce using rule 172 (build_in_functions -> build_in_print .)


state 55

    (173) build_in_functions -> build_in_range .
    ESPACEDCONCAT   reduce using rule 173 (build_in_functions -> build_in_range .)
    CONCAT          reduce using rule 173 (build_in_functions -> build_in_range .)
    LBRACKET        reduce using rule 173 (build_in_functions -> build_in_range .)
    MODULE          reduce using rule 173 (build_in_functions -> build_in_range .)
    DIVIDE          reduce using rule 173 (build_in_functions -> build_in_range .)
    MULTIPLY        reduce using rule 173 (build_in_functions -> build_in_range .)
    ASTERPOWER      reduce using rule 173 (build_in_functions -> build_in_range .)
    POWER           reduce using rule 173 (build_in_functions -> build_in_range .)
    MINUS           reduce using rule 173 (build_in_functions -> build_in_range .)
    PLUS            reduce using rule 173 (build_in_functions -> build_in_range .)
    SEMICOLON       reduce using rule 173 (build_in_functions -> build_in_range .)
    $end            reduce using rule 173 (build_in_functions -> build_in_range .)
    RPAREN          reduce using rule 173 (build_in_functions -> build_in_range .)
    ASSIGN          reduce using rule 173 (build_in_functions -> build_in_range .)
    RBRACE          reduce using rule 173 (build_in_functions -> build_in_range .)
    OR              reduce using rule 173 (build_in_functions -> build_in_range .)
    SINCETHAT       reduce using rule 173 (build_in_functions -> build_in_range .)
    COMMA           reduce using rule 173 (build_in_functions -> build_in_range .)
    RBRACKET        reduce using rule 173 (build_in_functions -> build_in_range .)
    NOT_EQUAL       reduce using rule 173 (build_in_functions -> build_in_range .)
    EQUAL           reduce using rule 173 (build_in_functions -> build_in_range .)
    LESS_EQUAL      reduce using rule 173 (build_in_functions -> build_in_range .)
    GREATER_EQUAL   reduce using rule 173 (build_in_functions -> build_in_range .)
    LESS_THAN       reduce using rule 173 (build_in_functions -> build_in_range .)
    GREATER_THAN    reduce using rule 173 (build_in_functions -> build_in_range .)
    AS              reduce using rule 173 (build_in_functions -> build_in_range .)
    IN              reduce using rule 173 (build_in_functions -> build_in_range .)
    ELSE            reduce using rule 173 (build_in_functions -> build_in_range .)
    ELIF            reduce using rule 173 (build_in_functions -> build_in_range .)
    AND             reduce using rule 173 (build_in_functions -> build_in_range .)


state 56

    (102) boolean_value -> FALSE .
    ESPACEDCONCAT   reduce using rule 102 (boolean_value -> FALSE .)
    CONCAT          reduce using rule 102 (boolean_value -> FALSE .)
    LBRACKET        reduce using rule 102 (boolean_value -> FALSE .)
    MODULE          reduce using rule 102 (boolean_value -> FALSE .)
    DIVIDE          reduce using rule 102 (boolean_value -> FALSE .)
    MULTIPLY        reduce using rule 102 (boolean_value -> FALSE .)
    ASTERPOWER      reduce using rule 102 (boolean_value -> FALSE .)
    POWER           reduce using rule 102 (boolean_value -> FALSE .)
    MINUS           reduce using rule 102 (boolean_value -> FALSE .)
    PLUS            reduce using rule 102 (boolean_value -> FALSE .)
    SEMICOLON       reduce using rule 102 (boolean_value -> FALSE .)
    $end            reduce using rule 102 (boolean_value -> FALSE .)
    RPAREN          reduce using rule 102 (boolean_value -> FALSE .)
    ASSIGN          reduce using rule 102 (boolean_value -> FALSE .)
    RBRACE          reduce using rule 102 (boolean_value -> FALSE .)
    OR              reduce using rule 102 (boolean_value -> FALSE .)
    SINCETHAT       reduce using rule 102 (boolean_value -> FALSE .)
    COMMA           reduce using rule 102 (boolean_value -> FALSE .)
    RBRACKET        reduce using rule 102 (boolean_value -> FALSE .)
    NOT_EQUAL       reduce using rule 102 (boolean_value -> FALSE .)
    EQUAL           reduce using rule 102 (boolean_value -> FALSE .)
    LESS_EQUAL      reduce using rule 102 (boolean_value -> FALSE .)
    GREATER_EQUAL   reduce using rule 102 (boolean_value -> FALSE .)
    LESS_THAN       reduce using rule 102 (boolean_value -> FALSE .)
    GREATER_THAN    reduce using rule 102 (boolean_value -> FALSE .)
    AS              reduce using rule 102 (boolean_value -> FALSE .)
    IN              reduce using rule 102 (boolean_value -> FALSE .)
    ELSE            reduce using rule 102 (boolean_value -> FALSE .)
    ELIF            reduce using rule 102 (boolean_value -> FALSE .)
    AND             reduce using rule 102 (boolean_value -> FALSE .)


state 57

    (103) boolean_value -> TRUE .
    ESPACEDCONCAT   reduce using rule 103 (boolean_value -> TRUE .)
    CONCAT          reduce using rule 103 (boolean_value -> TRUE .)
    LBRACKET        reduce using rule 103 (boolean_value -> TRUE .)
    MODULE          reduce using rule 103 (boolean_value -> TRUE .)
    DIVIDE          reduce using rule 103 (boolean_value -> TRUE .)
    MULTIPLY        reduce using rule 103 (boolean_value -> TRUE .)
    ASTERPOWER      reduce using rule 103 (boolean_value -> TRUE .)
    POWER           reduce using rule 103 (boolean_value -> TRUE .)
    MINUS           reduce using rule 103 (boolean_value -> TRUE .)
    PLUS            reduce using rule 103 (boolean_value -> TRUE .)
    SEMICOLON       reduce using rule 103 (boolean_value -> TRUE .)
    $end            reduce using rule 103 (boolean_value -> TRUE .)
    RPAREN          reduce using rule 103 (boolean_value -> TRUE .)
    ASSIGN          reduce using rule 103 (boolean_value -> TRUE .)
    RBRACE          reduce using rule 103 (boolean_value -> TRUE .)
    OR              reduce using rule 103 (boolean_value -> TRUE .)
    SINCETHAT       reduce using rule 103 (boolean_value -> TRUE .)
    COMMA           reduce using rule 103 (boolean_value -> TRUE .)
    RBRACKET        reduce using rule 103 (boolean_value -> TRUE .)
    NOT_EQUAL       reduce using rule 103 (boolean_value -> TRUE .)
    EQUAL           reduce using rule 103 (boolean_value -> TRUE .)
    LESS_EQUAL      reduce using rule 103 (boolean_value -> TRUE .)
    GREATER_EQUAL   reduce using rule 103 (boolean_value -> TRUE .)
    LESS_THAN       reduce using rule 103 (boolean_value -> TRUE .)
    GREATER_THAN    reduce using rule 103 (boolean_value -> TRUE .)
    AS              reduce using rule 103 (boolean_value -> TRUE .)
    IN              reduce using rule 103 (boolean_value -> TRUE .)
    ELSE            reduce using rule 103 (boolean_value -> TRUE .)
    ELIF            reduce using rule 103 (boolean_value -> TRUE .)
    AND             reduce using rule 103 (boolean_value -> TRUE .)


state 58

    (134) type_instanciation -> NEW . IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> NEW . IDENTIFIER LPAREN arguments_list RPAREN
    IDENTIFIER      shift and go to state 110


state 59

    (42) term -> factor .
    (43) term -> factor . MODULE term
    (44) term -> factor . DIVIDE term
    (45) term -> factor . MULTIPLY term
    (47) factor -> factor . ASTERPOWER base_exponent
    (48) factor -> factor . POWER base_exponent
    MINUS           reduce using rule 42 (term -> factor .)
    PLUS            reduce using rule 42 (term -> factor .)
    SEMICOLON       reduce using rule 42 (term -> factor .)
    $end            reduce using rule 42 (term -> factor .)
    RPAREN          reduce using rule 42 (term -> factor .)
    RBRACE          reduce using rule 42 (term -> factor .)
    OR              reduce using rule 42 (term -> factor .)
    SINCETHAT       reduce using rule 42 (term -> factor .)
    COMMA           reduce using rule 42 (term -> factor .)
    RBRACKET        reduce using rule 42 (term -> factor .)
    NOT_EQUAL       reduce using rule 42 (term -> factor .)
    EQUAL           reduce using rule 42 (term -> factor .)
    LESS_EQUAL      reduce using rule 42 (term -> factor .)
    GREATER_EQUAL   reduce using rule 42 (term -> factor .)
    LESS_THAN       reduce using rule 42 (term -> factor .)
    GREATER_THAN    reduce using rule 42 (term -> factor .)
    AS              reduce using rule 42 (term -> factor .)
    IN              reduce using rule 42 (term -> factor .)
    ELSE            reduce using rule 42 (term -> factor .)
    ELIF            reduce using rule 42 (term -> factor .)
    AND             reduce using rule 42 (term -> factor .)
    MODULE          shift and go to state 111
    DIVIDE          shift and go to state 112
    MULTIPLY        shift and go to state 113
    ASTERPOWER      shift and go to state 114
    POWER           shift and go to state 115


state 60

    (165) build_in_print -> PRINT . LPAREN argument RPAREN
    LPAREN          shift and go to state 116


state 61

    (164) build_in_range -> RANGE . LPAREN argument COMMA argument RPAREN
    LPAREN          shift and go to state 117


state 62

    (46) factor -> base_exponent .
    MODULE          reduce using rule 46 (factor -> base_exponent .)
    DIVIDE          reduce using rule 46 (factor -> base_exponent .)
    MULTIPLY        reduce using rule 46 (factor -> base_exponent .)
    ASTERPOWER      reduce using rule 46 (factor -> base_exponent .)
    POWER           reduce using rule 46 (factor -> base_exponent .)
    MINUS           reduce using rule 46 (factor -> base_exponent .)
    PLUS            reduce using rule 46 (factor -> base_exponent .)
    SEMICOLON       reduce using rule 46 (factor -> base_exponent .)
    $end            reduce using rule 46 (factor -> base_exponent .)
    RPAREN          reduce using rule 46 (factor -> base_exponent .)
    RBRACE          reduce using rule 46 (factor -> base_exponent .)
    OR              reduce using rule 46 (factor -> base_exponent .)
    SINCETHAT       reduce using rule 46 (factor -> base_exponent .)
    COMMA           reduce using rule 46 (factor -> base_exponent .)
    RBRACKET        reduce using rule 46 (factor -> base_exponent .)
    NOT_EQUAL       reduce using rule 46 (factor -> base_exponent .)
    EQUAL           reduce using rule 46 (factor -> base_exponent .)
    LESS_EQUAL      reduce using rule 46 (factor -> base_exponent .)
    GREATER_EQUAL   reduce using rule 46 (factor -> base_exponent .)
    LESS_THAN       reduce using rule 46 (factor -> base_exponent .)
    GREATER_THAN    reduce using rule 46 (factor -> base_exponent .)
    AS              reduce using rule 46 (factor -> base_exponent .)
    IN              reduce using rule 46 (factor -> base_exponent .)
    ELSE            reduce using rule 46 (factor -> base_exponent .)
    ELIF            reduce using rule 46 (factor -> base_exponent .)
    AND             reduce using rule 46 (factor -> base_exponent .)


state 63

    (24) identifier -> fully_typed_param .
    MODULE          reduce using rule 24 (identifier -> fully_typed_param .)
    DIVIDE          reduce using rule 24 (identifier -> fully_typed_param .)
    MULTIPLY        reduce using rule 24 (identifier -> fully_typed_param .)
    ASTERPOWER      reduce using rule 24 (identifier -> fully_typed_param .)
    POWER           reduce using rule 24 (identifier -> fully_typed_param .)
    MINUS           reduce using rule 24 (identifier -> fully_typed_param .)
    PLUS            reduce using rule 24 (identifier -> fully_typed_param .)
    SEMICOLON       reduce using rule 24 (identifier -> fully_typed_param .)
    $end            reduce using rule 24 (identifier -> fully_typed_param .)
    RPAREN          reduce using rule 24 (identifier -> fully_typed_param .)
    ASSIGN          reduce using rule 24 (identifier -> fully_typed_param .)
    RBRACE          reduce using rule 24 (identifier -> fully_typed_param .)
    OR              reduce using rule 24 (identifier -> fully_typed_param .)
    SINCETHAT       reduce using rule 24 (identifier -> fully_typed_param .)
    COMMA           reduce using rule 24 (identifier -> fully_typed_param .)
    RBRACKET        reduce using rule 24 (identifier -> fully_typed_param .)
    NOT_EQUAL       reduce using rule 24 (identifier -> fully_typed_param .)
    EQUAL           reduce using rule 24 (identifier -> fully_typed_param .)
    LESS_EQUAL      reduce using rule 24 (identifier -> fully_typed_param .)
    GREATER_EQUAL   reduce using rule 24 (identifier -> fully_typed_param .)
    LESS_THAN       reduce using rule 24 (identifier -> fully_typed_param .)
    GREATER_THAN    reduce using rule 24 (identifier -> fully_typed_param .)
    AS              reduce using rule 24 (identifier -> fully_typed_param .)
    IN              reduce using rule 24 (identifier -> fully_typed_param .)
    ELSE            reduce using rule 24 (identifier -> fully_typed_param .)
    ELIF            reduce using rule 24 (identifier -> fully_typed_param .)
    AND             reduce using rule 24 (identifier -> fully_typed_param .)


state 64

    (3) program_decl_list -> program_level_decl program_decl_list .
    $end            reduce using rule 3 (program_decl_list -> program_level_decl program_decl_list .)


state 65

    (8) inst_list -> inst SEMICOLON . inst_list
    (9) inst_list -> inst SEMICOLON .
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (10) inst_list -> . inst
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    $end            reduce using rule 9 (inst_list -> inst SEMICOLON .)
    RBRACE          reduce using rule 9 (inst_list -> inst SEMICOLON .)
    LPAREN          shift and go to state 13
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    inst                           shift and go to state 9
    inst_list                      shift and go to state 118
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 66

    (151) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body SEMICOLON
    (152) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body
    (153) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body SEMICOLON
    (154) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body
    (155) protocol_body -> . LBRACE virtual_method_list RBRACE
    EXTENDS         shift and go to state 119
    LBRACE          shift and go to state 121

    protocol_body                  shift and go to state 120

state 67

    (147) var_method -> IDENTIFIER DOT . function_call
    (145) var_attr -> IDENTIFIER DOT . var_attr
    (146) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 122

    function_call                  shift and go to state 123
    var_attr                       shift and go to state 124

state 68

    (132) function_call -> IDENTIFIER LPAREN . RPAREN
    (133) function_call -> IDENTIFIER LPAREN . arguments_list RPAREN
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 125
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    arguments_list                 shift and go to state 126
    argument                       shift and go to state 102
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 69

    (26) fully_typed_param -> IDENTIFIER type_anotation .
    MODULE          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    DIVIDE          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    MULTIPLY        reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ASTERPOWER      reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    POWER           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    MINUS           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    PLUS            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    SEMICOLON       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    $end            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    RPAREN          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ASSIGN          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    RBRACE          reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    OR              reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    SINCETHAT       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    COMMA           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    RBRACKET        reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    NOT_EQUAL       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    EQUAL           reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    LESS_EQUAL      reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    GREATER_EQUAL   reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    LESS_THAN       reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    GREATER_THAN    reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    AS              reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    IN              reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ELSE            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    ELIF            reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)
    AND             reduce using rule 26 (fully_typed_param -> IDENTIFIER type_anotation .)


state 70

    (27) type_anotation -> COLON . BOOLEAN_TYPE
    (28) type_anotation -> COLON . NUMBER_TYPE
    (29) type_anotation -> COLON . IDENTIFIER
    BOOLEAN_TYPE    shift and go to state 128
    NUMBER_TYPE     shift and go to state 129
    IDENTIFIER      shift and go to state 130


state 71

    (63) function_declaration -> func_decl_id LPAREN . RPAREN function_inline_declaration
    (65) function_declaration -> func_decl_id LPAREN . RPAREN function_full_declaration SEMICOLON
    (67) function_declaration -> func_decl_id LPAREN . RPAREN function_full_declaration
    (112) parameters -> LPAREN . arguments_list RPAREN
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 131
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    arguments_list                 shift and go to state 132
    argument                       shift and go to state 102
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 72

    (64) function_declaration -> func_decl_id parameters . function_inline_declaration
    (66) function_declaration -> func_decl_id parameters . function_full_declaration SEMICOLON
    (68) function_declaration -> func_decl_id parameters . function_full_declaration
    (71) function_inline_declaration -> . type_anotation RETURN inst SEMICOLON
    (72) function_inline_declaration -> . RETURN inst SEMICOLON
    (70) function_full_declaration -> . scope
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 136
    COLON           shift and go to state 70
    LBRACE          shift and go to state 43

    function_inline_declaration    shift and go to state 133
    function_full_declaration      shift and go to state 134
    type_anotation                 shift and go to state 135
    scope                          shift and go to state 137

state 73

    (49) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    aritmetic_operation            shift and go to state 75
    term                           shift and go to state 38
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 74

    (11) inst -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 138


state 75

    (49) base_exponent -> LPAREN aritmetic_operation . RPAREN
    RPAREN          shift and go to state 139


state 76

    (25) identifier -> atom .
    (143) var_use -> atom . LBRACKET expression RBRACKET
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)
    ASSIGN          reduce using rule 25 (identifier -> atom .)
    SEMICOLON       reduce using rule 25 (identifier -> atom .)
    $end            reduce using rule 25 (identifier -> atom .)
    RBRACE          reduce using rule 25 (identifier -> atom .)
    OR              reduce using rule 25 (identifier -> atom .)
    SINCETHAT       reduce using rule 25 (identifier -> atom .)
    COMMA           reduce using rule 25 (identifier -> atom .)
    RBRACKET        reduce using rule 25 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 25 (identifier -> atom .)
    EQUAL           reduce using rule 25 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 25 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> atom .)
    LESS_THAN       reduce using rule 25 (identifier -> atom .)
    GREATER_THAN    reduce using rule 25 (identifier -> atom .)
    AS              reduce using rule 25 (identifier -> atom .)
    IN              reduce using rule 25 (identifier -> atom .)
    ELSE            reduce using rule 25 (identifier -> atom .)
    ELIF            reduce using rule 25 (identifier -> atom .)
    AND             reduce using rule 25 (identifier -> atom .)
    LBRACKET        shift and go to state 83


state 77

    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (147) var_method -> IDENTIFIER . DOT function_call
    (144) var_use -> IDENTIFIER .
    (132) function_call -> IDENTIFIER . LPAREN RPAREN
    (133) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    DOT             shift and go to state 67
    LBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 144 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 144 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 144 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 144 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 144 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 144 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 144 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 144 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 144 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 144 (var_use -> IDENTIFIER .)
    $end            reduce using rule 144 (var_use -> IDENTIFIER .)
    RBRACE          reduce using rule 144 (var_use -> IDENTIFIER .)
    OR              reduce using rule 144 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 144 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 144 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 144 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 144 (var_use -> IDENTIFIER .)
    AS              reduce using rule 144 (var_use -> IDENTIFIER .)
    IN              reduce using rule 144 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 144 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 144 (var_use -> IDENTIFIER .)
    AND             reduce using rule 144 (var_use -> IDENTIFIER .)
    LPAREN          shift and go to state 68
    COLON           shift and go to state 70

    type_anotation                 shift and go to state 69

state 78

    (59) atom -> var_use .
    LBRACKET        reduce using rule 59 (atom -> var_use .)
    MODULE          reduce using rule 59 (atom -> var_use .)
    DIVIDE          reduce using rule 59 (atom -> var_use .)
    MULTIPLY        reduce using rule 59 (atom -> var_use .)
    ASTERPOWER      reduce using rule 59 (atom -> var_use .)
    POWER           reduce using rule 59 (atom -> var_use .)
    MINUS           reduce using rule 59 (atom -> var_use .)
    PLUS            reduce using rule 59 (atom -> var_use .)
    RPAREN          reduce using rule 59 (atom -> var_use .)
    ASSIGN          reduce using rule 59 (atom -> var_use .)
    SEMICOLON       reduce using rule 59 (atom -> var_use .)
    $end            reduce using rule 59 (atom -> var_use .)
    RBRACE          reduce using rule 59 (atom -> var_use .)
    OR              reduce using rule 59 (atom -> var_use .)
    SINCETHAT       reduce using rule 59 (atom -> var_use .)
    COMMA           reduce using rule 59 (atom -> var_use .)
    RBRACKET        reduce using rule 59 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 59 (atom -> var_use .)
    EQUAL           reduce using rule 59 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 59 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 59 (atom -> var_use .)
    LESS_THAN       reduce using rule 59 (atom -> var_use .)
    GREATER_THAN    reduce using rule 59 (atom -> var_use .)
    AS              reduce using rule 59 (atom -> var_use .)
    IN              reduce using rule 59 (atom -> var_use .)
    ELSE            reduce using rule 59 (atom -> var_use .)
    ELIF            reduce using rule 59 (atom -> var_use .)
    AND             reduce using rule 59 (atom -> var_use .)


state 79

    (104) type_declaration -> TYPE IDENTIFIER . inherits_type decl_body SEMICOLON
    (105) type_declaration -> TYPE IDENTIFIER . decl_body SEMICOLON
    (106) type_declaration -> TYPE IDENTIFIER . inherits_type decl_body
    (107) type_declaration -> TYPE IDENTIFIER . decl_body
    (108) type_declaration -> TYPE IDENTIFIER . parameters inherits_type decl_body SEMICOLON
    (109) type_declaration -> TYPE IDENTIFIER . parameters decl_body SEMICOLON
    (110) type_declaration -> TYPE IDENTIFIER . parameters inherits_type decl_body
    (111) type_declaration -> TYPE IDENTIFIER . parameters decl_body
    (113) inherits_type -> . INHERITS IDENTIFIER parameters
    (114) inherits_type -> . INHERITS IDENTIFIER
    (115) decl_body -> . LBRACE decl_list RBRACE
    (116) decl_body -> . LBRACE RBRACE
    (112) parameters -> . LPAREN arguments_list RPAREN
    INHERITS        shift and go to state 143
    LBRACE          shift and go to state 144
    LPAREN          shift and go to state 145

    inherits_type                  shift and go to state 140
    decl_body                      shift and go to state 141
    parameters                     shift and go to state 142

state 80

    (69) func_decl_id -> FUNCTION IDENTIFIER .
    LPAREN          reduce using rule 69 (func_decl_id -> FUNCTION IDENTIFIER .)


state 81

    (36) expression -> atom ESPACEDCONCAT . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    atom                           shift and go to state 21
    expression                     shift and go to state 146
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 82

    (37) expression -> atom CONCAT . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    atom                           shift and go to state 21
    expression                     shift and go to state 147
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 83

    (143) var_use -> atom LBRACKET . expression RBRACKET
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    atom                           shift and go to state 21
    expression                     shift and go to state 148
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 84

    (30) scope_list -> scope scope_list .
    SEMICOLON       reduce using rule 30 (scope_list -> scope scope_list .)
    $end            reduce using rule 30 (scope_list -> scope scope_list .)
    RBRACE          reduce using rule 30 (scope_list -> scope scope_list .)
    AS              reduce using rule 30 (scope_list -> scope scope_list .)
    COMMA           reduce using rule 30 (scope_list -> scope scope_list .)
    IN              reduce using rule 30 (scope_list -> scope scope_list .)
    ELSE            reduce using rule 30 (scope_list -> scope scope_list .)
    ELIF            reduce using rule 30 (scope_list -> scope scope_list .)


state 85

    (15) var_dec -> LET var_init_list . IN var_decl_expr
    IN              shift and go to state 149


state 86

    (20) var_init_list -> var_init . COMMA var_init_list
    (21) var_init_list -> var_init .
    COMMA           shift and go to state 150
    IN              reduce using rule 21 (var_init_list -> var_init .)


state 87

    (22) var_init -> identifier . ASSIGN inst type_downcast
    (23) var_init -> identifier . ASSIGN inst
    ASSIGN          shift and go to state 151


state 88

    (61) var_asign -> var_use ASSIGN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    var_use                        shift and go to state 28
    expression                     shift and go to state 152
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 89

    (62) var_asign -> var_use DEST_ASSIGN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    var_use                        shift and go to state 28
    expression                     shift and go to state 153
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 90

    (40) aritmetic_operation -> term MINUS . aritmetic_operation
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    term                           shift and go to state 38
    aritmetic_operation            shift and go to state 154
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 91

    (41) aritmetic_operation -> term PLUS . aritmetic_operation
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    term                           shift and go to state 38
    aritmetic_operation            shift and go to state 155
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 92

    (87) for_loop -> FOR LPAREN . identifier IN expression RPAREN expression
    (88) for_loop -> FOR LPAREN . identifier IN expression RPAREN scope
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    identifier                     shift and go to state 156
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 93

    (73) conditional -> IF full_conditional .
    SEMICOLON       reduce using rule 73 (conditional -> IF full_conditional .)
    $end            reduce using rule 73 (conditional -> IF full_conditional .)
    RBRACE          reduce using rule 73 (conditional -> IF full_conditional .)
    COMMA           reduce using rule 73 (conditional -> IF full_conditional .)
    RBRACKET        reduce using rule 73 (conditional -> IF full_conditional .)
    RPAREN          reduce using rule 73 (conditional -> IF full_conditional .)
    OR              reduce using rule 73 (conditional -> IF full_conditional .)
    SINCETHAT       reduce using rule 73 (conditional -> IF full_conditional .)
    NOT_EQUAL       reduce using rule 73 (conditional -> IF full_conditional .)
    EQUAL           reduce using rule 73 (conditional -> IF full_conditional .)
    LESS_EQUAL      reduce using rule 73 (conditional -> IF full_conditional .)
    GREATER_EQUAL   reduce using rule 73 (conditional -> IF full_conditional .)
    LESS_THAN       reduce using rule 73 (conditional -> IF full_conditional .)
    GREATER_THAN    reduce using rule 73 (conditional -> IF full_conditional .)
    AS              reduce using rule 73 (conditional -> IF full_conditional .)
    IN              reduce using rule 73 (conditional -> IF full_conditional .)
    ELSE            reduce using rule 73 (conditional -> IF full_conditional .)
    ELIF            reduce using rule 73 (conditional -> IF full_conditional .)
    AND             reduce using rule 73 (conditional -> IF full_conditional .)


state 94

    (74) conditional -> IF inline_conditional .
    SEMICOLON       reduce using rule 74 (conditional -> IF inline_conditional .)
    $end            reduce using rule 74 (conditional -> IF inline_conditional .)
    RBRACE          reduce using rule 74 (conditional -> IF inline_conditional .)
    COMMA           reduce using rule 74 (conditional -> IF inline_conditional .)
    RBRACKET        reduce using rule 74 (conditional -> IF inline_conditional .)
    RPAREN          reduce using rule 74 (conditional -> IF inline_conditional .)
    OR              reduce using rule 74 (conditional -> IF inline_conditional .)
    SINCETHAT       reduce using rule 74 (conditional -> IF inline_conditional .)
    NOT_EQUAL       reduce using rule 74 (conditional -> IF inline_conditional .)
    EQUAL           reduce using rule 74 (conditional -> IF inline_conditional .)
    LESS_EQUAL      reduce using rule 74 (conditional -> IF inline_conditional .)
    GREATER_EQUAL   reduce using rule 74 (conditional -> IF inline_conditional .)
    LESS_THAN       reduce using rule 74 (conditional -> IF inline_conditional .)
    GREATER_THAN    reduce using rule 74 (conditional -> IF inline_conditional .)
    AS              reduce using rule 74 (conditional -> IF inline_conditional .)
    IN              reduce using rule 74 (conditional -> IF inline_conditional .)
    ELSE            reduce using rule 74 (conditional -> IF inline_conditional .)
    ELIF            reduce using rule 74 (conditional -> IF inline_conditional .)
    AND             reduce using rule 74 (conditional -> IF inline_conditional .)


state 95

    (76) full_conditional -> LPAREN . conditional_expression RPAREN scope_list else_elif_statement
    (75) inline_conditional -> LPAREN . conditional_expression RPAREN expression else_elif_statement
    (89) conditional_expression -> . condition
    (90) conditional_expression -> . NOT condition
    (91) conditional_expression -> . condition OR conditional_expression
    (92) conditional_expression -> . condition AND conditional_expression
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    conditional_expression         shift and go to state 158
    expression                     shift and go to state 159
    condition                      shift and go to state 160
    comparation                    shift and go to state 163
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 96

    (83) while_loop -> WHILE LPAREN . expression RPAREN expression
    (84) while_loop -> WHILE LPAREN . expression RPAREN scope
    (85) while_loop -> WHILE LPAREN . conditional_expression RPAREN expression
    (86) while_loop -> WHILE LPAREN . conditional_expression RPAREN scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (89) conditional_expression -> . condition
    (90) conditional_expression -> . NOT condition
    (91) conditional_expression -> . condition OR conditional_expression
    (92) conditional_expression -> . condition AND conditional_expression
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    expression                     shift and go to state 164
    conditional_expression         shift and go to state 165
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    condition                      shift and go to state 160
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    comparation                    shift and go to state 163
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 97

    (32) scope -> LBRACE RBRACE .
    LBRACE          reduce using rule 32 (scope -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 32 (scope -> LBRACE RBRACE .)
    $end            reduce using rule 32 (scope -> LBRACE RBRACE .)
    RBRACE          reduce using rule 32 (scope -> LBRACE RBRACE .)
    AS              reduce using rule 32 (scope -> LBRACE RBRACE .)
    COMMA           reduce using rule 32 (scope -> LBRACE RBRACE .)
    IN              reduce using rule 32 (scope -> LBRACE RBRACE .)
    ELSE            reduce using rule 32 (scope -> LBRACE RBRACE .)
    ELIF            reduce using rule 32 (scope -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 32 (scope -> LBRACE RBRACE .)
    TYPE            reduce using rule 32 (scope -> LBRACE RBRACE .)
    LPAREN          reduce using rule 32 (scope -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 32 (scope -> LBRACE RBRACE .)
    LET             reduce using rule 32 (scope -> LBRACE RBRACE .)
    NUMBER          reduce using rule 32 (scope -> LBRACE RBRACE .)
    STRING          reduce using rule 32 (scope -> LBRACE RBRACE .)
    FOR             reduce using rule 32 (scope -> LBRACE RBRACE .)
    IF              reduce using rule 32 (scope -> LBRACE RBRACE .)
    WHILE           reduce using rule 32 (scope -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 32 (scope -> LBRACE RBRACE .)
    E_CONST         reduce using rule 32 (scope -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 32 (scope -> LBRACE RBRACE .)
    RAND            reduce using rule 32 (scope -> LBRACE RBRACE .)
    LOG             reduce using rule 32 (scope -> LBRACE RBRACE .)
    EXP             reduce using rule 32 (scope -> LBRACE RBRACE .)
    COS             reduce using rule 32 (scope -> LBRACE RBRACE .)
    SIN             reduce using rule 32 (scope -> LBRACE RBRACE .)
    SQRT            reduce using rule 32 (scope -> LBRACE RBRACE .)
    FALSE           reduce using rule 32 (scope -> LBRACE RBRACE .)
    TRUE            reduce using rule 32 (scope -> LBRACE RBRACE .)
    NEW             reduce using rule 32 (scope -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 32 (scope -> LBRACE RBRACE .)
    PRINT           reduce using rule 32 (scope -> LBRACE RBRACE .)
    RANGE           reduce using rule 32 (scope -> LBRACE RBRACE .)
    OR              reduce using rule 32 (scope -> LBRACE RBRACE .)
    SINCETHAT       reduce using rule 32 (scope -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 32 (scope -> LBRACE RBRACE .)
    RPAREN          reduce using rule 32 (scope -> LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 32 (scope -> LBRACE RBRACE .)
    EQUAL           reduce using rule 32 (scope -> LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 32 (scope -> LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 32 (scope -> LBRACE RBRACE .)
    LESS_THAN       reduce using rule 32 (scope -> LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 32 (scope -> LBRACE RBRACE .)
    AND             reduce using rule 32 (scope -> LBRACE RBRACE .)


state 98

    (33) scope -> LBRACE inst_list . RBRACE
    RBRACE          shift and go to state 166


state 99

    (160) vector -> LBRACKET vector_decl . RBRACKET
    RBRACKET        shift and go to state 167


state 100

    (161) vector_decl -> expression . OR identifier IN expression
    (162) vector_decl -> expression . SINCETHAT identifier IN expression
    (141) argument -> expression .
    OR              shift and go to state 168
    SINCETHAT       shift and go to state 169
    COMMA           reduce using rule 141 (argument -> expression .)
    RBRACKET        reduce using rule 141 (argument -> expression .)


state 101

    (163) vector_decl -> arguments_list .
    RBRACKET        reduce using rule 163 (vector_decl -> arguments_list .)


state 102

    (138) arguments_list -> argument . COMMA arguments_list
    (139) arguments_list -> argument .
    COMMA           shift and go to state 170
    RBRACKET        reduce using rule 139 (arguments_list -> argument .)
    RPAREN          reduce using rule 139 (arguments_list -> argument .)


state 103

    (140) argument -> conditional .
    COMMA           reduce using rule 140 (argument -> conditional .)
    RBRACKET        reduce using rule 140 (argument -> conditional .)
    RPAREN          reduce using rule 140 (argument -> conditional .)


state 104

    (166) build_in_functions -> RAND LPAREN . RPAREN
    RPAREN          shift and go to state 171


state 105

    (167) build_in_functions -> LOG LPAREN . argument COMMA argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 172
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 106

    (168) build_in_functions -> EXP LPAREN . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 173
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 107

    (169) build_in_functions -> COS LPAREN . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 174
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 108

    (170) build_in_functions -> SIN LPAREN . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 175
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 109

    (171) build_in_functions -> SQRT LPAREN . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 176
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 110

    (134) type_instanciation -> NEW IDENTIFIER . LPAREN RPAREN
    (135) type_instanciation -> NEW IDENTIFIER . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 177


state 111

    (43) term -> factor MODULE . term
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    factor                         shift and go to state 59
    term                           shift and go to state 178
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 112

    (44) term -> factor DIVIDE . term
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    factor                         shift and go to state 59
    term                           shift and go to state 179
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 113

    (45) term -> factor MULTIPLY . term
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    factor                         shift and go to state 59
    term                           shift and go to state 180
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 114

    (47) factor -> factor ASTERPOWER . base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    base_exponent                  shift and go to state 181
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 115

    (48) factor -> factor POWER . base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    base_exponent                  shift and go to state 182
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 116

    (165) build_in_print -> PRINT LPAREN . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 183
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 117

    (164) build_in_range -> RANGE LPAREN . argument COMMA argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 184
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 118

    (8) inst_list -> inst SEMICOLON inst_list .
    $end            reduce using rule 8 (inst_list -> inst SEMICOLON inst_list .)
    RBRACE          reduce using rule 8 (inst_list -> inst SEMICOLON inst_list .)


state 119

    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body SEMICOLON
    (152) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 185


state 120

    (153) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body . SEMICOLON
    (154) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 186
    PROTOCOL        reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TYPE            reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LET             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    STRING          reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FOR             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IF              reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    WHILE           reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RAND            reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LOG             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    EXP             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    COS             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SIN             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SQRT            reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FALSE           reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TRUE            reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NEW             reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PRINT           reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RANGE           reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    $end            reduce using rule 154 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)


state 121

    (155) protocol_body -> LBRACE . virtual_method_list RBRACE
    (156) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (157) virtual_method_list -> . virtual_method SEMICOLON
    (158) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    (159) virtual_method -> . IDENTIFIER parameters type_anotation
    IDENTIFIER      shift and go to state 189

    virtual_method_list            shift and go to state 187
    virtual_method                 shift and go to state 188

state 122

    (146) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (132) function_call -> IDENTIFIER . LPAREN RPAREN
    (133) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACE          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LPAREN          shift and go to state 68
    DOT             shift and go to state 190


state 123

    (147) var_method -> IDENTIFIER DOT function_call .
    ESPACEDCONCAT   reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    CONCAT          reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    LBRACKET        reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    MODULE          reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    DIVIDE          reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    MULTIPLY        reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    ASTERPOWER      reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    POWER           reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    MINUS           reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    PLUS            reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    SEMICOLON       reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    $end            reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    RPAREN          reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    ASSIGN          reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    RBRACE          reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    OR              reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    SINCETHAT       reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    COMMA           reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    RBRACKET        reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    NOT_EQUAL       reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    EQUAL           reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    LESS_EQUAL      reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_EQUAL   reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    LESS_THAN       reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_THAN    reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    AS              reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    IN              reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    ELSE            reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    ELIF            reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)
    AND             reduce using rule 147 (var_method -> IDENTIFIER DOT function_call .)


state 124

    (145) var_attr -> IDENTIFIER DOT var_attr .
    ASSIGN          reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    DEST_ASSIGN     reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    ESPACEDCONCAT   reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    CONCAT          reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    LBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    MODULE          reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    DIVIDE          reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    MULTIPLY        reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    ASTERPOWER      reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    POWER           reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    MINUS           reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    PLUS            reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    SEMICOLON       reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    $end            reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    RPAREN          reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    RBRACE          reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    OR              reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    SINCETHAT       reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    COMMA           reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    RBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    NOT_EQUAL       reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    EQUAL           reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_EQUAL      reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_EQUAL   reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_THAN       reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_THAN    reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    AS              reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    IN              reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    ELSE            reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    ELIF            reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)
    AND             reduce using rule 145 (var_attr -> IDENTIFIER DOT var_attr .)


state 125

    (132) function_call -> IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 126

    (133) function_call -> IDENTIFIER LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 191


state 127

    (141) argument -> expression .
    COMMA           reduce using rule 141 (argument -> expression .)
    RPAREN          reduce using rule 141 (argument -> expression .)
    RBRACKET        reduce using rule 141 (argument -> expression .)


state 128

    (27) type_anotation -> COLON BOOLEAN_TYPE .
    MODULE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    DIVIDE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    MULTIPLY        reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ASTERPOWER      reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    POWER           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    MINUS           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    PLUS            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    SEMICOLON       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    $end            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RBRACE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    OR              reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    SINCETHAT       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    COMMA           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RBRACKET        reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RPAREN          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    NOT_EQUAL       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    EQUAL           reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    LESS_EQUAL      reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    GREATER_EQUAL   reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    LESS_THAN       reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    GREATER_THAN    reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    AS              reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    IN              reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ELSE            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ELIF            reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    AND             reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    RETURN          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    ASSIGN          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)
    LBRACE          reduce using rule 27 (type_anotation -> COLON BOOLEAN_TYPE .)


state 129

    (28) type_anotation -> COLON NUMBER_TYPE .
    MODULE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    DIVIDE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    MULTIPLY        reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ASTERPOWER      reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    POWER           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    MINUS           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    PLUS            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    SEMICOLON       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    $end            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RBRACE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    OR              reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    SINCETHAT       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    COMMA           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RBRACKET        reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RPAREN          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    NOT_EQUAL       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    EQUAL           reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    LESS_EQUAL      reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    GREATER_EQUAL   reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    LESS_THAN       reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    GREATER_THAN    reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    AS              reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    IN              reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ELSE            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ELIF            reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    AND             reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    RETURN          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    ASSIGN          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)
    LBRACE          reduce using rule 28 (type_anotation -> COLON NUMBER_TYPE .)


state 130

    (29) type_anotation -> COLON IDENTIFIER .
    MODULE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    DIVIDE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    MULTIPLY        reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ASTERPOWER      reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    POWER           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    MINUS           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    PLUS            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    SEMICOLON       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    $end            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RBRACE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    OR              reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    SINCETHAT       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    COMMA           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RBRACKET        reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RPAREN          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    NOT_EQUAL       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    EQUAL           reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    LESS_EQUAL      reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    LESS_THAN       reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    GREATER_THAN    reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    AS              reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    IN              reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ELSE            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ELIF            reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    AND             reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    RETURN          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    ASSIGN          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)
    LBRACE          reduce using rule 29 (type_anotation -> COLON IDENTIFIER .)


state 131

    (63) function_declaration -> func_decl_id LPAREN RPAREN . function_inline_declaration
    (65) function_declaration -> func_decl_id LPAREN RPAREN . function_full_declaration SEMICOLON
    (67) function_declaration -> func_decl_id LPAREN RPAREN . function_full_declaration
    (71) function_inline_declaration -> . type_anotation RETURN inst SEMICOLON
    (72) function_inline_declaration -> . RETURN inst SEMICOLON
    (70) function_full_declaration -> . scope
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 136
    COLON           shift and go to state 70
    LBRACE          shift and go to state 43

    function_inline_declaration    shift and go to state 192
    function_full_declaration      shift and go to state 193
    type_anotation                 shift and go to state 135
    scope                          shift and go to state 137

state 132

    (112) parameters -> LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 194


state 133

    (64) function_declaration -> func_decl_id parameters function_inline_declaration .
    PROTOCOL        reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    TYPE            reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LPAREN          reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    FUNCTION        reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LET             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    NUMBER          reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    STRING          reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    FOR             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    IF              reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    WHILE           reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LBRACE          reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    IDENTIFIER      reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    E_CONST         reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    PI_CONST        reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    RAND            reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LOG             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    EXP             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    COS             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    SIN             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    SQRT            reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    FALSE           reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    TRUE            reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    NEW             reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    LBRACKET        reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    PRINT           reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    RANGE           reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)
    $end            reduce using rule 64 (function_declaration -> func_decl_id parameters function_inline_declaration .)


state 134

    (66) function_declaration -> func_decl_id parameters function_full_declaration . SEMICOLON
    (68) function_declaration -> func_decl_id parameters function_full_declaration .
    SEMICOLON       shift and go to state 195
    PROTOCOL        reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    TYPE            reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LPAREN          reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    FUNCTION        reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LET             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    NUMBER          reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    STRING          reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    FOR             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    IF              reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    WHILE           reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LBRACE          reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    IDENTIFIER      reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    E_CONST         reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    PI_CONST        reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    RAND            reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LOG             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    EXP             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    COS             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    SIN             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    SQRT            reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    FALSE           reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    TRUE            reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    NEW             reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    LBRACKET        reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    PRINT           reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    RANGE           reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)
    $end            reduce using rule 68 (function_declaration -> func_decl_id parameters function_full_declaration .)


state 135

    (71) function_inline_declaration -> type_anotation . RETURN inst SEMICOLON
    RETURN          shift and go to state 196


state 136

    (72) function_inline_declaration -> RETURN . inst SEMICOLON
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    inst                           shift and go to state 197
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 137

    (70) function_full_declaration -> scope .
    SEMICOLON       reduce using rule 70 (function_full_declaration -> scope .)
    PROTOCOL        reduce using rule 70 (function_full_declaration -> scope .)
    TYPE            reduce using rule 70 (function_full_declaration -> scope .)
    LPAREN          reduce using rule 70 (function_full_declaration -> scope .)
    FUNCTION        reduce using rule 70 (function_full_declaration -> scope .)
    LET             reduce using rule 70 (function_full_declaration -> scope .)
    NUMBER          reduce using rule 70 (function_full_declaration -> scope .)
    STRING          reduce using rule 70 (function_full_declaration -> scope .)
    FOR             reduce using rule 70 (function_full_declaration -> scope .)
    IF              reduce using rule 70 (function_full_declaration -> scope .)
    WHILE           reduce using rule 70 (function_full_declaration -> scope .)
    LBRACE          reduce using rule 70 (function_full_declaration -> scope .)
    IDENTIFIER      reduce using rule 70 (function_full_declaration -> scope .)
    E_CONST         reduce using rule 70 (function_full_declaration -> scope .)
    PI_CONST        reduce using rule 70 (function_full_declaration -> scope .)
    RAND            reduce using rule 70 (function_full_declaration -> scope .)
    LOG             reduce using rule 70 (function_full_declaration -> scope .)
    EXP             reduce using rule 70 (function_full_declaration -> scope .)
    COS             reduce using rule 70 (function_full_declaration -> scope .)
    SIN             reduce using rule 70 (function_full_declaration -> scope .)
    SQRT            reduce using rule 70 (function_full_declaration -> scope .)
    FALSE           reduce using rule 70 (function_full_declaration -> scope .)
    TRUE            reduce using rule 70 (function_full_declaration -> scope .)
    NEW             reduce using rule 70 (function_full_declaration -> scope .)
    LBRACKET        reduce using rule 70 (function_full_declaration -> scope .)
    PRINT           reduce using rule 70 (function_full_declaration -> scope .)
    RANGE           reduce using rule 70 (function_full_declaration -> scope .)
    $end            reduce using rule 70 (function_full_declaration -> scope .)


state 138

    (11) inst -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    RBRACE          reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 11 (inst -> LPAREN var_dec RPAREN .)


state 139

    (49) base_exponent -> LPAREN aritmetic_operation RPAREN .
    MODULE          reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    DIVIDE          reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MULTIPLY        reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ASTERPOWER      reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    POWER           reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MINUS           reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    PLUS            reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SEMICOLON       reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    $end            reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RPAREN          reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RBRACE          reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    OR              reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SINCETHAT       reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    COMMA           reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RBRACKET        reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    NOT_EQUAL       reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    EQUAL           reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_EQUAL      reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_EQUAL   reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_THAN       reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_THAN    reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AS              reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    IN              reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELSE            reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELIF            reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AND             reduce using rule 49 (base_exponent -> LPAREN aritmetic_operation RPAREN .)


state 140

    (104) type_declaration -> TYPE IDENTIFIER inherits_type . decl_body SEMICOLON
    (106) type_declaration -> TYPE IDENTIFIER inherits_type . decl_body
    (115) decl_body -> . LBRACE decl_list RBRACE
    (116) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 144

    decl_body                      shift and go to state 198

state 141

    (105) type_declaration -> TYPE IDENTIFIER decl_body . SEMICOLON
    (107) type_declaration -> TYPE IDENTIFIER decl_body .
    SEMICOLON       shift and go to state 199
    PROTOCOL        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    TYPE            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LPAREN          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FUNCTION        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LET             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    NUMBER          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    STRING          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FOR             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    IF              reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    WHILE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LBRACE          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    IDENTIFIER      reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    E_CONST         reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PI_CONST        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    RAND            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LOG             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    EXP             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    COS             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    SIN             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    SQRT            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    FALSE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    TRUE            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    NEW             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    LBRACKET        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    PRINT           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    RANGE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)
    $end            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER decl_body .)


state 142

    (108) type_declaration -> TYPE IDENTIFIER parameters . inherits_type decl_body SEMICOLON
    (109) type_declaration -> TYPE IDENTIFIER parameters . decl_body SEMICOLON
    (110) type_declaration -> TYPE IDENTIFIER parameters . inherits_type decl_body
    (111) type_declaration -> TYPE IDENTIFIER parameters . decl_body
    (113) inherits_type -> . INHERITS IDENTIFIER parameters
    (114) inherits_type -> . INHERITS IDENTIFIER
    (115) decl_body -> . LBRACE decl_list RBRACE
    (116) decl_body -> . LBRACE RBRACE
    INHERITS        shift and go to state 143
    LBRACE          shift and go to state 144

    inherits_type                  shift and go to state 200
    decl_body                      shift and go to state 201

state 143

    (113) inherits_type -> INHERITS . IDENTIFIER parameters
    (114) inherits_type -> INHERITS . IDENTIFIER
    IDENTIFIER      shift and go to state 202


state 144

    (115) decl_body -> LBRACE . decl_list RBRACE
    (116) decl_body -> LBRACE . RBRACE
    (117) decl_list -> . decl SEMICOLON decl_list
    (118) decl_list -> . decl SEMICOLON
    (119) decl -> . method_declaration
    (120) decl -> . atribute_declaration
    (123) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (124) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (125) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (126) method_declaration -> . IDENTIFIER parameters type_anotation function_full_declaration
    (127) method_declaration -> . IDENTIFIER parameters type_anotation RETURN expression
    (128) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (129) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (130) method_declaration -> . IDENTIFIER parameters function_full_declaration
    (131) method_declaration -> . IDENTIFIER parameters RETURN expression
    (121) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (122) atribute_declaration -> . identifier ASSIGN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          shift and go to state 204
    IDENTIFIER      shift and go to state 208
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    decl_list                      shift and go to state 203
    decl                           shift and go to state 205
    method_declaration             shift and go to state 206
    atribute_declaration           shift and go to state 207
    identifier                     shift and go to state 209
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 145

    (112) parameters -> LPAREN . arguments_list RPAREN
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    arguments_list                 shift and go to state 132
    argument                       shift and go to state 102
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 146

    (36) expression -> atom ESPACEDCONCAT expression .
    SEMICOLON       reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    $end            reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    RBRACE          reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    OR              reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    SINCETHAT       reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    COMMA           reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    RBRACKET        reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    RPAREN          reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    NOT_EQUAL       reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    EQUAL           reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    LESS_EQUAL      reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_EQUAL   reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    LESS_THAN       reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_THAN    reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    AS              reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    IN              reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    ELSE            reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    ELIF            reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)
    AND             reduce using rule 36 (expression -> atom ESPACEDCONCAT expression .)


state 147

    (37) expression -> atom CONCAT expression .
    SEMICOLON       reduce using rule 37 (expression -> atom CONCAT expression .)
    $end            reduce using rule 37 (expression -> atom CONCAT expression .)
    RBRACE          reduce using rule 37 (expression -> atom CONCAT expression .)
    OR              reduce using rule 37 (expression -> atom CONCAT expression .)
    SINCETHAT       reduce using rule 37 (expression -> atom CONCAT expression .)
    COMMA           reduce using rule 37 (expression -> atom CONCAT expression .)
    RBRACKET        reduce using rule 37 (expression -> atom CONCAT expression .)
    RPAREN          reduce using rule 37 (expression -> atom CONCAT expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> atom CONCAT expression .)
    EQUAL           reduce using rule 37 (expression -> atom CONCAT expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> atom CONCAT expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> atom CONCAT expression .)
    LESS_THAN       reduce using rule 37 (expression -> atom CONCAT expression .)
    GREATER_THAN    reduce using rule 37 (expression -> atom CONCAT expression .)
    AS              reduce using rule 37 (expression -> atom CONCAT expression .)
    IN              reduce using rule 37 (expression -> atom CONCAT expression .)
    ELSE            reduce using rule 37 (expression -> atom CONCAT expression .)
    ELIF            reduce using rule 37 (expression -> atom CONCAT expression .)
    AND             reduce using rule 37 (expression -> atom CONCAT expression .)


state 148

    (143) var_use -> atom LBRACKET expression . RBRACKET
    RBRACKET        shift and go to state 210


state 149

    (15) var_dec -> LET var_init_list IN . var_decl_expr
    (16) var_decl_expr -> . LPAREN var_dec RPAREN
    (17) var_decl_expr -> . expression
    (18) var_decl_expr -> . flux_control
    (19) var_decl_expr -> . scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 212
    LBRACE          shift and go to state 43
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    var_decl_expr                  shift and go to state 211
    var_dec                        shift and go to state 15
    expression                     shift and go to state 213
    flux_control                   shift and go to state 214
    scope                          shift and go to state 215
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 150

    (20) var_init_list -> var_init COMMA . var_init_list
    (20) var_init_list -> . var_init COMMA var_init_list
    (21) var_init_list -> . var_init
    (22) var_init -> . identifier ASSIGN inst type_downcast
    (23) var_init -> . identifier ASSIGN inst
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    var_init                       shift and go to state 86
    var_init_list                  shift and go to state 216
    identifier                     shift and go to state 87
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 151

    (22) var_init -> identifier ASSIGN . inst type_downcast
    (23) var_init -> identifier ASSIGN . inst
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    identifier                     shift and go to state 40
    inst                           shift and go to state 217
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 152

    (61) var_asign -> var_use ASSIGN expression .
    SEMICOLON       reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    $end            reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    RBRACE          reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    OR              reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    SINCETHAT       reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    COMMA           reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    RBRACKET        reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    RPAREN          reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    NOT_EQUAL       reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    EQUAL           reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    LESS_EQUAL      reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    LESS_THAN       reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    GREATER_THAN    reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    AS              reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    IN              reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    ELSE            reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    ELIF            reduce using rule 61 (var_asign -> var_use ASSIGN expression .)
    AND             reduce using rule 61 (var_asign -> var_use ASSIGN expression .)


state 153

    (62) var_asign -> var_use DEST_ASSIGN expression .
    SEMICOLON       reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    $end            reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    RBRACE          reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    OR              reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    SINCETHAT       reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    COMMA           reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    RBRACKET        reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    RPAREN          reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    EQUAL           reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_THAN       reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_THAN    reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    AS              reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    IN              reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    ELSE            reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    ELIF            reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)
    AND             reduce using rule 62 (var_asign -> var_use DEST_ASSIGN expression .)


state 154

    (40) aritmetic_operation -> term MINUS aritmetic_operation .
    SEMICOLON       reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    $end            reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RPAREN          reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RBRACE          reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    OR              reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    SINCETHAT       reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    COMMA           reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RBRACKET        reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    EQUAL           reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_THAN       reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AS              reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    IN              reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELSE            reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELIF            reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AND             reduce using rule 40 (aritmetic_operation -> term MINUS aritmetic_operation .)


state 155

    (41) aritmetic_operation -> term PLUS aritmetic_operation .
    SEMICOLON       reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    $end            reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RPAREN          reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RBRACE          reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    OR              reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    SINCETHAT       reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    COMMA           reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RBRACKET        reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    EQUAL           reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_THAN       reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AS              reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    IN              reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELSE            reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELIF            reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AND             reduce using rule 41 (aritmetic_operation -> term PLUS aritmetic_operation .)


state 156

    (87) for_loop -> FOR LPAREN identifier . IN expression RPAREN expression
    (88) for_loop -> FOR LPAREN identifier . IN expression RPAREN scope
    IN              shift and go to state 218


state 157

    (93) condition -> LPAREN . conditional_expression RPAREN
    (49) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (89) conditional_expression -> . condition
    (90) conditional_expression -> . NOT condition
    (91) conditional_expression -> . condition OR conditional_expression
    (92) conditional_expression -> . condition AND conditional_expression
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 221
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    conditional_expression         shift and go to state 219
    aritmetic_operation            shift and go to state 220
    condition                      shift and go to state 160
    term                           shift and go to state 38
    comparation                    shift and go to state 163
    factor                         shift and go to state 59
    expression                     shift and go to state 159
    base_exponent                  shift and go to state 62
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 222
    identifier                     shift and go to state 40
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    fully_typed_param              shift and go to state 63
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55

state 158

    (76) full_conditional -> LPAREN conditional_expression . RPAREN scope_list else_elif_statement
    (75) inline_conditional -> LPAREN conditional_expression . RPAREN expression else_elif_statement
    RPAREN          shift and go to state 223


state 159

    (96) comparation -> expression . NOT_EQUAL expression
    (97) comparation -> expression . EQUAL expression
    (98) comparation -> expression . LESS_EQUAL expression
    (99) comparation -> expression . GREATER_EQUAL expression
    (100) comparation -> expression . LESS_THAN expression
    (101) comparation -> expression . GREATER_THAN expression
    NOT_EQUAL       shift and go to state 224
    EQUAL           shift and go to state 225
    LESS_EQUAL      shift and go to state 226
    GREATER_EQUAL   shift and go to state 227
    LESS_THAN       shift and go to state 228
    GREATER_THAN    shift and go to state 229


state 160

    (89) conditional_expression -> condition .
    (91) conditional_expression -> condition . OR conditional_expression
    (92) conditional_expression -> condition . AND conditional_expression
    RPAREN          reduce using rule 89 (conditional_expression -> condition .)
    SEMICOLON       reduce using rule 89 (conditional_expression -> condition .)
    OR              shift and go to state 230
    AND             shift and go to state 231


state 161

    (90) conditional_expression -> NOT . condition
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    condition                      shift and go to state 232
    comparation                    shift and go to state 163
    expression                     shift and go to state 159
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 162

    (94) condition -> IDENTIFIER . type_conforming
    (144) var_use -> IDENTIFIER .
    (147) var_method -> IDENTIFIER . DOT function_call
    (132) function_call -> IDENTIFIER . LPAREN RPAREN
    (133) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (136) type_conforming -> . IS identifier
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 144 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 144 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 144 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 144 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 144 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 144 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 144 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 144 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 144 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 144 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 144 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 144 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 144 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 144 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 144 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 67
    LPAREN          shift and go to state 68
    IS              shift and go to state 234
    COLON           shift and go to state 70

    type_conforming                shift and go to state 233
    type_anotation                 shift and go to state 69

state 163

    (95) condition -> comparation .
    OR              reduce using rule 95 (condition -> comparation .)
    AND             reduce using rule 95 (condition -> comparation .)
    RPAREN          reduce using rule 95 (condition -> comparation .)
    SEMICOLON       reduce using rule 95 (condition -> comparation .)


state 164

    (83) while_loop -> WHILE LPAREN expression . RPAREN expression
    (84) while_loop -> WHILE LPAREN expression . RPAREN scope
    (96) comparation -> expression . NOT_EQUAL expression
    (97) comparation -> expression . EQUAL expression
    (98) comparation -> expression . LESS_EQUAL expression
    (99) comparation -> expression . GREATER_EQUAL expression
    (100) comparation -> expression . LESS_THAN expression
    (101) comparation -> expression . GREATER_THAN expression
    RPAREN          shift and go to state 235
    NOT_EQUAL       shift and go to state 224
    EQUAL           shift and go to state 225
    LESS_EQUAL      shift and go to state 226
    GREATER_EQUAL   shift and go to state 227
    LESS_THAN       shift and go to state 228
    GREATER_THAN    shift and go to state 229


state 165

    (85) while_loop -> WHILE LPAREN conditional_expression . RPAREN expression
    (86) while_loop -> WHILE LPAREN conditional_expression . RPAREN scope
    RPAREN          shift and go to state 236


state 166

    (33) scope -> LBRACE inst_list RBRACE .
    LBRACE          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SEMICOLON       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    $end            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RBRACE          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    AS              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    COMMA           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    IN              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    ELSE            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    ELIF            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PROTOCOL        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    TYPE            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LPAREN          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    FUNCTION        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LET             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    NUMBER          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    STRING          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    FOR             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    IF              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    WHILE           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    IDENTIFIER      reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    E_CONST         reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PI_CONST        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RAND            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LOG             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    EXP             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    COS             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SIN             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SQRT            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    FALSE           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    TRUE            reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    NEW             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LBRACKET        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    PRINT           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RANGE           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    OR              reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    SINCETHAT       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RBRACKET        reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    RPAREN          reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    NOT_EQUAL       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    EQUAL           reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LESS_EQUAL      reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    GREATER_EQUAL   reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    LESS_THAN       reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    GREATER_THAN    reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)
    AND             reduce using rule 33 (scope -> LBRACE inst_list RBRACE .)


state 167

    (160) vector -> LBRACKET vector_decl RBRACKET .
    ESPACEDCONCAT   reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    CONCAT          reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    LBRACKET        reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    MODULE          reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    DIVIDE          reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    MULTIPLY        reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    ASTERPOWER      reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    POWER           reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    MINUS           reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    PLUS            reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    SEMICOLON       reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    $end            reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    RPAREN          reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    ASSIGN          reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    RBRACE          reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    OR              reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    SINCETHAT       reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    COMMA           reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    RBRACKET        reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    NOT_EQUAL       reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    EQUAL           reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_EQUAL      reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_EQUAL   reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_THAN       reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_THAN    reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    AS              reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    IN              reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    ELSE            reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    ELIF            reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)
    AND             reduce using rule 160 (vector -> LBRACKET vector_decl RBRACKET .)


state 168

    (161) vector_decl -> expression OR . identifier IN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    identifier                     shift and go to state 237
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 169

    (162) vector_decl -> expression SINCETHAT . identifier IN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    identifier                     shift and go to state 238
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 170

    (138) arguments_list -> argument COMMA . arguments_list
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 102
    arguments_list                 shift and go to state 239
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 171

    (166) build_in_functions -> RAND LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    CONCAT          reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    LBRACKET        reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    MODULE          reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    DIVIDE          reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    MULTIPLY        reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    POWER           reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    MINUS           reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    PLUS            reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    SEMICOLON       reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    $end            reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    RPAREN          reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    ASSIGN          reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    RBRACE          reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    OR              reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    SINCETHAT       reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    COMMA           reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    RBRACKET        reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    EQUAL           reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_THAN       reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    AS              reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    IN              reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    ELSE            reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    ELIF            reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)
    AND             reduce using rule 166 (build_in_functions -> RAND LPAREN RPAREN .)


state 172

    (167) build_in_functions -> LOG LPAREN argument . COMMA argument RPAREN
    COMMA           shift and go to state 240


state 173

    (168) build_in_functions -> EXP LPAREN argument . RPAREN
    RPAREN          shift and go to state 241


state 174

    (169) build_in_functions -> COS LPAREN argument . RPAREN
    RPAREN          shift and go to state 242


state 175

    (170) build_in_functions -> SIN LPAREN argument . RPAREN
    RPAREN          shift and go to state 243


state 176

    (171) build_in_functions -> SQRT LPAREN argument . RPAREN
    RPAREN          shift and go to state 244


state 177

    (134) type_instanciation -> NEW IDENTIFIER LPAREN . RPAREN
    (135) type_instanciation -> NEW IDENTIFIER LPAREN . arguments_list RPAREN
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 245
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    arguments_list                 shift and go to state 246
    argument                       shift and go to state 102
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 178

    (43) term -> factor MODULE term .
    MINUS           reduce using rule 43 (term -> factor MODULE term .)
    PLUS            reduce using rule 43 (term -> factor MODULE term .)
    SEMICOLON       reduce using rule 43 (term -> factor MODULE term .)
    $end            reduce using rule 43 (term -> factor MODULE term .)
    RPAREN          reduce using rule 43 (term -> factor MODULE term .)
    RBRACE          reduce using rule 43 (term -> factor MODULE term .)
    OR              reduce using rule 43 (term -> factor MODULE term .)
    SINCETHAT       reduce using rule 43 (term -> factor MODULE term .)
    COMMA           reduce using rule 43 (term -> factor MODULE term .)
    RBRACKET        reduce using rule 43 (term -> factor MODULE term .)
    NOT_EQUAL       reduce using rule 43 (term -> factor MODULE term .)
    EQUAL           reduce using rule 43 (term -> factor MODULE term .)
    LESS_EQUAL      reduce using rule 43 (term -> factor MODULE term .)
    GREATER_EQUAL   reduce using rule 43 (term -> factor MODULE term .)
    LESS_THAN       reduce using rule 43 (term -> factor MODULE term .)
    GREATER_THAN    reduce using rule 43 (term -> factor MODULE term .)
    AS              reduce using rule 43 (term -> factor MODULE term .)
    IN              reduce using rule 43 (term -> factor MODULE term .)
    ELSE            reduce using rule 43 (term -> factor MODULE term .)
    ELIF            reduce using rule 43 (term -> factor MODULE term .)
    AND             reduce using rule 43 (term -> factor MODULE term .)


state 179

    (44) term -> factor DIVIDE term .
    MINUS           reduce using rule 44 (term -> factor DIVIDE term .)
    PLUS            reduce using rule 44 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 44 (term -> factor DIVIDE term .)
    $end            reduce using rule 44 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 44 (term -> factor DIVIDE term .)
    RBRACE          reduce using rule 44 (term -> factor DIVIDE term .)
    OR              reduce using rule 44 (term -> factor DIVIDE term .)
    SINCETHAT       reduce using rule 44 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 44 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 44 (term -> factor DIVIDE term .)
    NOT_EQUAL       reduce using rule 44 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 44 (term -> factor DIVIDE term .)
    LESS_EQUAL      reduce using rule 44 (term -> factor DIVIDE term .)
    GREATER_EQUAL   reduce using rule 44 (term -> factor DIVIDE term .)
    LESS_THAN       reduce using rule 44 (term -> factor DIVIDE term .)
    GREATER_THAN    reduce using rule 44 (term -> factor DIVIDE term .)
    AS              reduce using rule 44 (term -> factor DIVIDE term .)
    IN              reduce using rule 44 (term -> factor DIVIDE term .)
    ELSE            reduce using rule 44 (term -> factor DIVIDE term .)
    ELIF            reduce using rule 44 (term -> factor DIVIDE term .)
    AND             reduce using rule 44 (term -> factor DIVIDE term .)


state 180

    (45) term -> factor MULTIPLY term .
    MINUS           reduce using rule 45 (term -> factor MULTIPLY term .)
    PLUS            reduce using rule 45 (term -> factor MULTIPLY term .)
    SEMICOLON       reduce using rule 45 (term -> factor MULTIPLY term .)
    $end            reduce using rule 45 (term -> factor MULTIPLY term .)
    RPAREN          reduce using rule 45 (term -> factor MULTIPLY term .)
    RBRACE          reduce using rule 45 (term -> factor MULTIPLY term .)
    OR              reduce using rule 45 (term -> factor MULTIPLY term .)
    SINCETHAT       reduce using rule 45 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 45 (term -> factor MULTIPLY term .)
    RBRACKET        reduce using rule 45 (term -> factor MULTIPLY term .)
    NOT_EQUAL       reduce using rule 45 (term -> factor MULTIPLY term .)
    EQUAL           reduce using rule 45 (term -> factor MULTIPLY term .)
    LESS_EQUAL      reduce using rule 45 (term -> factor MULTIPLY term .)
    GREATER_EQUAL   reduce using rule 45 (term -> factor MULTIPLY term .)
    LESS_THAN       reduce using rule 45 (term -> factor MULTIPLY term .)
    GREATER_THAN    reduce using rule 45 (term -> factor MULTIPLY term .)
    AS              reduce using rule 45 (term -> factor MULTIPLY term .)
    IN              reduce using rule 45 (term -> factor MULTIPLY term .)
    ELSE            reduce using rule 45 (term -> factor MULTIPLY term .)
    ELIF            reduce using rule 45 (term -> factor MULTIPLY term .)
    AND             reduce using rule 45 (term -> factor MULTIPLY term .)


state 181

    (47) factor -> factor ASTERPOWER base_exponent .
    MODULE          reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    DIVIDE          reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    MULTIPLY        reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    ASTERPOWER      reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    POWER           reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    MINUS           reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    PLUS            reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    SEMICOLON       reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    $end            reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    RPAREN          reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    RBRACE          reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    OR              reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    SINCETHAT       reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    COMMA           reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    RBRACKET        reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    NOT_EQUAL       reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    EQUAL           reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    LESS_EQUAL      reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_EQUAL   reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    LESS_THAN       reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_THAN    reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    AS              reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    IN              reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    ELSE            reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    ELIF            reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)
    AND             reduce using rule 47 (factor -> factor ASTERPOWER base_exponent .)


state 182

    (48) factor -> factor POWER base_exponent .
    MODULE          reduce using rule 48 (factor -> factor POWER base_exponent .)
    DIVIDE          reduce using rule 48 (factor -> factor POWER base_exponent .)
    MULTIPLY        reduce using rule 48 (factor -> factor POWER base_exponent .)
    ASTERPOWER      reduce using rule 48 (factor -> factor POWER base_exponent .)
    POWER           reduce using rule 48 (factor -> factor POWER base_exponent .)
    MINUS           reduce using rule 48 (factor -> factor POWER base_exponent .)
    PLUS            reduce using rule 48 (factor -> factor POWER base_exponent .)
    SEMICOLON       reduce using rule 48 (factor -> factor POWER base_exponent .)
    $end            reduce using rule 48 (factor -> factor POWER base_exponent .)
    RPAREN          reduce using rule 48 (factor -> factor POWER base_exponent .)
    RBRACE          reduce using rule 48 (factor -> factor POWER base_exponent .)
    OR              reduce using rule 48 (factor -> factor POWER base_exponent .)
    SINCETHAT       reduce using rule 48 (factor -> factor POWER base_exponent .)
    COMMA           reduce using rule 48 (factor -> factor POWER base_exponent .)
    RBRACKET        reduce using rule 48 (factor -> factor POWER base_exponent .)
    NOT_EQUAL       reduce using rule 48 (factor -> factor POWER base_exponent .)
    EQUAL           reduce using rule 48 (factor -> factor POWER base_exponent .)
    LESS_EQUAL      reduce using rule 48 (factor -> factor POWER base_exponent .)
    GREATER_EQUAL   reduce using rule 48 (factor -> factor POWER base_exponent .)
    LESS_THAN       reduce using rule 48 (factor -> factor POWER base_exponent .)
    GREATER_THAN    reduce using rule 48 (factor -> factor POWER base_exponent .)
    AS              reduce using rule 48 (factor -> factor POWER base_exponent .)
    IN              reduce using rule 48 (factor -> factor POWER base_exponent .)
    ELSE            reduce using rule 48 (factor -> factor POWER base_exponent .)
    ELIF            reduce using rule 48 (factor -> factor POWER base_exponent .)
    AND             reduce using rule 48 (factor -> factor POWER base_exponent .)


state 183

    (165) build_in_print -> PRINT LPAREN argument . RPAREN
    RPAREN          shift and go to state 247


state 184

    (164) build_in_range -> RANGE LPAREN argument . COMMA argument RPAREN
    COMMA           shift and go to state 248


state 185

    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body SEMICOLON
    (152) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body
    (155) protocol_body -> . LBRACE virtual_method_list RBRACE
    LBRACE          shift and go to state 121

    protocol_body                  shift and go to state 249

state 186

    (153) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)


state 187

    (155) protocol_body -> LBRACE virtual_method_list . RBRACE
    RBRACE          shift and go to state 250


state 188

    (156) virtual_method_list -> virtual_method . SEMICOLON virtual_method_list
    (157) virtual_method_list -> virtual_method . SEMICOLON
    SEMICOLON       shift and go to state 251


state 189

    (158) virtual_method -> IDENTIFIER . LPAREN RPAREN type_anotation
    (159) virtual_method -> IDENTIFIER . parameters type_anotation
    (112) parameters -> . LPAREN arguments_list RPAREN
    LPAREN          shift and go to state 252

    parameters                     shift and go to state 253

state 190

    (145) var_attr -> IDENTIFIER DOT . var_attr
    (146) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 254

    var_attr                       shift and go to state 124

state 191

    (133) function_call -> IDENTIFIER LPAREN arguments_list RPAREN .
    ESPACEDCONCAT   reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    CONCAT          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LBRACKET        reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MODULE          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    DIVIDE          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MULTIPLY        reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASTERPOWER      reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    POWER           reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    MINUS           reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    PLUS            reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    SEMICOLON       reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    $end            reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RPAREN          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACE          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    OR              reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    SINCETHAT       reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    COMMA           reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACKET        reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    NOT_EQUAL       reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    EQUAL           reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_EQUAL      reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_EQUAL   reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_THAN       reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_THAN    reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    AS              reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    IN              reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ELSE            reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ELIF            reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    AND             reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)


state 192

    (63) function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .
    PROTOCOL        reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    TYPE            reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LPAREN          reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FUNCTION        reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LET             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    NUMBER          reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    STRING          reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FOR             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    IF              reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    WHILE           reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LBRACE          reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    IDENTIFIER      reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    E_CONST         reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    PI_CONST        reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    RAND            reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LOG             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    EXP             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    COS             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    SIN             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    SQRT            reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FALSE           reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    TRUE            reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    NEW             reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LBRACKET        reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    PRINT           reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    RANGE           reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    $end            reduce using rule 63 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)


state 193

    (65) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration . SEMICOLON
    (67) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .
    SEMICOLON       shift and go to state 255
    PROTOCOL        reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    TYPE            reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LPAREN          reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FUNCTION        reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LET             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    NUMBER          reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    STRING          reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FOR             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    IF              reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    WHILE           reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LBRACE          reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    IDENTIFIER      reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    E_CONST         reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    PI_CONST        reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    RAND            reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LOG             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    EXP             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    COS             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    SIN             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    SQRT            reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FALSE           reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    TRUE            reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    NEW             reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LBRACKET        reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    PRINT           reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    RANGE           reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    $end            reduce using rule 67 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)


state 194

    (112) parameters -> LPAREN arguments_list RPAREN .
    RETURN          reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)
    COLON           reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)
    LBRACE          reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)
    INHERITS        reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)


state 195

    (66) function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LET             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    STRING          reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    FOR             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    IF              reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    RAND            reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LOG             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    EXP             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    COS             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    SIN             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    NEW             reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)
    $end            reduce using rule 66 (function_declaration -> func_decl_id parameters function_full_declaration SEMICOLON .)


state 196

    (71) function_inline_declaration -> type_anotation RETURN . inst SEMICOLON
    (11) inst -> . LPAREN var_dec RPAREN
    (12) inst -> . expression
    (13) inst -> . flux_control
    (14) inst -> . scope_list
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (148) flux_control -> . for_loop
    (149) flux_control -> . conditional
    (150) flux_control -> . while_loop
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (87) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (83) while_loop -> . WHILE LPAREN expression RPAREN expression
    (84) while_loop -> . WHILE LPAREN expression RPAREN scope
    (85) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LPAREN          shift and go to state 13
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    FOR             shift and go to state 39
    IF              shift and go to state 41
    WHILE           shift and go to state 42
    LBRACE          shift and go to state 43
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    inst                           shift and go to state 256
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope_list                     shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    scope                          shift and go to state 26
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    identifier                     shift and go to state 40
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 197

    (72) function_inline_declaration -> RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 257


state 198

    (104) type_declaration -> TYPE IDENTIFIER inherits_type decl_body . SEMICOLON
    (106) type_declaration -> TYPE IDENTIFIER inherits_type decl_body .
    SEMICOLON       shift and go to state 258
    PROTOCOL        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    TYPE            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LPAREN          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FUNCTION        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LET             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    NUMBER          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    STRING          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FOR             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    IF              reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    WHILE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LBRACE          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    IDENTIFIER      reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    E_CONST         reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PI_CONST        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    RAND            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LOG             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    EXP             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    COS             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    SIN             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    SQRT            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    FALSE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    TRUE            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    NEW             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    LBRACKET        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    PRINT           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    RANGE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)
    $end            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body .)


state 199

    (105) type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .
    PROTOCOL        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    TYPE            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LPAREN          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FUNCTION        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LET             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    NUMBER          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    STRING          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FOR             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    IF              reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    WHILE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LBRACE          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    E_CONST         reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PI_CONST        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    RAND            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LOG             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    EXP             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    COS             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    SIN             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    SQRT            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    FALSE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    TRUE            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    NEW             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    LBRACKET        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    PRINT           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    RANGE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)
    $end            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER decl_body SEMICOLON .)


state 200

    (108) type_declaration -> TYPE IDENTIFIER parameters inherits_type . decl_body SEMICOLON
    (110) type_declaration -> TYPE IDENTIFIER parameters inherits_type . decl_body
    (115) decl_body -> . LBRACE decl_list RBRACE
    (116) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 144

    decl_body                      shift and go to state 259

state 201

    (109) type_declaration -> TYPE IDENTIFIER parameters decl_body . SEMICOLON
    (111) type_declaration -> TYPE IDENTIFIER parameters decl_body .
    SEMICOLON       shift and go to state 260
    PROTOCOL        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    TYPE            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LPAREN          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FUNCTION        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LET             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    NUMBER          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    STRING          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FOR             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    IF              reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    WHILE           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LBRACE          reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    IDENTIFIER      reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    E_CONST         reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PI_CONST        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    RAND            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LOG             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    EXP             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    COS             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    SIN             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    SQRT            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    FALSE           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    TRUE            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    NEW             reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    LBRACKET        reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    PRINT           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    RANGE           reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)
    $end            reduce using rule 111 (type_declaration -> TYPE IDENTIFIER parameters decl_body .)


state 202

    (113) inherits_type -> INHERITS IDENTIFIER . parameters
    (114) inherits_type -> INHERITS IDENTIFIER .
    (112) parameters -> . LPAREN arguments_list RPAREN
    LBRACE          reduce using rule 114 (inherits_type -> INHERITS IDENTIFIER .)
    LPAREN          shift and go to state 145

    parameters                     shift and go to state 261

state 203

    (115) decl_body -> LBRACE decl_list . RBRACE
    RBRACE          shift and go to state 262


state 204

    (116) decl_body -> LBRACE RBRACE .
    SEMICOLON       reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    TYPE            reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    LPAREN          reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    LET             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    NUMBER          reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    STRING          reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    FOR             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    IF              reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    WHILE           reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    LBRACE          reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    E_CONST         reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    RAND            reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    LOG             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    EXP             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    COS             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    SIN             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    SQRT            reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    FALSE           reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    TRUE            reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    NEW             reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    PRINT           reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    RANGE           reduce using rule 116 (decl_body -> LBRACE RBRACE .)
    $end            reduce using rule 116 (decl_body -> LBRACE RBRACE .)


state 205

    (117) decl_list -> decl . SEMICOLON decl_list
    (118) decl_list -> decl . SEMICOLON
    SEMICOLON       shift and go to state 263


state 206

    (119) decl -> method_declaration .
    SEMICOLON       reduce using rule 119 (decl -> method_declaration .)


state 207

    (120) decl -> atribute_declaration .
    SEMICOLON       reduce using rule 120 (decl -> atribute_declaration .)


state 208

    (123) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation function_full_declaration
    (124) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN conditional_expression
    (125) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN expression
    (126) method_declaration -> IDENTIFIER . parameters type_anotation function_full_declaration
    (127) method_declaration -> IDENTIFIER . parameters type_anotation RETURN expression
    (128) method_declaration -> IDENTIFIER . LPAREN RPAREN function_full_declaration
    (129) method_declaration -> IDENTIFIER . LPAREN RPAREN RETURN expression
    (130) method_declaration -> IDENTIFIER . parameters function_full_declaration
    (131) method_declaration -> IDENTIFIER . parameters RETURN expression
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (147) var_method -> IDENTIFIER . DOT function_call
    (144) var_use -> IDENTIFIER .
    (132) function_call -> IDENTIFIER . LPAREN RPAREN
    (133) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (112) parameters -> . LPAREN arguments_list RPAREN
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    LPAREN          shift and go to state 264
    DOT             shift and go to state 67
    LBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 144 (var_use -> IDENTIFIER .)
    COLON           shift and go to state 70

    type_anotation                 shift and go to state 69
    parameters                     shift and go to state 265

state 209

    (121) atribute_declaration -> identifier . ASSIGN expression type_downcast
    (122) atribute_declaration -> identifier . ASSIGN expression
    ASSIGN          shift and go to state 266


state 210

    (143) var_use -> atom LBRACKET expression RBRACKET .
    ASSIGN          reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    CONCAT          reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    MODULE          reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    ASTERPOWER      reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    POWER           reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    $end            reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    OR              reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    SINCETHAT       reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_EQUAL      reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    AS              reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    IN              reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    ELIF            reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)
    AND             reduce using rule 143 (var_use -> atom LBRACKET expression RBRACKET .)


state 211

    (15) var_dec -> LET var_init_list IN var_decl_expr .
    SEMICOLON       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    $end            reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    RPAREN          reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    RBRACE          reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    OR              reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    SINCETHAT       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    COMMA           reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    RBRACKET        reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    NOT_EQUAL       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    EQUAL           reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_EQUAL      reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_EQUAL   reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_THAN       reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_THAN    reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    AS              reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    IN              reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELSE            reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELIF            reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)
    AND             reduce using rule 15 (var_dec -> LET var_init_list IN var_decl_expr .)


state 212

    (16) var_decl_expr -> LPAREN . var_dec RPAREN
    (49) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LET             shift and go to state 27
    LPAREN          shift and go to state 73
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    var_dec                        shift and go to state 267
    aritmetic_operation            shift and go to state 75
    term                           shift and go to state 38
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 213

    (17) var_decl_expr -> expression .
    SEMICOLON       reduce using rule 17 (var_decl_expr -> expression .)
    $end            reduce using rule 17 (var_decl_expr -> expression .)
    RBRACE          reduce using rule 17 (var_decl_expr -> expression .)
    OR              reduce using rule 17 (var_decl_expr -> expression .)
    SINCETHAT       reduce using rule 17 (var_decl_expr -> expression .)
    COMMA           reduce using rule 17 (var_decl_expr -> expression .)
    RBRACKET        reduce using rule 17 (var_decl_expr -> expression .)
    RPAREN          reduce using rule 17 (var_decl_expr -> expression .)
    NOT_EQUAL       reduce using rule 17 (var_decl_expr -> expression .)
    EQUAL           reduce using rule 17 (var_decl_expr -> expression .)
    LESS_EQUAL      reduce using rule 17 (var_decl_expr -> expression .)
    GREATER_EQUAL   reduce using rule 17 (var_decl_expr -> expression .)
    LESS_THAN       reduce using rule 17 (var_decl_expr -> expression .)
    GREATER_THAN    reduce using rule 17 (var_decl_expr -> expression .)
    AS              reduce using rule 17 (var_decl_expr -> expression .)
    IN              reduce using rule 17 (var_decl_expr -> expression .)
    ELSE            reduce using rule 17 (var_decl_expr -> expression .)
    ELIF            reduce using rule 17 (var_decl_expr -> expression .)
    AND             reduce using rule 17 (var_decl_expr -> expression .)


state 214

    (18) var_decl_expr -> flux_control .
    SEMICOLON       reduce using rule 18 (var_decl_expr -> flux_control .)
    $end            reduce using rule 18 (var_decl_expr -> flux_control .)
    RBRACE          reduce using rule 18 (var_decl_expr -> flux_control .)
    OR              reduce using rule 18 (var_decl_expr -> flux_control .)
    SINCETHAT       reduce using rule 18 (var_decl_expr -> flux_control .)
    COMMA           reduce using rule 18 (var_decl_expr -> flux_control .)
    RBRACKET        reduce using rule 18 (var_decl_expr -> flux_control .)
    RPAREN          reduce using rule 18 (var_decl_expr -> flux_control .)
    NOT_EQUAL       reduce using rule 18 (var_decl_expr -> flux_control .)
    EQUAL           reduce using rule 18 (var_decl_expr -> flux_control .)
    LESS_EQUAL      reduce using rule 18 (var_decl_expr -> flux_control .)
    GREATER_EQUAL   reduce using rule 18 (var_decl_expr -> flux_control .)
    LESS_THAN       reduce using rule 18 (var_decl_expr -> flux_control .)
    GREATER_THAN    reduce using rule 18 (var_decl_expr -> flux_control .)
    AS              reduce using rule 18 (var_decl_expr -> flux_control .)
    IN              reduce using rule 18 (var_decl_expr -> flux_control .)
    ELSE            reduce using rule 18 (var_decl_expr -> flux_control .)
    ELIF            reduce using rule 18 (var_decl_expr -> flux_control .)
    AND             reduce using rule 18 (var_decl_expr -> flux_control .)


state 215

    (19) var_decl_expr -> scope .
    SEMICOLON       reduce using rule 19 (var_decl_expr -> scope .)
    $end            reduce using rule 19 (var_decl_expr -> scope .)
    RBRACE          reduce using rule 19 (var_decl_expr -> scope .)
    OR              reduce using rule 19 (var_decl_expr -> scope .)
    SINCETHAT       reduce using rule 19 (var_decl_expr -> scope .)
    COMMA           reduce using rule 19 (var_decl_expr -> scope .)
    RBRACKET        reduce using rule 19 (var_decl_expr -> scope .)
    RPAREN          reduce using rule 19 (var_decl_expr -> scope .)
    NOT_EQUAL       reduce using rule 19 (var_decl_expr -> scope .)
    EQUAL           reduce using rule 19 (var_decl_expr -> scope .)
    LESS_EQUAL      reduce using rule 19 (var_decl_expr -> scope .)
    GREATER_EQUAL   reduce using rule 19 (var_decl_expr -> scope .)
    LESS_THAN       reduce using rule 19 (var_decl_expr -> scope .)
    GREATER_THAN    reduce using rule 19 (var_decl_expr -> scope .)
    AS              reduce using rule 19 (var_decl_expr -> scope .)
    IN              reduce using rule 19 (var_decl_expr -> scope .)
    ELSE            reduce using rule 19 (var_decl_expr -> scope .)
    ELIF            reduce using rule 19 (var_decl_expr -> scope .)
    AND             reduce using rule 19 (var_decl_expr -> scope .)


state 216

    (20) var_init_list -> var_init COMMA var_init_list .
    IN              reduce using rule 20 (var_init_list -> var_init COMMA var_init_list .)


state 217

    (22) var_init -> identifier ASSIGN inst . type_downcast
    (23) var_init -> identifier ASSIGN inst .
    (137) type_downcast -> . AS identifier
    COMMA           reduce using rule 23 (var_init -> identifier ASSIGN inst .)
    IN              reduce using rule 23 (var_init -> identifier ASSIGN inst .)
    AS              shift and go to state 269

    type_downcast                  shift and go to state 268

state 218

    (87) for_loop -> FOR LPAREN identifier IN . expression RPAREN expression
    (88) for_loop -> FOR LPAREN identifier IN . expression RPAREN scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    identifier                     shift and go to state 40
    expression                     shift and go to state 270
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 219

    (93) condition -> LPAREN conditional_expression . RPAREN
    RPAREN          shift and go to state 271


state 220

    (49) base_exponent -> LPAREN aritmetic_operation . RPAREN
    (38) expression -> aritmetic_operation .
    RPAREN          shift and go to state 139
    NOT_EQUAL       reduce using rule 38 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 38 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 38 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 38 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 38 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 38 (expression -> aritmetic_operation .)


state 221

    (94) condition -> IDENTIFIER . type_conforming
    (144) var_use -> IDENTIFIER .
    (147) var_method -> IDENTIFIER . DOT function_call
    (132) function_call -> IDENTIFIER . LPAREN RPAREN
    (133) function_call -> IDENTIFIER . LPAREN arguments_list RPAREN
    (26) fully_typed_param -> IDENTIFIER . type_anotation
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (136) type_conforming -> . IS identifier
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    ASSIGN          reduce using rule 144 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 144 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 144 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 144 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 144 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 144 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 144 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 144 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 144 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 144 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 144 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 144 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 144 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 144 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 144 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 144 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 144 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 67
    LPAREN          shift and go to state 68
    IS              shift and go to state 234
    COLON           shift and go to state 70

    type_conforming                shift and go to state 233
    type_anotation                 shift and go to state 69

state 222

    (36) expression -> atom . ESPACEDCONCAT expression
    (37) expression -> atom . CONCAT expression
    (25) identifier -> atom .
    (143) var_use -> atom . LBRACKET expression RBRACKET
    ESPACEDCONCAT   shift and go to state 81
    CONCAT          shift and go to state 82
    MODULE          reduce using rule 25 (identifier -> atom .)
    DIVIDE          reduce using rule 25 (identifier -> atom .)
    MULTIPLY        reduce using rule 25 (identifier -> atom .)
    ASTERPOWER      reduce using rule 25 (identifier -> atom .)
    POWER           reduce using rule 25 (identifier -> atom .)
    MINUS           reduce using rule 25 (identifier -> atom .)
    PLUS            reduce using rule 25 (identifier -> atom .)
    RPAREN          reduce using rule 25 (identifier -> atom .)
    NOT_EQUAL       reduce using rule 25 (identifier -> atom .)
    EQUAL           reduce using rule 25 (identifier -> atom .)
    LESS_EQUAL      reduce using rule 25 (identifier -> atom .)
    GREATER_EQUAL   reduce using rule 25 (identifier -> atom .)
    LESS_THAN       reduce using rule 25 (identifier -> atom .)
    GREATER_THAN    reduce using rule 25 (identifier -> atom .)
    LBRACKET        shift and go to state 83


state 223

    (76) full_conditional -> LPAREN conditional_expression RPAREN . scope_list else_elif_statement
    (75) inline_conditional -> LPAREN conditional_expression RPAREN . expression else_elif_statement
    (30) scope_list -> . scope scope_list
    (31) scope_list -> . scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 43
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    scope_list                     shift and go to state 272
    expression                     shift and go to state 273
    scope                          shift and go to state 26
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 224

    (96) comparation -> expression NOT_EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 274
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 225

    (97) comparation -> expression EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 275
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 226

    (98) comparation -> expression LESS_EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 276
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 227

    (99) comparation -> expression GREATER_EQUAL . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 277
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 228

    (100) comparation -> expression LESS_THAN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 278
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 229

    (101) comparation -> expression GREATER_THAN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 279
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 230

    (91) conditional_expression -> condition OR . conditional_expression
    (89) conditional_expression -> . condition
    (90) conditional_expression -> . NOT condition
    (91) conditional_expression -> . condition OR conditional_expression
    (92) conditional_expression -> . condition AND conditional_expression
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    condition                      shift and go to state 160
    conditional_expression         shift and go to state 280
    comparation                    shift and go to state 163
    expression                     shift and go to state 159
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 231

    (92) conditional_expression -> condition AND . conditional_expression
    (89) conditional_expression -> . condition
    (90) conditional_expression -> . NOT condition
    (91) conditional_expression -> . condition OR conditional_expression
    (92) conditional_expression -> . condition AND conditional_expression
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    condition                      shift and go to state 160
    conditional_expression         shift and go to state 281
    comparation                    shift and go to state 163
    expression                     shift and go to state 159
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 232

    (90) conditional_expression -> NOT condition .
    RPAREN          reduce using rule 90 (conditional_expression -> NOT condition .)
    SEMICOLON       reduce using rule 90 (conditional_expression -> NOT condition .)


state 233

    (94) condition -> IDENTIFIER type_conforming .
    OR              reduce using rule 94 (condition -> IDENTIFIER type_conforming .)
    AND             reduce using rule 94 (condition -> IDENTIFIER type_conforming .)
    RPAREN          reduce using rule 94 (condition -> IDENTIFIER type_conforming .)
    SEMICOLON       reduce using rule 94 (condition -> IDENTIFIER type_conforming .)


state 234

    (136) type_conforming -> IS . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    identifier                     shift and go to state 282
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 235

    (83) while_loop -> WHILE LPAREN expression RPAREN . expression
    (84) while_loop -> WHILE LPAREN expression RPAREN . scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 43
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 283
    scope                          shift and go to state 284
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 236

    (85) while_loop -> WHILE LPAREN conditional_expression RPAREN . expression
    (86) while_loop -> WHILE LPAREN conditional_expression RPAREN . scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 43
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 285
    scope                          shift and go to state 286
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 237

    (161) vector_decl -> expression OR identifier . IN expression
    IN              shift and go to state 287


state 238

    (162) vector_decl -> expression SINCETHAT identifier . IN expression
    IN              shift and go to state 288


state 239

    (138) arguments_list -> argument COMMA arguments_list .
    RBRACKET        reduce using rule 138 (arguments_list -> argument COMMA arguments_list .)
    RPAREN          reduce using rule 138 (arguments_list -> argument COMMA arguments_list .)


state 240

    (167) build_in_functions -> LOG LPAREN argument COMMA . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 289
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 241

    (168) build_in_functions -> EXP LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    CONCAT          reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MODULE          reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    POWER           reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    MINUS           reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    PLUS            reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    $end            reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RPAREN          reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RBRACE          reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    OR              reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    COMMA           reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    EQUAL           reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    AS              reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    IN              reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ELSE            reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    ELIF            reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)
    AND             reduce using rule 168 (build_in_functions -> EXP LPAREN argument RPAREN .)


state 242

    (169) build_in_functions -> COS LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    CONCAT          reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    MODULE          reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    POWER           reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    MINUS           reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    PLUS            reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    $end            reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    RPAREN          reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    RBRACE          reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    OR              reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    COMMA           reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    EQUAL           reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    AS              reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    IN              reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    ELSE            reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    ELIF            reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)
    AND             reduce using rule 169 (build_in_functions -> COS LPAREN argument RPAREN .)


state 243

    (170) build_in_functions -> SIN LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    CONCAT          reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MODULE          reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    POWER           reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    MINUS           reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    PLUS            reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    $end            reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RPAREN          reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RBRACE          reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    OR              reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    COMMA           reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    EQUAL           reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    AS              reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    IN              reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ELSE            reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    ELIF            reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)
    AND             reduce using rule 170 (build_in_functions -> SIN LPAREN argument RPAREN .)


state 244

    (171) build_in_functions -> SQRT LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    CONCAT          reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MODULE          reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    POWER           reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    MINUS           reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    PLUS            reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    $end            reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RPAREN          reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RBRACE          reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    OR              reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    COMMA           reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    EQUAL           reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    AS              reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    IN              reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ELSE            reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    ELIF            reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)
    AND             reduce using rule 171 (build_in_functions -> SQRT LPAREN argument RPAREN .)


state 245

    (134) type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)


state 246

    (135) type_instanciation -> NEW IDENTIFIER LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 290


state 247

    (165) build_in_print -> PRINT LPAREN argument RPAREN .
    ESPACEDCONCAT   reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    CONCAT          reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LBRACKET        reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MODULE          reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    DIVIDE          reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MULTIPLY        reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ASTERPOWER      reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    POWER           reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    MINUS           reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    PLUS            reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    SEMICOLON       reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    $end            reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RPAREN          reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ASSIGN          reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RBRACE          reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    OR              reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    SINCETHAT       reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    COMMA           reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    RBRACKET        reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    NOT_EQUAL       reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    EQUAL           reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LESS_EQUAL      reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    GREATER_EQUAL   reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    LESS_THAN       reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    GREATER_THAN    reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    AS              reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    IN              reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ELSE            reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    ELIF            reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)
    AND             reduce using rule 165 (build_in_print -> PRINT LPAREN argument RPAREN .)


state 248

    (164) build_in_range -> RANGE LPAREN argument COMMA . argument RPAREN
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    argument                       shift and go to state 291
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 249

    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body . SEMICOLON
    (152) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 292
    PROTOCOL        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TYPE            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LET             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    STRING          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FOR             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IF              reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    WHILE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RAND            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LOG             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    EXP             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    COS             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SIN             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SQRT            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FALSE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TRUE            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NEW             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PRINT           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RANGE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    $end            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)


state 250

    (155) protocol_body -> LBRACE virtual_method_list RBRACE .
    SEMICOLON       reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PROTOCOL        reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TYPE            reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LPAREN          reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FUNCTION        reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LET             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NUMBER          reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    STRING          reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FOR             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IF              reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    WHILE           reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACE          reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IDENTIFIER      reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    E_CONST         reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PI_CONST        reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RAND            reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LOG             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    EXP             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    COS             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SIN             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SQRT            reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FALSE           reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TRUE            reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NEW             reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACKET        reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PRINT           reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RANGE           reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    $end            reduce using rule 155 (protocol_body -> LBRACE virtual_method_list RBRACE .)


state 251

    (156) virtual_method_list -> virtual_method SEMICOLON . virtual_method_list
    (157) virtual_method_list -> virtual_method SEMICOLON .
    (156) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (157) virtual_method_list -> . virtual_method SEMICOLON
    (158) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    (159) virtual_method -> . IDENTIFIER parameters type_anotation
    RBRACE          reduce using rule 157 (virtual_method_list -> virtual_method SEMICOLON .)
    IDENTIFIER      shift and go to state 189

    virtual_method                 shift and go to state 188
    virtual_method_list            shift and go to state 293

state 252

    (158) virtual_method -> IDENTIFIER LPAREN . RPAREN type_anotation
    (112) parameters -> LPAREN . arguments_list RPAREN
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 294
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    arguments_list                 shift and go to state 132
    argument                       shift and go to state 102
    conditional                    shift and go to state 103
    expression                     shift and go to state 127
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 253

    (159) virtual_method -> IDENTIFIER parameters . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 70

    type_anotation                 shift and go to state 295

state 254

    (146) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (145) var_attr -> IDENTIFIER . DOT var_attr
    (146) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACE          reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 146 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DOT             shift and go to state 190


state 255

    (65) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LET             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    STRING          reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FOR             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    IF              reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    RAND            reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LOG             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    EXP             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    COS             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    SIN             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    NEW             reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    $end            reduce using rule 65 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)


state 256

    (71) function_inline_declaration -> type_anotation RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 296


state 257

    (72) function_inline_declaration -> RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TYPE            reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LET             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    STRING          reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FOR             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IF              reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    WHILE           reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RAND            reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LOG             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    EXP             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    COS             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SIN             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SQRT            reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FALSE           reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TRUE            reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NEW             reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PRINT           reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RANGE           reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)
    $end            reduce using rule 72 (function_inline_declaration -> RETURN inst SEMICOLON .)


state 258

    (104) type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 104 (type_declaration -> TYPE IDENTIFIER inherits_type decl_body SEMICOLON .)


state 259

    (108) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body . SEMICOLON
    (110) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .
    SEMICOLON       shift and go to state 297
    PROTOCOL        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    TYPE            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LPAREN          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FUNCTION        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LET             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    NUMBER          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    STRING          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FOR             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    IF              reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    WHILE           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LBRACE          reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    IDENTIFIER      reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    E_CONST         reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PI_CONST        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    RAND            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LOG             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    EXP             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    COS             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    SIN             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    SQRT            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    FALSE           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    TRUE            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    NEW             reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    LBRACKET        reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    PRINT           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    RANGE           reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)
    $end            reduce using rule 110 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body .)


state 260

    (109) type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .
    PROTOCOL        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    TYPE            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LPAREN          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FUNCTION        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LET             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    NUMBER          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    STRING          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FOR             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    IF              reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    WHILE           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LBRACE          reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    E_CONST         reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PI_CONST        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    RAND            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LOG             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    EXP             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    COS             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    SIN             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    SQRT            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    FALSE           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    TRUE            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    NEW             reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    LBRACKET        reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    PRINT           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    RANGE           reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)
    $end            reduce using rule 109 (type_declaration -> TYPE IDENTIFIER parameters decl_body SEMICOLON .)


state 261

    (113) inherits_type -> INHERITS IDENTIFIER parameters .
    LBRACE          reduce using rule 113 (inherits_type -> INHERITS IDENTIFIER parameters .)


state 262

    (115) decl_body -> LBRACE decl_list RBRACE .
    SEMICOLON       reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    PROTOCOL        reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    TYPE            reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    LPAREN          reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    FUNCTION        reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    LET             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    NUMBER          reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    STRING          reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    FOR             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    IF              reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    WHILE           reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACE          reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    IDENTIFIER      reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    E_CONST         reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    PI_CONST        reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    RAND            reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    LOG             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    EXP             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    COS             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    SIN             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    SQRT            reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    FALSE           reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    TRUE            reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    NEW             reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACKET        reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    PRINT           reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    RANGE           reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)
    $end            reduce using rule 115 (decl_body -> LBRACE decl_list RBRACE .)


state 263

    (117) decl_list -> decl SEMICOLON . decl_list
    (118) decl_list -> decl SEMICOLON .
    (117) decl_list -> . decl SEMICOLON decl_list
    (118) decl_list -> . decl SEMICOLON
    (119) decl -> . method_declaration
    (120) decl -> . atribute_declaration
    (123) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (124) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (125) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (126) method_declaration -> . IDENTIFIER parameters type_anotation function_full_declaration
    (127) method_declaration -> . IDENTIFIER parameters type_anotation RETURN expression
    (128) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (129) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (130) method_declaration -> . IDENTIFIER parameters function_full_declaration
    (131) method_declaration -> . IDENTIFIER parameters RETURN expression
    (121) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (122) atribute_declaration -> . identifier ASSIGN expression
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          reduce using rule 118 (decl_list -> decl SEMICOLON .)
    IDENTIFIER      shift and go to state 208
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    decl                           shift and go to state 205
    decl_list                      shift and go to state 298
    method_declaration             shift and go to state 206
    atribute_declaration           shift and go to state 207
    identifier                     shift and go to state 209
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 264

    (123) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation function_full_declaration
    (124) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN conditional_expression
    (125) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN expression
    (128) method_declaration -> IDENTIFIER LPAREN . RPAREN function_full_declaration
    (129) method_declaration -> IDENTIFIER LPAREN . RPAREN RETURN expression
    (132) function_call -> IDENTIFIER LPAREN . RPAREN
    (133) function_call -> IDENTIFIER LPAREN . arguments_list RPAREN
    (112) parameters -> LPAREN . arguments_list RPAREN
    (138) arguments_list -> . argument COMMA arguments_list
    (139) arguments_list -> . argument
    (140) argument -> . conditional
    (141) argument -> . expression
    (73) conditional -> . IF full_conditional
    (74) conditional -> . IF inline_conditional
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 299
    IF              shift and go to state 41
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 127
    arguments_list                 shift and go to state 300
    argument                       shift and go to state 102
    conditional                    shift and go to state 103
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 265

    (126) method_declaration -> IDENTIFIER parameters . type_anotation function_full_declaration
    (127) method_declaration -> IDENTIFIER parameters . type_anotation RETURN expression
    (130) method_declaration -> IDENTIFIER parameters . function_full_declaration
    (131) method_declaration -> IDENTIFIER parameters . RETURN expression
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (70) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 303
    COLON           shift and go to state 70
    LBRACE          shift and go to state 43

    type_anotation                 shift and go to state 301
    function_full_declaration      shift and go to state 302
    scope                          shift and go to state 137

state 266

    (121) atribute_declaration -> identifier ASSIGN . expression type_downcast
    (122) atribute_declaration -> identifier ASSIGN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    identifier                     shift and go to state 40
    expression                     shift and go to state 304
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 267

    (16) var_decl_expr -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 305


state 268

    (22) var_init -> identifier ASSIGN inst type_downcast .
    COMMA           reduce using rule 22 (var_init -> identifier ASSIGN inst type_downcast .)
    IN              reduce using rule 22 (var_init -> identifier ASSIGN inst type_downcast .)


state 269

    (137) type_downcast -> AS . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 77
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    identifier                     shift and go to state 306
    fully_typed_param              shift and go to state 63
    atom                           shift and go to state 76
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    var_use                        shift and go to state 78
    function_call                  shift and go to state 37
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    var_attr                       shift and go to state 44

state 270

    (87) for_loop -> FOR LPAREN identifier IN expression . RPAREN expression
    (88) for_loop -> FOR LPAREN identifier IN expression . RPAREN scope
    RPAREN          shift and go to state 307


state 271

    (93) condition -> LPAREN conditional_expression RPAREN .
    OR              reduce using rule 93 (condition -> LPAREN conditional_expression RPAREN .)
    AND             reduce using rule 93 (condition -> LPAREN conditional_expression RPAREN .)
    RPAREN          reduce using rule 93 (condition -> LPAREN conditional_expression RPAREN .)
    SEMICOLON       reduce using rule 93 (condition -> LPAREN conditional_expression RPAREN .)


state 272

    (76) full_conditional -> LPAREN conditional_expression RPAREN scope_list . else_elif_statement
    (77) else_elif_statement -> . ELSE full_else
    (78) else_elif_statement -> . ELSE inline_else
    (79) else_elif_statement -> . ELIF full_conditional
    (80) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 309
    ELIF            shift and go to state 310

    else_elif_statement            shift and go to state 308

state 273

    (75) inline_conditional -> LPAREN conditional_expression RPAREN expression . else_elif_statement
    (77) else_elif_statement -> . ELSE full_else
    (78) else_elif_statement -> . ELSE inline_else
    (79) else_elif_statement -> . ELIF full_conditional
    (80) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 309
    ELIF            shift and go to state 310

    else_elif_statement            shift and go to state 311

state 274

    (96) comparation -> expression NOT_EQUAL expression .
    OR              reduce using rule 96 (comparation -> expression NOT_EQUAL expression .)
    AND             reduce using rule 96 (comparation -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 96 (comparation -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 96 (comparation -> expression NOT_EQUAL expression .)


state 275

    (97) comparation -> expression EQUAL expression .
    OR              reduce using rule 97 (comparation -> expression EQUAL expression .)
    AND             reduce using rule 97 (comparation -> expression EQUAL expression .)
    RPAREN          reduce using rule 97 (comparation -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 97 (comparation -> expression EQUAL expression .)


state 276

    (98) comparation -> expression LESS_EQUAL expression .
    OR              reduce using rule 98 (comparation -> expression LESS_EQUAL expression .)
    AND             reduce using rule 98 (comparation -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 98 (comparation -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 98 (comparation -> expression LESS_EQUAL expression .)


state 277

    (99) comparation -> expression GREATER_EQUAL expression .
    OR              reduce using rule 99 (comparation -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 99 (comparation -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 99 (comparation -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 99 (comparation -> expression GREATER_EQUAL expression .)


state 278

    (100) comparation -> expression LESS_THAN expression .
    OR              reduce using rule 100 (comparation -> expression LESS_THAN expression .)
    AND             reduce using rule 100 (comparation -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 100 (comparation -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 100 (comparation -> expression LESS_THAN expression .)


state 279

    (101) comparation -> expression GREATER_THAN expression .
    OR              reduce using rule 101 (comparation -> expression GREATER_THAN expression .)
    AND             reduce using rule 101 (comparation -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 101 (comparation -> expression GREATER_THAN expression .)
    SEMICOLON       reduce using rule 101 (comparation -> expression GREATER_THAN expression .)


state 280

    (91) conditional_expression -> condition OR conditional_expression .
    RPAREN          reduce using rule 91 (conditional_expression -> condition OR conditional_expression .)
    SEMICOLON       reduce using rule 91 (conditional_expression -> condition OR conditional_expression .)


state 281

    (92) conditional_expression -> condition AND conditional_expression .
    RPAREN          reduce using rule 92 (conditional_expression -> condition AND conditional_expression .)
    SEMICOLON       reduce using rule 92 (conditional_expression -> condition AND conditional_expression .)


state 282

    (136) type_conforming -> IS identifier .
    OR              reduce using rule 136 (type_conforming -> IS identifier .)
    AND             reduce using rule 136 (type_conforming -> IS identifier .)
    RPAREN          reduce using rule 136 (type_conforming -> IS identifier .)
    SEMICOLON       reduce using rule 136 (type_conforming -> IS identifier .)


state 283

    (83) while_loop -> WHILE LPAREN expression RPAREN expression .
    SEMICOLON       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    $end            reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RBRACE          reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    OR              reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    SINCETHAT       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    COMMA           reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RBRACKET        reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RPAREN          reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    EQUAL           reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_THAN       reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AS              reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    IN              reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELSE            reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELIF            reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AND             reduce using rule 83 (while_loop -> WHILE LPAREN expression RPAREN expression .)


state 284

    (84) while_loop -> WHILE LPAREN expression RPAREN scope .
    SEMICOLON       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    $end            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RBRACE          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    OR              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    SINCETHAT       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    COMMA           reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RBRACKET        reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RPAREN          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    EQUAL           reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_THAN       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AS              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    IN              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELSE            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELIF            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AND             reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN scope .)


state 285

    (85) while_loop -> WHILE LPAREN conditional_expression RPAREN expression .
    SEMICOLON       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    $end            reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RBRACE          reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    OR              reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    SINCETHAT       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    COMMA           reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RBRACKET        reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RPAREN          reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    EQUAL           reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_THAN       reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_THAN    reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AS              reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    IN              reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELSE            reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELIF            reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AND             reduce using rule 85 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)


state 286

    (86) while_loop -> WHILE LPAREN conditional_expression RPAREN scope .
    SEMICOLON       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    $end            reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RBRACE          reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    OR              reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    SINCETHAT       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    COMMA           reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RBRACKET        reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RPAREN          reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    EQUAL           reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_THAN       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_THAN    reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AS              reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    IN              reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELSE            reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELIF            reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AND             reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)


state 287

    (161) vector_decl -> expression OR identifier IN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 312
    identifier                     shift and go to state 40
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 288

    (162) vector_decl -> expression SINCETHAT identifier IN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 313
    identifier                     shift and go to state 40
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 289

    (167) build_in_functions -> LOG LPAREN argument COMMA argument . RPAREN
    RPAREN          shift and go to state 314


state 290

    (135) type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .
    ESPACEDCONCAT   reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    CONCAT          reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LBRACKET        reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MODULE          reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    DIVIDE          reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MULTIPLY        reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ASTERPOWER      reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    POWER           reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    MINUS           reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    PLUS            reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    SEMICOLON       reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    $end            reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RPAREN          reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACE          reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    OR              reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    SINCETHAT       reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    COMMA           reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    RBRACKET        reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    NOT_EQUAL       reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    EQUAL           reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_EQUAL      reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_EQUAL   reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    LESS_THAN       reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    GREATER_THAN    reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    AS              reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    IN              reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ELSE            reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    ELIF            reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)
    AND             reduce using rule 135 (type_instanciation -> NEW IDENTIFIER LPAREN arguments_list RPAREN .)


state 291

    (164) build_in_range -> RANGE LPAREN argument COMMA argument . RPAREN
    RPAREN          shift and go to state 315


state 292

    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)


state 293

    (156) virtual_method_list -> virtual_method SEMICOLON virtual_method_list .
    RBRACE          reduce using rule 156 (virtual_method_list -> virtual_method SEMICOLON virtual_method_list .)


state 294

    (158) virtual_method -> IDENTIFIER LPAREN RPAREN . type_anotation
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 70

    type_anotation                 shift and go to state 316

state 295

    (159) virtual_method -> IDENTIFIER parameters type_anotation .
    SEMICOLON       reduce using rule 159 (virtual_method -> IDENTIFIER parameters type_anotation .)


state 296

    (71) function_inline_declaration -> type_anotation RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    TYPE            reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LET             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    STRING          reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FOR             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    IF              reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    WHILE           reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    RAND            reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LOG             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    EXP             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    COS             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    SIN             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    SQRT            reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FALSE           reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    TRUE            reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    NEW             reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    PRINT           reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    RANGE           reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    $end            reduce using rule 71 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)


state 297

    (108) type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER parameters inherits_type decl_body SEMICOLON .)


state 298

    (117) decl_list -> decl SEMICOLON decl_list .
    RBRACE          reduce using rule 117 (decl_list -> decl SEMICOLON decl_list .)


state 299

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation function_full_declaration
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN conditional_expression
    (125) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN expression
    (128) method_declaration -> IDENTIFIER LPAREN RPAREN . function_full_declaration
    (129) method_declaration -> IDENTIFIER LPAREN RPAREN . RETURN expression
    (132) function_call -> IDENTIFIER LPAREN RPAREN .
    (27) type_anotation -> . COLON BOOLEAN_TYPE
    (28) type_anotation -> . COLON NUMBER_TYPE
    (29) type_anotation -> . COLON IDENTIFIER
    (70) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 319
    LBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           shift and go to state 70
    LBRACE          shift and go to state 43

    type_anotation                 shift and go to state 317
    function_full_declaration      shift and go to state 318
    scope                          shift and go to state 137

state 300

    (133) function_call -> IDENTIFIER LPAREN arguments_list . RPAREN
    (112) parameters -> LPAREN arguments_list . RPAREN
    RPAREN          shift and go to state 320


state 301

    (126) method_declaration -> IDENTIFIER parameters type_anotation . function_full_declaration
    (127) method_declaration -> IDENTIFIER parameters type_anotation . RETURN expression
    (70) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 322
    LBRACE          shift and go to state 43

    function_full_declaration      shift and go to state 321
    scope                          shift and go to state 137

state 302

    (130) method_declaration -> IDENTIFIER parameters function_full_declaration .
    SEMICOLON       reduce using rule 130 (method_declaration -> IDENTIFIER parameters function_full_declaration .)


state 303

    (131) method_declaration -> IDENTIFIER parameters RETURN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 323
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 304

    (121) atribute_declaration -> identifier ASSIGN expression . type_downcast
    (122) atribute_declaration -> identifier ASSIGN expression .
    (137) type_downcast -> . AS identifier
    SEMICOLON       reduce using rule 122 (atribute_declaration -> identifier ASSIGN expression .)
    AS              shift and go to state 269

    type_downcast                  shift and go to state 324

state 305

    (16) var_decl_expr -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RBRACE          reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    OR              reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    SINCETHAT       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RBRACKET        reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RPAREN          reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    NOT_EQUAL       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    EQUAL           reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_EQUAL      reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_EQUAL   reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_THAN       reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_THAN    reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELSE            reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELIF            reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AND             reduce using rule 16 (var_decl_expr -> LPAREN var_dec RPAREN .)


state 306

    (137) type_downcast -> AS identifier .
    COMMA           reduce using rule 137 (type_downcast -> AS identifier .)
    IN              reduce using rule 137 (type_downcast -> AS identifier .)
    SEMICOLON       reduce using rule 137 (type_downcast -> AS identifier .)


state 307

    (87) for_loop -> FOR LPAREN identifier IN expression RPAREN . expression
    (88) for_loop -> FOR LPAREN identifier IN expression RPAREN . scope
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 43
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    identifier                     shift and go to state 40
    expression                     shift and go to state 325
    scope                          shift and go to state 326
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    fully_typed_param              shift and go to state 63

state 308

    (76) full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .
    SEMICOLON       reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    $end            reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    RBRACE          reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    OR              reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    SINCETHAT       reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    COMMA           reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    RBRACKET        reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    RPAREN          reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    NOT_EQUAL       reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    EQUAL           reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    LESS_EQUAL      reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    GREATER_EQUAL   reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    LESS_THAN       reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    GREATER_THAN    reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    AS              reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    IN              reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    ELSE            reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    ELIF            reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)
    AND             reduce using rule 76 (full_conditional -> LPAREN conditional_expression RPAREN scope_list else_elif_statement .)


state 309

    (77) else_elif_statement -> ELSE . full_else
    (78) else_elif_statement -> ELSE . inline_else
    (82) full_else -> . scope
    (81) inline_else -> . expression
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LBRACE          shift and go to state 43
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    full_else                      shift and go to state 327
    inline_else                    shift and go to state 328
    scope                          shift and go to state 329
    expression                     shift and go to state 330
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 310

    (79) else_elif_statement -> ELIF . full_conditional
    (80) else_elif_statement -> ELIF . inline_conditional
    (76) full_conditional -> . LPAREN conditional_expression RPAREN scope_list else_elif_statement
    (75) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 95

    full_conditional               shift and go to state 331
    inline_conditional             shift and go to state 332

state 311

    (75) inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .
    SEMICOLON       reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    $end            reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RBRACE          reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    OR              reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    SINCETHAT       reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    COMMA           reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RBRACKET        reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RPAREN          reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    NOT_EQUAL       reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    EQUAL           reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_EQUAL      reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_EQUAL   reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_THAN       reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_THAN    reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AS              reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    IN              reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELSE            reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELIF            reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AND             reduce using rule 75 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)


state 312

    (161) vector_decl -> expression OR identifier IN expression .
    RBRACKET        reduce using rule 161 (vector_decl -> expression OR identifier IN expression .)


state 313

    (162) vector_decl -> expression SINCETHAT identifier IN expression .
    RBRACKET        reduce using rule 162 (vector_decl -> expression SINCETHAT identifier IN expression .)


state 314

    (167) build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .
    ESPACEDCONCAT   reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    CONCAT          reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LBRACKET        reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MODULE          reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    DIVIDE          reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MULTIPLY        reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ASTERPOWER      reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    POWER           reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    MINUS           reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    PLUS            reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    SEMICOLON       reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    $end            reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RPAREN          reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ASSIGN          reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RBRACE          reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    OR              reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    SINCETHAT       reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    COMMA           reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    RBRACKET        reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    NOT_EQUAL       reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    EQUAL           reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LESS_EQUAL      reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    GREATER_EQUAL   reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    LESS_THAN       reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    GREATER_THAN    reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    AS              reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    IN              reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ELSE            reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    ELIF            reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)
    AND             reduce using rule 167 (build_in_functions -> LOG LPAREN argument COMMA argument RPAREN .)


state 315

    (164) build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .
    ESPACEDCONCAT   reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    CONCAT          reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LBRACKET        reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MODULE          reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    DIVIDE          reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MULTIPLY        reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ASTERPOWER      reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    POWER           reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    MINUS           reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    PLUS            reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    SEMICOLON       reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    $end            reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RPAREN          reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ASSIGN          reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RBRACE          reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    OR              reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    SINCETHAT       reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    COMMA           reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    RBRACKET        reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    NOT_EQUAL       reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    EQUAL           reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LESS_EQUAL      reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    GREATER_EQUAL   reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    LESS_THAN       reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    GREATER_THAN    reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    AS              reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    IN              reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ELSE            reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    ELIF            reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)
    AND             reduce using rule 164 (build_in_range -> RANGE LPAREN argument COMMA argument RPAREN .)


state 316

    (158) virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .
    SEMICOLON       reduce using rule 158 (virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .)


state 317

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . function_full_declaration
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN conditional_expression
    (125) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN expression
    (70) function_full_declaration -> . scope
    (32) scope -> . LBRACE RBRACE
    (33) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 334
    LBRACE          shift and go to state 43

    function_full_declaration      shift and go to state 333
    scope                          shift and go to state 137

state 318

    (128) method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .
    SEMICOLON       reduce using rule 128 (method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .)


state 319

    (129) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 335
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 320

    (133) function_call -> IDENTIFIER LPAREN arguments_list RPAREN .
    (112) parameters -> LPAREN arguments_list RPAREN .
    LBRACKET        reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    ASSIGN          reduce using rule 133 (function_call -> IDENTIFIER LPAREN arguments_list RPAREN .)
    RETURN          reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)
    COLON           reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)
    LBRACE          reduce using rule 112 (parameters -> LPAREN arguments_list RPAREN .)


state 321

    (126) method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 126 (method_declaration -> IDENTIFIER parameters type_anotation function_full_declaration .)


state 322

    (127) method_declaration -> IDENTIFIER parameters type_anotation RETURN . expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61
    LPAREN          shift and go to state 73

    expression                     shift and go to state 336
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 323

    (131) method_declaration -> IDENTIFIER parameters RETURN expression .
    SEMICOLON       reduce using rule 131 (method_declaration -> IDENTIFIER parameters RETURN expression .)


state 324

    (121) atribute_declaration -> identifier ASSIGN expression type_downcast .
    SEMICOLON       reduce using rule 121 (atribute_declaration -> identifier ASSIGN expression type_downcast .)


state 325

    (87) for_loop -> FOR LPAREN identifier IN expression RPAREN expression .
    SEMICOLON       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    $end            reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RBRACE          reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    OR              reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    SINCETHAT       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    COMMA           reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RBRACKET        reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RPAREN          reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    EQUAL           reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_THAN       reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AS              reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    IN              reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELSE            reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELIF            reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AND             reduce using rule 87 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)


state 326

    (88) for_loop -> FOR LPAREN identifier IN expression RPAREN scope .
    SEMICOLON       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    $end            reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RBRACE          reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    OR              reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    SINCETHAT       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    COMMA           reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RBRACKET        reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RPAREN          reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    EQUAL           reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_THAN       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AS              reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    IN              reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELSE            reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELIF            reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AND             reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)


state 327

    (77) else_elif_statement -> ELSE full_else .
    SEMICOLON       reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    $end            reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    RBRACE          reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    OR              reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    SINCETHAT       reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    COMMA           reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    RBRACKET        reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    RPAREN          reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    NOT_EQUAL       reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    EQUAL           reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    LESS_EQUAL      reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    GREATER_EQUAL   reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    LESS_THAN       reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    GREATER_THAN    reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    AS              reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    IN              reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    ELSE            reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    ELIF            reduce using rule 77 (else_elif_statement -> ELSE full_else .)
    AND             reduce using rule 77 (else_elif_statement -> ELSE full_else .)


state 328

    (78) else_elif_statement -> ELSE inline_else .
    SEMICOLON       reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    $end            reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    RBRACE          reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    OR              reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    SINCETHAT       reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    COMMA           reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    RBRACKET        reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    RPAREN          reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    NOT_EQUAL       reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    EQUAL           reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    LESS_EQUAL      reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    GREATER_EQUAL   reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    LESS_THAN       reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    GREATER_THAN    reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    AS              reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    IN              reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    ELSE            reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    ELIF            reduce using rule 78 (else_elif_statement -> ELSE inline_else .)
    AND             reduce using rule 78 (else_elif_statement -> ELSE inline_else .)


state 329

    (82) full_else -> scope .
    SEMICOLON       reduce using rule 82 (full_else -> scope .)
    $end            reduce using rule 82 (full_else -> scope .)
    RBRACE          reduce using rule 82 (full_else -> scope .)
    OR              reduce using rule 82 (full_else -> scope .)
    SINCETHAT       reduce using rule 82 (full_else -> scope .)
    COMMA           reduce using rule 82 (full_else -> scope .)
    RBRACKET        reduce using rule 82 (full_else -> scope .)
    RPAREN          reduce using rule 82 (full_else -> scope .)
    NOT_EQUAL       reduce using rule 82 (full_else -> scope .)
    EQUAL           reduce using rule 82 (full_else -> scope .)
    LESS_EQUAL      reduce using rule 82 (full_else -> scope .)
    GREATER_EQUAL   reduce using rule 82 (full_else -> scope .)
    LESS_THAN       reduce using rule 82 (full_else -> scope .)
    GREATER_THAN    reduce using rule 82 (full_else -> scope .)
    AS              reduce using rule 82 (full_else -> scope .)
    IN              reduce using rule 82 (full_else -> scope .)
    ELSE            reduce using rule 82 (full_else -> scope .)
    ELIF            reduce using rule 82 (full_else -> scope .)
    AND             reduce using rule 82 (full_else -> scope .)


state 330

    (81) inline_else -> expression .
    SEMICOLON       reduce using rule 81 (inline_else -> expression .)
    $end            reduce using rule 81 (inline_else -> expression .)
    RBRACE          reduce using rule 81 (inline_else -> expression .)
    OR              reduce using rule 81 (inline_else -> expression .)
    SINCETHAT       reduce using rule 81 (inline_else -> expression .)
    COMMA           reduce using rule 81 (inline_else -> expression .)
    RBRACKET        reduce using rule 81 (inline_else -> expression .)
    RPAREN          reduce using rule 81 (inline_else -> expression .)
    NOT_EQUAL       reduce using rule 81 (inline_else -> expression .)
    EQUAL           reduce using rule 81 (inline_else -> expression .)
    LESS_EQUAL      reduce using rule 81 (inline_else -> expression .)
    GREATER_EQUAL   reduce using rule 81 (inline_else -> expression .)
    LESS_THAN       reduce using rule 81 (inline_else -> expression .)
    GREATER_THAN    reduce using rule 81 (inline_else -> expression .)
    AS              reduce using rule 81 (inline_else -> expression .)
    IN              reduce using rule 81 (inline_else -> expression .)
    ELSE            reduce using rule 81 (inline_else -> expression .)
    ELIF            reduce using rule 81 (inline_else -> expression .)
    AND             reduce using rule 81 (inline_else -> expression .)


state 331

    (79) else_elif_statement -> ELIF full_conditional .
    SEMICOLON       reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    $end            reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    RBRACE          reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    OR              reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    SINCETHAT       reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    COMMA           reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    RBRACKET        reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    RPAREN          reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    NOT_EQUAL       reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    EQUAL           reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    LESS_EQUAL      reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    GREATER_EQUAL   reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    LESS_THAN       reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    GREATER_THAN    reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    AS              reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    IN              reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    ELSE            reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    ELIF            reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)
    AND             reduce using rule 79 (else_elif_statement -> ELIF full_conditional .)


state 332

    (80) else_elif_statement -> ELIF inline_conditional .
    SEMICOLON       reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    $end            reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    RBRACE          reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    OR              reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    SINCETHAT       reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    COMMA           reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    RBRACKET        reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    RPAREN          reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    NOT_EQUAL       reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    EQUAL           reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    LESS_EQUAL      reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_EQUAL   reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    LESS_THAN       reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_THAN    reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    AS              reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    IN              reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    ELSE            reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    ELIF            reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)
    AND             reduce using rule 80 (else_elif_statement -> ELIF inline_conditional .)


state 333

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 123 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)


state 334

    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . conditional_expression
    (125) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . expression
    (89) conditional_expression -> . condition
    (90) conditional_expression -> . NOT condition
    (91) conditional_expression -> . condition OR conditional_expression
    (92) conditional_expression -> . condition AND conditional_expression
    (34) expression -> . var_dec
    (35) expression -> . var_asign
    (36) expression -> . atom ESPACEDCONCAT expression
    (37) expression -> . atom CONCAT expression
    (38) expression -> . aritmetic_operation
    (93) condition -> . LPAREN conditional_expression RPAREN
    (94) condition -> . IDENTIFIER type_conforming
    (95) condition -> . comparation
    (15) var_dec -> . LET var_init_list IN var_decl_expr
    (61) var_asign -> . var_use ASSIGN expression
    (62) var_asign -> . var_use DEST_ASSIGN expression
    (51) atom -> . NUMBER
    (52) atom -> . STRING
    (53) atom -> . build_in_consts
    (54) atom -> . build_in_functions
    (55) atom -> . boolean_value
    (56) atom -> . type_instanciation
    (57) atom -> . var_method
    (58) atom -> . vector
    (59) atom -> . var_use
    (60) atom -> . function_call
    (39) aritmetic_operation -> . term
    (40) aritmetic_operation -> . term MINUS aritmetic_operation
    (41) aritmetic_operation -> . term PLUS aritmetic_operation
    (96) comparation -> . expression NOT_EQUAL expression
    (97) comparation -> . expression EQUAL expression
    (98) comparation -> . expression LESS_EQUAL expression
    (99) comparation -> . expression GREATER_EQUAL expression
    (100) comparation -> . expression LESS_THAN expression
    (101) comparation -> . expression GREATER_THAN expression
    (142) var_use -> . var_attr
    (143) var_use -> . atom LBRACKET expression RBRACKET
    (144) var_use -> . IDENTIFIER
    (174) build_in_consts -> . E_CONST
    (175) build_in_consts -> . PI_CONST
    (166) build_in_functions -> . RAND LPAREN RPAREN
    (167) build_in_functions -> . LOG LPAREN argument COMMA argument RPAREN
    (168) build_in_functions -> . EXP LPAREN argument RPAREN
    (169) build_in_functions -> . COS LPAREN argument RPAREN
    (170) build_in_functions -> . SIN LPAREN argument RPAREN
    (171) build_in_functions -> . SQRT LPAREN argument RPAREN
    (172) build_in_functions -> . build_in_print
    (173) build_in_functions -> . build_in_range
    (102) boolean_value -> . FALSE
    (103) boolean_value -> . TRUE
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (135) type_instanciation -> . NEW IDENTIFIER LPAREN arguments_list RPAREN
    (147) var_method -> . IDENTIFIER DOT function_call
    (160) vector -> . LBRACKET vector_decl RBRACKET
    (132) function_call -> . IDENTIFIER LPAREN RPAREN
    (133) function_call -> . IDENTIFIER LPAREN arguments_list RPAREN
    (42) term -> . factor
    (43) term -> . factor MODULE term
    (44) term -> . factor DIVIDE term
    (45) term -> . factor MULTIPLY term
    (145) var_attr -> . IDENTIFIER DOT var_attr
    (146) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (165) build_in_print -> . PRINT LPAREN argument RPAREN
    (164) build_in_range -> . RANGE LPAREN argument COMMA argument RPAREN
    (46) factor -> . base_exponent
    (47) factor -> . factor ASTERPOWER base_exponent
    (48) factor -> . factor POWER base_exponent
    (49) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (50) base_exponent -> . identifier
    (24) identifier -> . fully_typed_param
    (25) identifier -> . atom
    (26) fully_typed_param -> . IDENTIFIER type_anotation
    NOT             shift and go to state 161
    LPAREN          shift and go to state 157
    IDENTIFIER      shift and go to state 162
    LET             shift and go to state 27
    NUMBER          shift and go to state 29
    STRING          shift and go to state 30
    E_CONST         shift and go to state 46
    PI_CONST        shift and go to state 47
    RAND            shift and go to state 48
    LOG             shift and go to state 49
    EXP             shift and go to state 50
    COS             shift and go to state 51
    SIN             shift and go to state 52
    SQRT            shift and go to state 53
    FALSE           shift and go to state 56
    TRUE            shift and go to state 57
    NEW             shift and go to state 58
    LBRACKET        shift and go to state 45
    PRINT           shift and go to state 60
    RANGE           shift and go to state 61

    conditional_expression         shift and go to state 337
    expression                     shift and go to state 338
    condition                      shift and go to state 160
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    comparation                    shift and go to state 163
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 31
    build_in_functions             shift and go to state 32
    boolean_value                  shift and go to state 33
    type_instanciation             shift and go to state 34
    var_method                     shift and go to state 35
    vector                         shift and go to state 36
    function_call                  shift and go to state 37
    term                           shift and go to state 38
    var_attr                       shift and go to state 44
    build_in_print                 shift and go to state 54
    build_in_range                 shift and go to state 55
    factor                         shift and go to state 59
    base_exponent                  shift and go to state 62
    identifier                     shift and go to state 40
    fully_typed_param              shift and go to state 63

state 335

    (129) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .
    SEMICOLON       reduce using rule 129 (method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .)


state 336

    (127) method_declaration -> IDENTIFIER parameters type_anotation RETURN expression .
    SEMICOLON       reduce using rule 127 (method_declaration -> IDENTIFIER parameters type_anotation RETURN expression .)


state 337

    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .
    SEMICOLON       reduce using rule 124 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .)


state 338

    (125) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .
    (96) comparation -> expression . NOT_EQUAL expression
    (97) comparation -> expression . EQUAL expression
    (98) comparation -> expression . LESS_EQUAL expression
    (99) comparation -> expression . GREATER_EQUAL expression
    (100) comparation -> expression . LESS_THAN expression
    (101) comparation -> expression . GREATER_THAN expression
    SEMICOLON       reduce using rule 125 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .)
    NOT_EQUAL       shift and go to state 224
    EQUAL           shift and go to state 225
    LESS_EQUAL      shift and go to state 226
    GREATER_EQUAL   shift and go to state 227
    LESS_THAN       shift and go to state 228
    GREATER_THAN    shift and go to state 229
