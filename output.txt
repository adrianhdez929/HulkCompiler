0: 
state 0

    (0) S' -> . program
    (1) program -> . program_decl_list
    (2) program_decl_list -> . empty
    (3) program_decl_list -> . program_level_decl program_decl_list
    (4) program_decl_list -> . inst_wrapper
    (177) empty -> .
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (10) inst_wrapper -> . inst SEMICOLON
    (11) inst_wrapper -> . inst
    (150) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (153) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (64) function_declaration -> . func_decl_id LPAREN RPAREN function_inline_declaration
    (65) function_declaration -> . func_decl_id LPAREN id_list RPAREN function_inline_declaration
    (66) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
    (67) function_declaration -> . func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON
    (68) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration
    (69) function_declaration -> . func_decl_id LPAREN id_list RPAREN function_full_declaration
    (105) type_declaration -> . TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON
    (106) type_declaration -> . TYPE IDENTIFIER constructor decl_body SEMICOLON
    (107) type_declaration -> . TYPE IDENTIFIER constructor inherits_type decl_body
    (108) type_declaration -> . TYPE IDENTIFIER constructor decl_body
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (70) func_decl_id -> . FUNCTION IDENTIFIER
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    $end            reduce using rule 177 (empty -> .)
    PROTOCOL        shift and go to state 10
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    FUNCTION        shift and go to state 19
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    program                        shift and go to state 1
    program_decl_list              shift and go to state 2
    empty                          shift and go to state 3
    program_level_decl             shift and go to state 4
    inst_wrapper                   shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    func_decl_id                   shift and go to state 12
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
1: 
state 1

    (0) S' -> program .

2: 
state 2

    (1) program -> program_decl_list .
    $end            reduce using rule 1 (program -> program_decl_list .)

3: 
state 3

    (2) program_decl_list -> empty .
    $end            reduce using rule 2 (program_decl_list -> empty .)

4: 
state 4

    (3) program_decl_list -> program_level_decl . program_decl_list
    (2) program_decl_list -> . empty
    (3) program_decl_list -> . program_level_decl program_decl_list
    (4) program_decl_list -> . inst_wrapper
    (177) empty -> .
    (5) program_level_decl -> . protocol_declaration
    (6) program_level_decl -> . function_declaration
    (7) program_level_decl -> . type_declaration
    (10) inst_wrapper -> . inst SEMICOLON
    (11) inst_wrapper -> . inst
    (150) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> . PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body SEMICOLON
    (153) protocol_declaration -> . PROTOCOL IDENTIFIER protocol_body
    (64) function_declaration -> . func_decl_id LPAREN RPAREN function_inline_declaration
    (65) function_declaration -> . func_decl_id LPAREN id_list RPAREN function_inline_declaration
    (66) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON
    (67) function_declaration -> . func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON
    (68) function_declaration -> . func_decl_id LPAREN RPAREN function_full_declaration
    (69) function_declaration -> . func_decl_id LPAREN id_list RPAREN function_full_declaration
    (105) type_declaration -> . TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON
    (106) type_declaration -> . TYPE IDENTIFIER constructor decl_body SEMICOLON
    (107) type_declaration -> . TYPE IDENTIFIER constructor inherits_type decl_body
    (108) type_declaration -> . TYPE IDENTIFIER constructor decl_body
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (70) func_decl_id -> . FUNCTION IDENTIFIER
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    $end            reduce using rule 177 (empty -> .)
    PROTOCOL        shift and go to state 10
    TYPE            shift and go to state 14
    LPAREN          shift and go to state 13
    FUNCTION        shift and go to state 19
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    program_level_decl             shift and go to state 4
    program_decl_list              shift and go to state 61
    empty                          shift and go to state 3
    inst_wrapper                   shift and go to state 5
    protocol_declaration           shift and go to state 6
    function_declaration           shift and go to state 7
    type_declaration               shift and go to state 8
    inst                           shift and go to state 9
    func_decl_id                   shift and go to state 12
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
5: 
state 5

    (4) program_decl_list -> inst_wrapper .
    $end            reduce using rule 4 (program_decl_list -> inst_wrapper .)

6: 
state 6

    (5) program_level_decl -> protocol_declaration .
    PROTOCOL        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TYPE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LPAREN          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FUNCTION        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACE          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LET             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    STRING          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NUMBER          reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FOR             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IF              reduce using rule 5 (program_level_decl -> protocol_declaration .)
    WHILE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    IDENTIFIER      reduce using rule 5 (program_level_decl -> protocol_declaration .)
    E_CONST         reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PI_CONST        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RAND            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LOG             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    EXP             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    COS             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SIN             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    SQRT            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    FALSE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    TRUE            reduce using rule 5 (program_level_decl -> protocol_declaration .)
    NEW             reduce using rule 5 (program_level_decl -> protocol_declaration .)
    LBRACKET        reduce using rule 5 (program_level_decl -> protocol_declaration .)
    PRINT           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    RANGE           reduce using rule 5 (program_level_decl -> protocol_declaration .)
    $end            reduce using rule 5 (program_level_decl -> protocol_declaration .)

7: 
state 7

    (6) program_level_decl -> function_declaration .
    PROTOCOL        reduce using rule 6 (program_level_decl -> function_declaration .)
    TYPE            reduce using rule 6 (program_level_decl -> function_declaration .)
    LPAREN          reduce using rule 6 (program_level_decl -> function_declaration .)
    FUNCTION        reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACE          reduce using rule 6 (program_level_decl -> function_declaration .)
    LET             reduce using rule 6 (program_level_decl -> function_declaration .)
    STRING          reduce using rule 6 (program_level_decl -> function_declaration .)
    NUMBER          reduce using rule 6 (program_level_decl -> function_declaration .)
    FOR             reduce using rule 6 (program_level_decl -> function_declaration .)
    IF              reduce using rule 6 (program_level_decl -> function_declaration .)
    WHILE           reduce using rule 6 (program_level_decl -> function_declaration .)
    IDENTIFIER      reduce using rule 6 (program_level_decl -> function_declaration .)
    E_CONST         reduce using rule 6 (program_level_decl -> function_declaration .)
    PI_CONST        reduce using rule 6 (program_level_decl -> function_declaration .)
    RAND            reduce using rule 6 (program_level_decl -> function_declaration .)
    LOG             reduce using rule 6 (program_level_decl -> function_declaration .)
    EXP             reduce using rule 6 (program_level_decl -> function_declaration .)
    COS             reduce using rule 6 (program_level_decl -> function_declaration .)
    SIN             reduce using rule 6 (program_level_decl -> function_declaration .)
    SQRT            reduce using rule 6 (program_level_decl -> function_declaration .)
    FALSE           reduce using rule 6 (program_level_decl -> function_declaration .)
    TRUE            reduce using rule 6 (program_level_decl -> function_declaration .)
    NEW             reduce using rule 6 (program_level_decl -> function_declaration .)
    LBRACKET        reduce using rule 6 (program_level_decl -> function_declaration .)
    PRINT           reduce using rule 6 (program_level_decl -> function_declaration .)
    RANGE           reduce using rule 6 (program_level_decl -> function_declaration .)
    $end            reduce using rule 6 (program_level_decl -> function_declaration .)

8: 
state 8

    (7) program_level_decl -> type_declaration .
    PROTOCOL        reduce using rule 7 (program_level_decl -> type_declaration .)
    TYPE            reduce using rule 7 (program_level_decl -> type_declaration .)
    LPAREN          reduce using rule 7 (program_level_decl -> type_declaration .)
    FUNCTION        reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACE          reduce using rule 7 (program_level_decl -> type_declaration .)
    LET             reduce using rule 7 (program_level_decl -> type_declaration .)
    STRING          reduce using rule 7 (program_level_decl -> type_declaration .)
    NUMBER          reduce using rule 7 (program_level_decl -> type_declaration .)
    FOR             reduce using rule 7 (program_level_decl -> type_declaration .)
    IF              reduce using rule 7 (program_level_decl -> type_declaration .)
    WHILE           reduce using rule 7 (program_level_decl -> type_declaration .)
    IDENTIFIER      reduce using rule 7 (program_level_decl -> type_declaration .)
    E_CONST         reduce using rule 7 (program_level_decl -> type_declaration .)
    PI_CONST        reduce using rule 7 (program_level_decl -> type_declaration .)
    RAND            reduce using rule 7 (program_level_decl -> type_declaration .)
    LOG             reduce using rule 7 (program_level_decl -> type_declaration .)
    EXP             reduce using rule 7 (program_level_decl -> type_declaration .)
    COS             reduce using rule 7 (program_level_decl -> type_declaration .)
    SIN             reduce using rule 7 (program_level_decl -> type_declaration .)
    SQRT            reduce using rule 7 (program_level_decl -> type_declaration .)
    FALSE           reduce using rule 7 (program_level_decl -> type_declaration .)
    TRUE            reduce using rule 7 (program_level_decl -> type_declaration .)
    NEW             reduce using rule 7 (program_level_decl -> type_declaration .)
    LBRACKET        reduce using rule 7 (program_level_decl -> type_declaration .)
    PRINT           reduce using rule 7 (program_level_decl -> type_declaration .)
    RANGE           reduce using rule 7 (program_level_decl -> type_declaration .)
    $end            reduce using rule 7 (program_level_decl -> type_declaration .)

9: 
state 9

    (10) inst_wrapper -> inst . SEMICOLON
    (11) inst_wrapper -> inst .
    SEMICOLON       shift and go to state 62
    $end            reduce using rule 11 (inst_wrapper -> inst .)

10: 
state 10

    (150) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL . IDENTIFIER EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body SEMICOLON
    (153) protocol_declaration -> PROTOCOL . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 63

11: 
state 11

    (143) var_use -> IDENTIFIER .
    (146) var_method -> IDENTIFIER . DOT function_call
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN param_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 143 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    $end            reduce using rule 143 (var_use -> IDENTIFIER .)
    OR              reduce using rule 143 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 143 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 143 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    AS              reduce using rule 143 (var_use -> IDENTIFIER .)
    IN              reduce using rule 143 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 143 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 143 (var_use -> IDENTIFIER .)
    AND             reduce using rule 143 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 64
    LPAREN          shift and go to state 65

12: 
state 12

    (64) function_declaration -> func_decl_id . LPAREN RPAREN function_inline_declaration
    (65) function_declaration -> func_decl_id . LPAREN id_list RPAREN function_inline_declaration
    (66) function_declaration -> func_decl_id . LPAREN RPAREN function_full_declaration SEMICOLON
    (67) function_declaration -> func_decl_id . LPAREN id_list RPAREN function_full_declaration SEMICOLON
    (68) function_declaration -> func_decl_id . LPAREN RPAREN function_full_declaration
    (69) function_declaration -> func_decl_id . LPAREN id_list RPAREN function_full_declaration
    LPAREN          shift and go to state 66

13: 
state 13

    (12) inst -> LPAREN . var_dec RPAREN
    (50) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LET             shift and go to state 27
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    var_dec                        shift and go to state 68
    aritmetic_operation            shift and go to state 69
    term                           shift and go to state 38
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
14: 
state 14

    (105) type_declaration -> TYPE . IDENTIFIER constructor inherits_type decl_body SEMICOLON
    (106) type_declaration -> TYPE . IDENTIFIER constructor decl_body SEMICOLON
    (107) type_declaration -> TYPE . IDENTIFIER constructor inherits_type decl_body
    (108) type_declaration -> TYPE . IDENTIFIER constructor decl_body
    IDENTIFIER      shift and go to state 73

15: 
state 15

    (35) expression -> var_dec .
    SEMICOLON       reduce using rule 35 (expression -> var_dec .)
    $end            reduce using rule 35 (expression -> var_dec .)
    OR              reduce using rule 35 (expression -> var_dec .)
    SINCETHAT       reduce using rule 35 (expression -> var_dec .)
    COMMA           reduce using rule 35 (expression -> var_dec .)
    RBRACKET        reduce using rule 35 (expression -> var_dec .)
    RPAREN          reduce using rule 35 (expression -> var_dec .)
    NOT_EQUAL       reduce using rule 35 (expression -> var_dec .)
    EQUAL           reduce using rule 35 (expression -> var_dec .)
    LESS_EQUAL      reduce using rule 35 (expression -> var_dec .)
    GREATER_EQUAL   reduce using rule 35 (expression -> var_dec .)
    LESS_THAN       reduce using rule 35 (expression -> var_dec .)
    GREATER_THAN    reduce using rule 35 (expression -> var_dec .)
    AS              reduce using rule 35 (expression -> var_dec .)
    IN              reduce using rule 35 (expression -> var_dec .)
    ELSE            reduce using rule 35 (expression -> var_dec .)
    ELIF            reduce using rule 35 (expression -> var_dec .)
    AND             reduce using rule 35 (expression -> var_dec .)

16: 
state 16

    (13) inst -> expression .
    SEMICOLON       reduce using rule 13 (inst -> expression .)
    $end            reduce using rule 13 (inst -> expression .)
    AS              reduce using rule 13 (inst -> expression .)
    COMMA           reduce using rule 13 (inst -> expression .)
    IN              reduce using rule 13 (inst -> expression .)

17: 
state 17

    (14) inst -> flux_control .
    SEMICOLON       reduce using rule 14 (inst -> flux_control .)
    $end            reduce using rule 14 (inst -> flux_control .)
    AS              reduce using rule 14 (inst -> flux_control .)
    COMMA           reduce using rule 14 (inst -> flux_control .)
    IN              reduce using rule 14 (inst -> flux_control .)

18: 
state 18

    (15) inst -> scope .
    SEMICOLON       reduce using rule 15 (inst -> scope .)
    $end            reduce using rule 15 (inst -> scope .)
    AS              reduce using rule 15 (inst -> scope .)
    COMMA           reduce using rule 15 (inst -> scope .)
    IN              reduce using rule 15 (inst -> scope .)

19: 
state 19

    (70) func_decl_id -> FUNCTION . IDENTIFIER
    IDENTIFIER      shift and go to state 74

20: 
state 20

    (36) expression -> var_asign .
    SEMICOLON       reduce using rule 36 (expression -> var_asign .)
    $end            reduce using rule 36 (expression -> var_asign .)
    OR              reduce using rule 36 (expression -> var_asign .)
    SINCETHAT       reduce using rule 36 (expression -> var_asign .)
    COMMA           reduce using rule 36 (expression -> var_asign .)
    RBRACKET        reduce using rule 36 (expression -> var_asign .)
    RPAREN          reduce using rule 36 (expression -> var_asign .)
    NOT_EQUAL       reduce using rule 36 (expression -> var_asign .)
    EQUAL           reduce using rule 36 (expression -> var_asign .)
    LESS_EQUAL      reduce using rule 36 (expression -> var_asign .)
    GREATER_EQUAL   reduce using rule 36 (expression -> var_asign .)
    LESS_THAN       reduce using rule 36 (expression -> var_asign .)
    GREATER_THAN    reduce using rule 36 (expression -> var_asign .)
    AS              reduce using rule 36 (expression -> var_asign .)
    IN              reduce using rule 36 (expression -> var_asign .)
    ELSE            reduce using rule 36 (expression -> var_asign .)
    ELIF            reduce using rule 36 (expression -> var_asign .)
    AND             reduce using rule 36 (expression -> var_asign .)

21: 
state 21

    (37) expression -> atom . ESPACEDCONCAT expression
    (38) expression -> atom . CONCAT expression
    (142) var_use -> atom . LBRACKET expression RBRACKET
    (51) base_exponent -> atom .
    ESPACEDCONCAT   shift and go to state 75
    CONCAT          shift and go to state 76
    LBRACKET        shift and go to state 77
    MODULE          reduce using rule 51 (base_exponent -> atom .)
    DIVIDE          reduce using rule 51 (base_exponent -> atom .)
    MULTIPLY        reduce using rule 51 (base_exponent -> atom .)
    ASTERPOWER      reduce using rule 51 (base_exponent -> atom .)
    POWER           reduce using rule 51 (base_exponent -> atom .)
    MINUS           reduce using rule 51 (base_exponent -> atom .)
    PLUS            reduce using rule 51 (base_exponent -> atom .)
    SEMICOLON       reduce using rule 51 (base_exponent -> atom .)
    $end            reduce using rule 51 (base_exponent -> atom .)
    OR              reduce using rule 51 (base_exponent -> atom .)
    SINCETHAT       reduce using rule 51 (base_exponent -> atom .)
    COMMA           reduce using rule 51 (base_exponent -> atom .)
    RBRACKET        reduce using rule 51 (base_exponent -> atom .)
    RPAREN          reduce using rule 51 (base_exponent -> atom .)
    NOT_EQUAL       reduce using rule 51 (base_exponent -> atom .)
    EQUAL           reduce using rule 51 (base_exponent -> atom .)
    LESS_EQUAL      reduce using rule 51 (base_exponent -> atom .)
    GREATER_EQUAL   reduce using rule 51 (base_exponent -> atom .)
    LESS_THAN       reduce using rule 51 (base_exponent -> atom .)
    GREATER_THAN    reduce using rule 51 (base_exponent -> atom .)
    AS              reduce using rule 51 (base_exponent -> atom .)
    IN              reduce using rule 51 (base_exponent -> atom .)
    ELSE            reduce using rule 51 (base_exponent -> atom .)
    ELIF            reduce using rule 51 (base_exponent -> atom .)
    AND             reduce using rule 51 (base_exponent -> atom .)

22: 
state 22

    (39) expression -> aritmetic_operation .
    SEMICOLON       reduce using rule 39 (expression -> aritmetic_operation .)
    $end            reduce using rule 39 (expression -> aritmetic_operation .)
    OR              reduce using rule 39 (expression -> aritmetic_operation .)
    SINCETHAT       reduce using rule 39 (expression -> aritmetic_operation .)
    COMMA           reduce using rule 39 (expression -> aritmetic_operation .)
    RBRACKET        reduce using rule 39 (expression -> aritmetic_operation .)
    RPAREN          reduce using rule 39 (expression -> aritmetic_operation .)
    NOT_EQUAL       reduce using rule 39 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 39 (expression -> aritmetic_operation .)
    AS              reduce using rule 39 (expression -> aritmetic_operation .)
    IN              reduce using rule 39 (expression -> aritmetic_operation .)
    ELSE            reduce using rule 39 (expression -> aritmetic_operation .)
    ELIF            reduce using rule 39 (expression -> aritmetic_operation .)
    AND             reduce using rule 39 (expression -> aritmetic_operation .)

23: 
state 23

    (147) flux_control -> for_loop .
    SEMICOLON       reduce using rule 147 (flux_control -> for_loop .)
    $end            reduce using rule 147 (flux_control -> for_loop .)
    COMMA           reduce using rule 147 (flux_control -> for_loop .)
    RBRACKET        reduce using rule 147 (flux_control -> for_loop .)
    RPAREN          reduce using rule 147 (flux_control -> for_loop .)
    OR              reduce using rule 147 (flux_control -> for_loop .)
    SINCETHAT       reduce using rule 147 (flux_control -> for_loop .)
    NOT_EQUAL       reduce using rule 147 (flux_control -> for_loop .)
    EQUAL           reduce using rule 147 (flux_control -> for_loop .)
    LESS_EQUAL      reduce using rule 147 (flux_control -> for_loop .)
    GREATER_EQUAL   reduce using rule 147 (flux_control -> for_loop .)
    LESS_THAN       reduce using rule 147 (flux_control -> for_loop .)
    GREATER_THAN    reduce using rule 147 (flux_control -> for_loop .)
    AS              reduce using rule 147 (flux_control -> for_loop .)
    IN              reduce using rule 147 (flux_control -> for_loop .)
    ELSE            reduce using rule 147 (flux_control -> for_loop .)
    ELIF            reduce using rule 147 (flux_control -> for_loop .)
    AND             reduce using rule 147 (flux_control -> for_loop .)

24: 
state 24

    (148) flux_control -> conditional .
    SEMICOLON       reduce using rule 148 (flux_control -> conditional .)
    $end            reduce using rule 148 (flux_control -> conditional .)
    COMMA           reduce using rule 148 (flux_control -> conditional .)
    RBRACKET        reduce using rule 148 (flux_control -> conditional .)
    RPAREN          reduce using rule 148 (flux_control -> conditional .)
    OR              reduce using rule 148 (flux_control -> conditional .)
    SINCETHAT       reduce using rule 148 (flux_control -> conditional .)
    NOT_EQUAL       reduce using rule 148 (flux_control -> conditional .)
    EQUAL           reduce using rule 148 (flux_control -> conditional .)
    LESS_EQUAL      reduce using rule 148 (flux_control -> conditional .)
    GREATER_EQUAL   reduce using rule 148 (flux_control -> conditional .)
    LESS_THAN       reduce using rule 148 (flux_control -> conditional .)
    GREATER_THAN    reduce using rule 148 (flux_control -> conditional .)
    AS              reduce using rule 148 (flux_control -> conditional .)
    IN              reduce using rule 148 (flux_control -> conditional .)
    ELSE            reduce using rule 148 (flux_control -> conditional .)
    ELIF            reduce using rule 148 (flux_control -> conditional .)
    AND             reduce using rule 148 (flux_control -> conditional .)

25: 
state 25

    (149) flux_control -> while_loop .
    SEMICOLON       reduce using rule 149 (flux_control -> while_loop .)
    $end            reduce using rule 149 (flux_control -> while_loop .)
    COMMA           reduce using rule 149 (flux_control -> while_loop .)
    RBRACKET        reduce using rule 149 (flux_control -> while_loop .)
    RPAREN          reduce using rule 149 (flux_control -> while_loop .)
    OR              reduce using rule 149 (flux_control -> while_loop .)
    SINCETHAT       reduce using rule 149 (flux_control -> while_loop .)
    NOT_EQUAL       reduce using rule 149 (flux_control -> while_loop .)
    EQUAL           reduce using rule 149 (flux_control -> while_loop .)
    LESS_EQUAL      reduce using rule 149 (flux_control -> while_loop .)
    GREATER_EQUAL   reduce using rule 149 (flux_control -> while_loop .)
    LESS_THAN       reduce using rule 149 (flux_control -> while_loop .)
    GREATER_THAN    reduce using rule 149 (flux_control -> while_loop .)
    AS              reduce using rule 149 (flux_control -> while_loop .)
    IN              reduce using rule 149 (flux_control -> while_loop .)
    ELSE            reduce using rule 149 (flux_control -> while_loop .)
    ELIF            reduce using rule 149 (flux_control -> while_loop .)
    AND             reduce using rule 149 (flux_control -> while_loop .)

26: 
state 26

    (33) scope -> LBRACE . RBRACE
    (34) scope -> LBRACE . inst_list RBRACE
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    RBRACE          shift and go to state 78
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    inst_list                      shift and go to state 79
    inst                           shift and go to state 80
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
27: 
state 27

    (16) var_dec -> LET . var_init_list IN var_decl_expr
    (21) var_init_list -> . var_init COMMA var_init_list
    (22) var_init_list -> . var_init
    (23) var_init -> . identifier ASSIGN inst type_downcast
    (24) var_init -> . identifier ASSIGN inst
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    var_init_list                  shift and go to state 81
    var_init                       shift and go to state 82
    identifier                     shift and go to state 83
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
28: 
state 28

    (62) var_asign -> var_use . ASSIGN expression
    (63) var_asign -> var_use . DEST_ASSIGN expression
    (58) atom -> var_use .
    ASSIGN          shift and go to state 87
    DEST_ASSIGN     shift and go to state 88
    ESPACEDCONCAT   reduce using rule 58 (atom -> var_use .)
    CONCAT          reduce using rule 58 (atom -> var_use .)
    LBRACKET        reduce using rule 58 (atom -> var_use .)
    MODULE          reduce using rule 58 (atom -> var_use .)
    DIVIDE          reduce using rule 58 (atom -> var_use .)
    MULTIPLY        reduce using rule 58 (atom -> var_use .)
    ASTERPOWER      reduce using rule 58 (atom -> var_use .)
    POWER           reduce using rule 58 (atom -> var_use .)
    MINUS           reduce using rule 58 (atom -> var_use .)
    PLUS            reduce using rule 58 (atom -> var_use .)
    SEMICOLON       reduce using rule 58 (atom -> var_use .)
    $end            reduce using rule 58 (atom -> var_use .)
    OR              reduce using rule 58 (atom -> var_use .)
    SINCETHAT       reduce using rule 58 (atom -> var_use .)
    COMMA           reduce using rule 58 (atom -> var_use .)
    RBRACKET        reduce using rule 58 (atom -> var_use .)
    RPAREN          reduce using rule 58 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 58 (atom -> var_use .)
    EQUAL           reduce using rule 58 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 58 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 58 (atom -> var_use .)
    LESS_THAN       reduce using rule 58 (atom -> var_use .)
    GREATER_THAN    reduce using rule 58 (atom -> var_use .)
    AS              reduce using rule 58 (atom -> var_use .)
    IN              reduce using rule 58 (atom -> var_use .)
    ELSE            reduce using rule 58 (atom -> var_use .)
    ELIF            reduce using rule 58 (atom -> var_use .)
    AND             reduce using rule 58 (atom -> var_use .)

29: 
state 29

    (52) atom -> build_in_consts .
    ESPACEDCONCAT   reduce using rule 52 (atom -> build_in_consts .)
    CONCAT          reduce using rule 52 (atom -> build_in_consts .)
    LBRACKET        reduce using rule 52 (atom -> build_in_consts .)
    MODULE          reduce using rule 52 (atom -> build_in_consts .)
    DIVIDE          reduce using rule 52 (atom -> build_in_consts .)
    MULTIPLY        reduce using rule 52 (atom -> build_in_consts .)
    ASTERPOWER      reduce using rule 52 (atom -> build_in_consts .)
    POWER           reduce using rule 52 (atom -> build_in_consts .)
    MINUS           reduce using rule 52 (atom -> build_in_consts .)
    PLUS            reduce using rule 52 (atom -> build_in_consts .)
    SEMICOLON       reduce using rule 52 (atom -> build_in_consts .)
    $end            reduce using rule 52 (atom -> build_in_consts .)
    RPAREN          reduce using rule 52 (atom -> build_in_consts .)
    ASSIGN          reduce using rule 52 (atom -> build_in_consts .)
    OR              reduce using rule 52 (atom -> build_in_consts .)
    SINCETHAT       reduce using rule 52 (atom -> build_in_consts .)
    COMMA           reduce using rule 52 (atom -> build_in_consts .)
    RBRACKET        reduce using rule 52 (atom -> build_in_consts .)
    NOT_EQUAL       reduce using rule 52 (atom -> build_in_consts .)
    EQUAL           reduce using rule 52 (atom -> build_in_consts .)
    LESS_EQUAL      reduce using rule 52 (atom -> build_in_consts .)
    GREATER_EQUAL   reduce using rule 52 (atom -> build_in_consts .)
    LESS_THAN       reduce using rule 52 (atom -> build_in_consts .)
    GREATER_THAN    reduce using rule 52 (atom -> build_in_consts .)
    AS              reduce using rule 52 (atom -> build_in_consts .)
    IN              reduce using rule 52 (atom -> build_in_consts .)
    ELSE            reduce using rule 52 (atom -> build_in_consts .)
    ELIF            reduce using rule 52 (atom -> build_in_consts .)
    AND             reduce using rule 52 (atom -> build_in_consts .)

30: 
state 30

    (53) atom -> build_in_functions .
    ESPACEDCONCAT   reduce using rule 53 (atom -> build_in_functions .)
    CONCAT          reduce using rule 53 (atom -> build_in_functions .)
    LBRACKET        reduce using rule 53 (atom -> build_in_functions .)
    MODULE          reduce using rule 53 (atom -> build_in_functions .)
    DIVIDE          reduce using rule 53 (atom -> build_in_functions .)
    MULTIPLY        reduce using rule 53 (atom -> build_in_functions .)
    ASTERPOWER      reduce using rule 53 (atom -> build_in_functions .)
    POWER           reduce using rule 53 (atom -> build_in_functions .)
    MINUS           reduce using rule 53 (atom -> build_in_functions .)
    PLUS            reduce using rule 53 (atom -> build_in_functions .)
    SEMICOLON       reduce using rule 53 (atom -> build_in_functions .)
    $end            reduce using rule 53 (atom -> build_in_functions .)
    RPAREN          reduce using rule 53 (atom -> build_in_functions .)
    ASSIGN          reduce using rule 53 (atom -> build_in_functions .)
    OR              reduce using rule 53 (atom -> build_in_functions .)
    SINCETHAT       reduce using rule 53 (atom -> build_in_functions .)
    COMMA           reduce using rule 53 (atom -> build_in_functions .)
    RBRACKET        reduce using rule 53 (atom -> build_in_functions .)
    NOT_EQUAL       reduce using rule 53 (atom -> build_in_functions .)
    EQUAL           reduce using rule 53 (atom -> build_in_functions .)
    LESS_EQUAL      reduce using rule 53 (atom -> build_in_functions .)
    GREATER_EQUAL   reduce using rule 53 (atom -> build_in_functions .)
    LESS_THAN       reduce using rule 53 (atom -> build_in_functions .)
    GREATER_THAN    reduce using rule 53 (atom -> build_in_functions .)
    AS              reduce using rule 53 (atom -> build_in_functions .)
    IN              reduce using rule 53 (atom -> build_in_functions .)
    ELSE            reduce using rule 53 (atom -> build_in_functions .)
    ELIF            reduce using rule 53 (atom -> build_in_functions .)
    AND             reduce using rule 53 (atom -> build_in_functions .)

31: 
state 31

    (54) atom -> boolean_value .
    ESPACEDCONCAT   reduce using rule 54 (atom -> boolean_value .)
    CONCAT          reduce using rule 54 (atom -> boolean_value .)
    LBRACKET        reduce using rule 54 (atom -> boolean_value .)
    MODULE          reduce using rule 54 (atom -> boolean_value .)
    DIVIDE          reduce using rule 54 (atom -> boolean_value .)
    MULTIPLY        reduce using rule 54 (atom -> boolean_value .)
    ASTERPOWER      reduce using rule 54 (atom -> boolean_value .)
    POWER           reduce using rule 54 (atom -> boolean_value .)
    MINUS           reduce using rule 54 (atom -> boolean_value .)
    PLUS            reduce using rule 54 (atom -> boolean_value .)
    SEMICOLON       reduce using rule 54 (atom -> boolean_value .)
    $end            reduce using rule 54 (atom -> boolean_value .)
    RPAREN          reduce using rule 54 (atom -> boolean_value .)
    ASSIGN          reduce using rule 54 (atom -> boolean_value .)
    OR              reduce using rule 54 (atom -> boolean_value .)
    SINCETHAT       reduce using rule 54 (atom -> boolean_value .)
    COMMA           reduce using rule 54 (atom -> boolean_value .)
    RBRACKET        reduce using rule 54 (atom -> boolean_value .)
    NOT_EQUAL       reduce using rule 54 (atom -> boolean_value .)
    EQUAL           reduce using rule 54 (atom -> boolean_value .)
    LESS_EQUAL      reduce using rule 54 (atom -> boolean_value .)
    GREATER_EQUAL   reduce using rule 54 (atom -> boolean_value .)
    LESS_THAN       reduce using rule 54 (atom -> boolean_value .)
    GREATER_THAN    reduce using rule 54 (atom -> boolean_value .)
    AS              reduce using rule 54 (atom -> boolean_value .)
    IN              reduce using rule 54 (atom -> boolean_value .)
    ELSE            reduce using rule 54 (atom -> boolean_value .)
    ELIF            reduce using rule 54 (atom -> boolean_value .)
    AND             reduce using rule 54 (atom -> boolean_value .)

32: 
state 32

    (55) atom -> type_instanciation .
    ESPACEDCONCAT   reduce using rule 55 (atom -> type_instanciation .)
    CONCAT          reduce using rule 55 (atom -> type_instanciation .)
    LBRACKET        reduce using rule 55 (atom -> type_instanciation .)
    MODULE          reduce using rule 55 (atom -> type_instanciation .)
    DIVIDE          reduce using rule 55 (atom -> type_instanciation .)
    MULTIPLY        reduce using rule 55 (atom -> type_instanciation .)
    ASTERPOWER      reduce using rule 55 (atom -> type_instanciation .)
    POWER           reduce using rule 55 (atom -> type_instanciation .)
    MINUS           reduce using rule 55 (atom -> type_instanciation .)
    PLUS            reduce using rule 55 (atom -> type_instanciation .)
    SEMICOLON       reduce using rule 55 (atom -> type_instanciation .)
    $end            reduce using rule 55 (atom -> type_instanciation .)
    RPAREN          reduce using rule 55 (atom -> type_instanciation .)
    ASSIGN          reduce using rule 55 (atom -> type_instanciation .)
    OR              reduce using rule 55 (atom -> type_instanciation .)
    SINCETHAT       reduce using rule 55 (atom -> type_instanciation .)
    COMMA           reduce using rule 55 (atom -> type_instanciation .)
    RBRACKET        reduce using rule 55 (atom -> type_instanciation .)
    NOT_EQUAL       reduce using rule 55 (atom -> type_instanciation .)
    EQUAL           reduce using rule 55 (atom -> type_instanciation .)
    LESS_EQUAL      reduce using rule 55 (atom -> type_instanciation .)
    GREATER_EQUAL   reduce using rule 55 (atom -> type_instanciation .)
    LESS_THAN       reduce using rule 55 (atom -> type_instanciation .)
    GREATER_THAN    reduce using rule 55 (atom -> type_instanciation .)
    AS              reduce using rule 55 (atom -> type_instanciation .)
    IN              reduce using rule 55 (atom -> type_instanciation .)
    ELSE            reduce using rule 55 (atom -> type_instanciation .)
    ELIF            reduce using rule 55 (atom -> type_instanciation .)
    AND             reduce using rule 55 (atom -> type_instanciation .)

33: 
state 33

    (56) atom -> var_method .
    ESPACEDCONCAT   reduce using rule 56 (atom -> var_method .)
    CONCAT          reduce using rule 56 (atom -> var_method .)
    LBRACKET        reduce using rule 56 (atom -> var_method .)
    MODULE          reduce using rule 56 (atom -> var_method .)
    DIVIDE          reduce using rule 56 (atom -> var_method .)
    MULTIPLY        reduce using rule 56 (atom -> var_method .)
    ASTERPOWER      reduce using rule 56 (atom -> var_method .)
    POWER           reduce using rule 56 (atom -> var_method .)
    MINUS           reduce using rule 56 (atom -> var_method .)
    PLUS            reduce using rule 56 (atom -> var_method .)
    SEMICOLON       reduce using rule 56 (atom -> var_method .)
    $end            reduce using rule 56 (atom -> var_method .)
    RPAREN          reduce using rule 56 (atom -> var_method .)
    ASSIGN          reduce using rule 56 (atom -> var_method .)
    OR              reduce using rule 56 (atom -> var_method .)
    SINCETHAT       reduce using rule 56 (atom -> var_method .)
    COMMA           reduce using rule 56 (atom -> var_method .)
    RBRACKET        reduce using rule 56 (atom -> var_method .)
    NOT_EQUAL       reduce using rule 56 (atom -> var_method .)
    EQUAL           reduce using rule 56 (atom -> var_method .)
    LESS_EQUAL      reduce using rule 56 (atom -> var_method .)
    GREATER_EQUAL   reduce using rule 56 (atom -> var_method .)
    LESS_THAN       reduce using rule 56 (atom -> var_method .)
    GREATER_THAN    reduce using rule 56 (atom -> var_method .)
    AS              reduce using rule 56 (atom -> var_method .)
    IN              reduce using rule 56 (atom -> var_method .)
    ELSE            reduce using rule 56 (atom -> var_method .)
    ELIF            reduce using rule 56 (atom -> var_method .)
    AND             reduce using rule 56 (atom -> var_method .)

34: 
state 34

    (57) atom -> vector .
    ESPACEDCONCAT   reduce using rule 57 (atom -> vector .)
    CONCAT          reduce using rule 57 (atom -> vector .)
    LBRACKET        reduce using rule 57 (atom -> vector .)
    MODULE          reduce using rule 57 (atom -> vector .)
    DIVIDE          reduce using rule 57 (atom -> vector .)
    MULTIPLY        reduce using rule 57 (atom -> vector .)
    ASTERPOWER      reduce using rule 57 (atom -> vector .)
    POWER           reduce using rule 57 (atom -> vector .)
    MINUS           reduce using rule 57 (atom -> vector .)
    PLUS            reduce using rule 57 (atom -> vector .)
    SEMICOLON       reduce using rule 57 (atom -> vector .)
    $end            reduce using rule 57 (atom -> vector .)
    RPAREN          reduce using rule 57 (atom -> vector .)
    ASSIGN          reduce using rule 57 (atom -> vector .)
    OR              reduce using rule 57 (atom -> vector .)
    SINCETHAT       reduce using rule 57 (atom -> vector .)
    COMMA           reduce using rule 57 (atom -> vector .)
    RBRACKET        reduce using rule 57 (atom -> vector .)
    NOT_EQUAL       reduce using rule 57 (atom -> vector .)
    EQUAL           reduce using rule 57 (atom -> vector .)
    LESS_EQUAL      reduce using rule 57 (atom -> vector .)
    GREATER_EQUAL   reduce using rule 57 (atom -> vector .)
    LESS_THAN       reduce using rule 57 (atom -> vector .)
    GREATER_THAN    reduce using rule 57 (atom -> vector .)
    AS              reduce using rule 57 (atom -> vector .)
    IN              reduce using rule 57 (atom -> vector .)
    ELSE            reduce using rule 57 (atom -> vector .)
    ELIF            reduce using rule 57 (atom -> vector .)
    AND             reduce using rule 57 (atom -> vector .)

35: 
state 35

    (59) atom -> function_call .
    ESPACEDCONCAT   reduce using rule 59 (atom -> function_call .)
    CONCAT          reduce using rule 59 (atom -> function_call .)
    LBRACKET        reduce using rule 59 (atom -> function_call .)
    MODULE          reduce using rule 59 (atom -> function_call .)
    DIVIDE          reduce using rule 59 (atom -> function_call .)
    MULTIPLY        reduce using rule 59 (atom -> function_call .)
    ASTERPOWER      reduce using rule 59 (atom -> function_call .)
    POWER           reduce using rule 59 (atom -> function_call .)
    MINUS           reduce using rule 59 (atom -> function_call .)
    PLUS            reduce using rule 59 (atom -> function_call .)
    SEMICOLON       reduce using rule 59 (atom -> function_call .)
    $end            reduce using rule 59 (atom -> function_call .)
    RPAREN          reduce using rule 59 (atom -> function_call .)
    ASSIGN          reduce using rule 59 (atom -> function_call .)
    OR              reduce using rule 59 (atom -> function_call .)
    SINCETHAT       reduce using rule 59 (atom -> function_call .)
    COMMA           reduce using rule 59 (atom -> function_call .)
    RBRACKET        reduce using rule 59 (atom -> function_call .)
    NOT_EQUAL       reduce using rule 59 (atom -> function_call .)
    EQUAL           reduce using rule 59 (atom -> function_call .)
    LESS_EQUAL      reduce using rule 59 (atom -> function_call .)
    GREATER_EQUAL   reduce using rule 59 (atom -> function_call .)
    LESS_THAN       reduce using rule 59 (atom -> function_call .)
    GREATER_THAN    reduce using rule 59 (atom -> function_call .)
    AS              reduce using rule 59 (atom -> function_call .)
    IN              reduce using rule 59 (atom -> function_call .)
    ELSE            reduce using rule 59 (atom -> function_call .)
    ELIF            reduce using rule 59 (atom -> function_call .)
    AND             reduce using rule 59 (atom -> function_call .)

36: 
state 36

    (60) atom -> STRING .
    ESPACEDCONCAT   reduce using rule 60 (atom -> STRING .)
    CONCAT          reduce using rule 60 (atom -> STRING .)
    LBRACKET        reduce using rule 60 (atom -> STRING .)
    MODULE          reduce using rule 60 (atom -> STRING .)
    DIVIDE          reduce using rule 60 (atom -> STRING .)
    MULTIPLY        reduce using rule 60 (atom -> STRING .)
    ASTERPOWER      reduce using rule 60 (atom -> STRING .)
    POWER           reduce using rule 60 (atom -> STRING .)
    MINUS           reduce using rule 60 (atom -> STRING .)
    PLUS            reduce using rule 60 (atom -> STRING .)
    SEMICOLON       reduce using rule 60 (atom -> STRING .)
    $end            reduce using rule 60 (atom -> STRING .)
    RPAREN          reduce using rule 60 (atom -> STRING .)
    ASSIGN          reduce using rule 60 (atom -> STRING .)
    OR              reduce using rule 60 (atom -> STRING .)
    SINCETHAT       reduce using rule 60 (atom -> STRING .)
    COMMA           reduce using rule 60 (atom -> STRING .)
    RBRACKET        reduce using rule 60 (atom -> STRING .)
    NOT_EQUAL       reduce using rule 60 (atom -> STRING .)
    EQUAL           reduce using rule 60 (atom -> STRING .)
    LESS_EQUAL      reduce using rule 60 (atom -> STRING .)
    GREATER_EQUAL   reduce using rule 60 (atom -> STRING .)
    LESS_THAN       reduce using rule 60 (atom -> STRING .)
    GREATER_THAN    reduce using rule 60 (atom -> STRING .)
    AS              reduce using rule 60 (atom -> STRING .)
    IN              reduce using rule 60 (atom -> STRING .)
    ELSE            reduce using rule 60 (atom -> STRING .)
    ELIF            reduce using rule 60 (atom -> STRING .)
    AND             reduce using rule 60 (atom -> STRING .)

37: 
state 37

    (61) atom -> NUMBER .
    ESPACEDCONCAT   reduce using rule 61 (atom -> NUMBER .)
    CONCAT          reduce using rule 61 (atom -> NUMBER .)
    LBRACKET        reduce using rule 61 (atom -> NUMBER .)
    MODULE          reduce using rule 61 (atom -> NUMBER .)
    DIVIDE          reduce using rule 61 (atom -> NUMBER .)
    MULTIPLY        reduce using rule 61 (atom -> NUMBER .)
    ASTERPOWER      reduce using rule 61 (atom -> NUMBER .)
    POWER           reduce using rule 61 (atom -> NUMBER .)
    MINUS           reduce using rule 61 (atom -> NUMBER .)
    PLUS            reduce using rule 61 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 61 (atom -> NUMBER .)
    $end            reduce using rule 61 (atom -> NUMBER .)
    RPAREN          reduce using rule 61 (atom -> NUMBER .)
    ASSIGN          reduce using rule 61 (atom -> NUMBER .)
    OR              reduce using rule 61 (atom -> NUMBER .)
    SINCETHAT       reduce using rule 61 (atom -> NUMBER .)
    COMMA           reduce using rule 61 (atom -> NUMBER .)
    RBRACKET        reduce using rule 61 (atom -> NUMBER .)
    NOT_EQUAL       reduce using rule 61 (atom -> NUMBER .)
    EQUAL           reduce using rule 61 (atom -> NUMBER .)
    LESS_EQUAL      reduce using rule 61 (atom -> NUMBER .)
    GREATER_EQUAL   reduce using rule 61 (atom -> NUMBER .)
    LESS_THAN       reduce using rule 61 (atom -> NUMBER .)
    GREATER_THAN    reduce using rule 61 (atom -> NUMBER .)
    AS              reduce using rule 61 (atom -> NUMBER .)
    IN              reduce using rule 61 (atom -> NUMBER .)
    ELSE            reduce using rule 61 (atom -> NUMBER .)
    ELIF            reduce using rule 61 (atom -> NUMBER .)
    AND             reduce using rule 61 (atom -> NUMBER .)

38: 
state 38

    (40) aritmetic_operation -> term .
    (41) aritmetic_operation -> term . MINUS aritmetic_operation
    (42) aritmetic_operation -> term . PLUS aritmetic_operation
    SEMICOLON       reduce using rule 40 (aritmetic_operation -> term .)
    $end            reduce using rule 40 (aritmetic_operation -> term .)
    RPAREN          reduce using rule 40 (aritmetic_operation -> term .)
    OR              reduce using rule 40 (aritmetic_operation -> term .)
    SINCETHAT       reduce using rule 40 (aritmetic_operation -> term .)
    COMMA           reduce using rule 40 (aritmetic_operation -> term .)
    RBRACKET        reduce using rule 40 (aritmetic_operation -> term .)
    NOT_EQUAL       reduce using rule 40 (aritmetic_operation -> term .)
    EQUAL           reduce using rule 40 (aritmetic_operation -> term .)
    LESS_EQUAL      reduce using rule 40 (aritmetic_operation -> term .)
    GREATER_EQUAL   reduce using rule 40 (aritmetic_operation -> term .)
    LESS_THAN       reduce using rule 40 (aritmetic_operation -> term .)
    GREATER_THAN    reduce using rule 40 (aritmetic_operation -> term .)
    AS              reduce using rule 40 (aritmetic_operation -> term .)
    IN              reduce using rule 40 (aritmetic_operation -> term .)
    ELSE            reduce using rule 40 (aritmetic_operation -> term .)
    ELIF            reduce using rule 40 (aritmetic_operation -> term .)
    AND             reduce using rule 40 (aritmetic_operation -> term .)
    MINUS           shift and go to state 89
    PLUS            shift and go to state 90

39: 
state 39

    (88) for_loop -> FOR . LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> FOR . LPAREN identifier IN expression RPAREN scope
    LPAREN          shift and go to state 91

40: 
state 40

    (74) conditional -> IF . full_conditional
    (75) conditional -> IF . inline_conditional
    (77) full_conditional -> . LPAREN conditional_expression RPAREN scope else_elif_statement
    (76) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 94

    full_conditional               shift and go to state 92
    inline_conditional             shift and go to state 93
41: 
state 41

    (84) while_loop -> WHILE . LPAREN expression RPAREN expression
    (85) while_loop -> WHILE . LPAREN expression RPAREN scope
    (86) while_loop -> WHILE . LPAREN conditional_expression RPAREN expression
    (87) while_loop -> WHILE . LPAREN conditional_expression RPAREN scope
    LPAREN          shift and go to state 95

42: 
state 42

    (141) var_use -> var_attr .
    ASSIGN          reduce using rule 141 (var_use -> var_attr .)
    DEST_ASSIGN     reduce using rule 141 (var_use -> var_attr .)
    ESPACEDCONCAT   reduce using rule 141 (var_use -> var_attr .)
    CONCAT          reduce using rule 141 (var_use -> var_attr .)
    LBRACKET        reduce using rule 141 (var_use -> var_attr .)
    MODULE          reduce using rule 141 (var_use -> var_attr .)
    DIVIDE          reduce using rule 141 (var_use -> var_attr .)
    MULTIPLY        reduce using rule 141 (var_use -> var_attr .)
    ASTERPOWER      reduce using rule 141 (var_use -> var_attr .)
    POWER           reduce using rule 141 (var_use -> var_attr .)
    MINUS           reduce using rule 141 (var_use -> var_attr .)
    PLUS            reduce using rule 141 (var_use -> var_attr .)
    SEMICOLON       reduce using rule 141 (var_use -> var_attr .)
    $end            reduce using rule 141 (var_use -> var_attr .)
    RPAREN          reduce using rule 141 (var_use -> var_attr .)
    OR              reduce using rule 141 (var_use -> var_attr .)
    SINCETHAT       reduce using rule 141 (var_use -> var_attr .)
    COMMA           reduce using rule 141 (var_use -> var_attr .)
    RBRACKET        reduce using rule 141 (var_use -> var_attr .)
    NOT_EQUAL       reduce using rule 141 (var_use -> var_attr .)
    EQUAL           reduce using rule 141 (var_use -> var_attr .)
    LESS_EQUAL      reduce using rule 141 (var_use -> var_attr .)
    GREATER_EQUAL   reduce using rule 141 (var_use -> var_attr .)
    LESS_THAN       reduce using rule 141 (var_use -> var_attr .)
    GREATER_THAN    reduce using rule 141 (var_use -> var_attr .)
    AS              reduce using rule 141 (var_use -> var_attr .)
    IN              reduce using rule 141 (var_use -> var_attr .)
    ELSE            reduce using rule 141 (var_use -> var_attr .)
    ELIF            reduce using rule 141 (var_use -> var_attr .)
    AND             reduce using rule 141 (var_use -> var_attr .)

43: 
state 43

    (161) vector -> LBRACKET . vector_decl RBRACKET
    (162) vector_decl -> . expression OR identifier IN expression
    (163) vector_decl -> . expression SINCETHAT identifier IN expression
    (164) vector_decl -> . param_list
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (137) param_list -> . param COMMA param_list
    (138) param_list -> . param
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (139) param -> . conditional
    (140) param -> . expression
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    IF              shift and go to state 40
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    vector_decl                    shift and go to state 96
    expression                     shift and go to state 97
    param_list                     shift and go to state 98
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    param                          shift and go to state 99
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    conditional                    shift and go to state 100
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
44: 
state 44

    (175) build_in_consts -> E_CONST .
    ESPACEDCONCAT   reduce using rule 175 (build_in_consts -> E_CONST .)
    CONCAT          reduce using rule 175 (build_in_consts -> E_CONST .)
    LBRACKET        reduce using rule 175 (build_in_consts -> E_CONST .)
    MODULE          reduce using rule 175 (build_in_consts -> E_CONST .)
    DIVIDE          reduce using rule 175 (build_in_consts -> E_CONST .)
    MULTIPLY        reduce using rule 175 (build_in_consts -> E_CONST .)
    ASTERPOWER      reduce using rule 175 (build_in_consts -> E_CONST .)
    POWER           reduce using rule 175 (build_in_consts -> E_CONST .)
    MINUS           reduce using rule 175 (build_in_consts -> E_CONST .)
    PLUS            reduce using rule 175 (build_in_consts -> E_CONST .)
    SEMICOLON       reduce using rule 175 (build_in_consts -> E_CONST .)
    $end            reduce using rule 175 (build_in_consts -> E_CONST .)
    RPAREN          reduce using rule 175 (build_in_consts -> E_CONST .)
    ASSIGN          reduce using rule 175 (build_in_consts -> E_CONST .)
    OR              reduce using rule 175 (build_in_consts -> E_CONST .)
    SINCETHAT       reduce using rule 175 (build_in_consts -> E_CONST .)
    COMMA           reduce using rule 175 (build_in_consts -> E_CONST .)
    RBRACKET        reduce using rule 175 (build_in_consts -> E_CONST .)
    NOT_EQUAL       reduce using rule 175 (build_in_consts -> E_CONST .)
    EQUAL           reduce using rule 175 (build_in_consts -> E_CONST .)
    LESS_EQUAL      reduce using rule 175 (build_in_consts -> E_CONST .)
    GREATER_EQUAL   reduce using rule 175 (build_in_consts -> E_CONST .)
    LESS_THAN       reduce using rule 175 (build_in_consts -> E_CONST .)
    GREATER_THAN    reduce using rule 175 (build_in_consts -> E_CONST .)
    AS              reduce using rule 175 (build_in_consts -> E_CONST .)
    IN              reduce using rule 175 (build_in_consts -> E_CONST .)
    ELSE            reduce using rule 175 (build_in_consts -> E_CONST .)
    ELIF            reduce using rule 175 (build_in_consts -> E_CONST .)
    AND             reduce using rule 175 (build_in_consts -> E_CONST .)

45: 
state 45

    (176) build_in_consts -> PI_CONST .
    ESPACEDCONCAT   reduce using rule 176 (build_in_consts -> PI_CONST .)
    CONCAT          reduce using rule 176 (build_in_consts -> PI_CONST .)
    LBRACKET        reduce using rule 176 (build_in_consts -> PI_CONST .)
    MODULE          reduce using rule 176 (build_in_consts -> PI_CONST .)
    DIVIDE          reduce using rule 176 (build_in_consts -> PI_CONST .)
    MULTIPLY        reduce using rule 176 (build_in_consts -> PI_CONST .)
    ASTERPOWER      reduce using rule 176 (build_in_consts -> PI_CONST .)
    POWER           reduce using rule 176 (build_in_consts -> PI_CONST .)
    MINUS           reduce using rule 176 (build_in_consts -> PI_CONST .)
    PLUS            reduce using rule 176 (build_in_consts -> PI_CONST .)
    SEMICOLON       reduce using rule 176 (build_in_consts -> PI_CONST .)
    $end            reduce using rule 176 (build_in_consts -> PI_CONST .)
    RPAREN          reduce using rule 176 (build_in_consts -> PI_CONST .)
    ASSIGN          reduce using rule 176 (build_in_consts -> PI_CONST .)
    OR              reduce using rule 176 (build_in_consts -> PI_CONST .)
    SINCETHAT       reduce using rule 176 (build_in_consts -> PI_CONST .)
    COMMA           reduce using rule 176 (build_in_consts -> PI_CONST .)
    RBRACKET        reduce using rule 176 (build_in_consts -> PI_CONST .)
    NOT_EQUAL       reduce using rule 176 (build_in_consts -> PI_CONST .)
    EQUAL           reduce using rule 176 (build_in_consts -> PI_CONST .)
    LESS_EQUAL      reduce using rule 176 (build_in_consts -> PI_CONST .)
    GREATER_EQUAL   reduce using rule 176 (build_in_consts -> PI_CONST .)
    LESS_THAN       reduce using rule 176 (build_in_consts -> PI_CONST .)
    GREATER_THAN    reduce using rule 176 (build_in_consts -> PI_CONST .)
    AS              reduce using rule 176 (build_in_consts -> PI_CONST .)
    IN              reduce using rule 176 (build_in_consts -> PI_CONST .)
    ELSE            reduce using rule 176 (build_in_consts -> PI_CONST .)
    ELIF            reduce using rule 176 (build_in_consts -> PI_CONST .)
    AND             reduce using rule 176 (build_in_consts -> PI_CONST .)

46: 
state 46

    (167) build_in_functions -> RAND . LPAREN RPAREN
    LPAREN          shift and go to state 101

47: 
state 47

    (168) build_in_functions -> LOG . LPAREN param COMMA param RPAREN
    LPAREN          shift and go to state 102

48: 
state 48

    (169) build_in_functions -> EXP . LPAREN param RPAREN
    LPAREN          shift and go to state 103

49: 
state 49

    (170) build_in_functions -> COS . LPAREN param RPAREN
    LPAREN          shift and go to state 104

50: 
state 50

    (171) build_in_functions -> SIN . LPAREN param RPAREN
    LPAREN          shift and go to state 105

51: 
state 51

    (172) build_in_functions -> SQRT . LPAREN param RPAREN
    LPAREN          shift and go to state 106

52: 
state 52

    (173) build_in_functions -> build_in_print .
    ESPACEDCONCAT   reduce using rule 173 (build_in_functions -> build_in_print .)
    CONCAT          reduce using rule 173 (build_in_functions -> build_in_print .)
    LBRACKET        reduce using rule 173 (build_in_functions -> build_in_print .)
    MODULE          reduce using rule 173 (build_in_functions -> build_in_print .)
    DIVIDE          reduce using rule 173 (build_in_functions -> build_in_print .)
    MULTIPLY        reduce using rule 173 (build_in_functions -> build_in_print .)
    ASTERPOWER      reduce using rule 173 (build_in_functions -> build_in_print .)
    POWER           reduce using rule 173 (build_in_functions -> build_in_print .)
    MINUS           reduce using rule 173 (build_in_functions -> build_in_print .)
    PLUS            reduce using rule 173 (build_in_functions -> build_in_print .)
    SEMICOLON       reduce using rule 173 (build_in_functions -> build_in_print .)
    $end            reduce using rule 173 (build_in_functions -> build_in_print .)
    RPAREN          reduce using rule 173 (build_in_functions -> build_in_print .)
    ASSIGN          reduce using rule 173 (build_in_functions -> build_in_print .)
    OR              reduce using rule 173 (build_in_functions -> build_in_print .)
    SINCETHAT       reduce using rule 173 (build_in_functions -> build_in_print .)
    COMMA           reduce using rule 173 (build_in_functions -> build_in_print .)
    RBRACKET        reduce using rule 173 (build_in_functions -> build_in_print .)
    NOT_EQUAL       reduce using rule 173 (build_in_functions -> build_in_print .)
    EQUAL           reduce using rule 173 (build_in_functions -> build_in_print .)
    LESS_EQUAL      reduce using rule 173 (build_in_functions -> build_in_print .)
    GREATER_EQUAL   reduce using rule 173 (build_in_functions -> build_in_print .)
    LESS_THAN       reduce using rule 173 (build_in_functions -> build_in_print .)
    GREATER_THAN    reduce using rule 173 (build_in_functions -> build_in_print .)
    AS              reduce using rule 173 (build_in_functions -> build_in_print .)
    IN              reduce using rule 173 (build_in_functions -> build_in_print .)
    ELSE            reduce using rule 173 (build_in_functions -> build_in_print .)
    ELIF            reduce using rule 173 (build_in_functions -> build_in_print .)
    AND             reduce using rule 173 (build_in_functions -> build_in_print .)

53: 
state 53

    (174) build_in_functions -> build_in_range .
    ESPACEDCONCAT   reduce using rule 174 (build_in_functions -> build_in_range .)
    CONCAT          reduce using rule 174 (build_in_functions -> build_in_range .)
    LBRACKET        reduce using rule 174 (build_in_functions -> build_in_range .)
    MODULE          reduce using rule 174 (build_in_functions -> build_in_range .)
    DIVIDE          reduce using rule 174 (build_in_functions -> build_in_range .)
    MULTIPLY        reduce using rule 174 (build_in_functions -> build_in_range .)
    ASTERPOWER      reduce using rule 174 (build_in_functions -> build_in_range .)
    POWER           reduce using rule 174 (build_in_functions -> build_in_range .)
    MINUS           reduce using rule 174 (build_in_functions -> build_in_range .)
    PLUS            reduce using rule 174 (build_in_functions -> build_in_range .)
    SEMICOLON       reduce using rule 174 (build_in_functions -> build_in_range .)
    $end            reduce using rule 174 (build_in_functions -> build_in_range .)
    RPAREN          reduce using rule 174 (build_in_functions -> build_in_range .)
    ASSIGN          reduce using rule 174 (build_in_functions -> build_in_range .)
    OR              reduce using rule 174 (build_in_functions -> build_in_range .)
    SINCETHAT       reduce using rule 174 (build_in_functions -> build_in_range .)
    COMMA           reduce using rule 174 (build_in_functions -> build_in_range .)
    RBRACKET        reduce using rule 174 (build_in_functions -> build_in_range .)
    NOT_EQUAL       reduce using rule 174 (build_in_functions -> build_in_range .)
    EQUAL           reduce using rule 174 (build_in_functions -> build_in_range .)
    LESS_EQUAL      reduce using rule 174 (build_in_functions -> build_in_range .)
    GREATER_EQUAL   reduce using rule 174 (build_in_functions -> build_in_range .)
    LESS_THAN       reduce using rule 174 (build_in_functions -> build_in_range .)
    GREATER_THAN    reduce using rule 174 (build_in_functions -> build_in_range .)
    AS              reduce using rule 174 (build_in_functions -> build_in_range .)
    IN              reduce using rule 174 (build_in_functions -> build_in_range .)
    ELSE            reduce using rule 174 (build_in_functions -> build_in_range .)
    ELIF            reduce using rule 174 (build_in_functions -> build_in_range .)
    AND             reduce using rule 174 (build_in_functions -> build_in_range .)

54: 
state 54

    (103) boolean_value -> FALSE .
    ESPACEDCONCAT   reduce using rule 103 (boolean_value -> FALSE .)
    CONCAT          reduce using rule 103 (boolean_value -> FALSE .)
    LBRACKET        reduce using rule 103 (boolean_value -> FALSE .)
    MODULE          reduce using rule 103 (boolean_value -> FALSE .)
    DIVIDE          reduce using rule 103 (boolean_value -> FALSE .)
    MULTIPLY        reduce using rule 103 (boolean_value -> FALSE .)
    ASTERPOWER      reduce using rule 103 (boolean_value -> FALSE .)
    POWER           reduce using rule 103 (boolean_value -> FALSE .)
    MINUS           reduce using rule 103 (boolean_value -> FALSE .)
    PLUS            reduce using rule 103 (boolean_value -> FALSE .)
    SEMICOLON       reduce using rule 103 (boolean_value -> FALSE .)
    $end            reduce using rule 103 (boolean_value -> FALSE .)
    RPAREN          reduce using rule 103 (boolean_value -> FALSE .)
    ASSIGN          reduce using rule 103 (boolean_value -> FALSE .)
    OR              reduce using rule 103 (boolean_value -> FALSE .)
    SINCETHAT       reduce using rule 103 (boolean_value -> FALSE .)
    COMMA           reduce using rule 103 (boolean_value -> FALSE .)
    RBRACKET        reduce using rule 103 (boolean_value -> FALSE .)
    NOT_EQUAL       reduce using rule 103 (boolean_value -> FALSE .)
    EQUAL           reduce using rule 103 (boolean_value -> FALSE .)
    LESS_EQUAL      reduce using rule 103 (boolean_value -> FALSE .)
    GREATER_EQUAL   reduce using rule 103 (boolean_value -> FALSE .)
    LESS_THAN       reduce using rule 103 (boolean_value -> FALSE .)
    GREATER_THAN    reduce using rule 103 (boolean_value -> FALSE .)
    AS              reduce using rule 103 (boolean_value -> FALSE .)
    IN              reduce using rule 103 (boolean_value -> FALSE .)
    ELSE            reduce using rule 103 (boolean_value -> FALSE .)
    ELIF            reduce using rule 103 (boolean_value -> FALSE .)
    AND             reduce using rule 103 (boolean_value -> FALSE .)

55: 
state 55

    (104) boolean_value -> TRUE .
    ESPACEDCONCAT   reduce using rule 104 (boolean_value -> TRUE .)
    CONCAT          reduce using rule 104 (boolean_value -> TRUE .)
    LBRACKET        reduce using rule 104 (boolean_value -> TRUE .)
    MODULE          reduce using rule 104 (boolean_value -> TRUE .)
    DIVIDE          reduce using rule 104 (boolean_value -> TRUE .)
    MULTIPLY        reduce using rule 104 (boolean_value -> TRUE .)
    ASTERPOWER      reduce using rule 104 (boolean_value -> TRUE .)
    POWER           reduce using rule 104 (boolean_value -> TRUE .)
    MINUS           reduce using rule 104 (boolean_value -> TRUE .)
    PLUS            reduce using rule 104 (boolean_value -> TRUE .)
    SEMICOLON       reduce using rule 104 (boolean_value -> TRUE .)
    $end            reduce using rule 104 (boolean_value -> TRUE .)
    RPAREN          reduce using rule 104 (boolean_value -> TRUE .)
    ASSIGN          reduce using rule 104 (boolean_value -> TRUE .)
    OR              reduce using rule 104 (boolean_value -> TRUE .)
    SINCETHAT       reduce using rule 104 (boolean_value -> TRUE .)
    COMMA           reduce using rule 104 (boolean_value -> TRUE .)
    RBRACKET        reduce using rule 104 (boolean_value -> TRUE .)
    NOT_EQUAL       reduce using rule 104 (boolean_value -> TRUE .)
    EQUAL           reduce using rule 104 (boolean_value -> TRUE .)
    LESS_EQUAL      reduce using rule 104 (boolean_value -> TRUE .)
    GREATER_EQUAL   reduce using rule 104 (boolean_value -> TRUE .)
    LESS_THAN       reduce using rule 104 (boolean_value -> TRUE .)
    GREATER_THAN    reduce using rule 104 (boolean_value -> TRUE .)
    AS              reduce using rule 104 (boolean_value -> TRUE .)
    IN              reduce using rule 104 (boolean_value -> TRUE .)
    ELSE            reduce using rule 104 (boolean_value -> TRUE .)
    ELIF            reduce using rule 104 (boolean_value -> TRUE .)
    AND             reduce using rule 104 (boolean_value -> TRUE .)

56: 
state 56

    (133) type_instanciation -> NEW . IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> NEW . IDENTIFIER LPAREN param_list RPAREN
    IDENTIFIER      shift and go to state 107

57: 
state 57

    (43) term -> factor .
    (44) term -> factor . MODULE term
    (45) term -> factor . DIVIDE term
    (46) term -> factor . MULTIPLY term
    (48) factor -> factor . ASTERPOWER base_exponent
    (49) factor -> factor . POWER base_exponent
    MINUS           reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    SEMICOLON       reduce using rule 43 (term -> factor .)
    $end            reduce using rule 43 (term -> factor .)
    RPAREN          reduce using rule 43 (term -> factor .)
    OR              reduce using rule 43 (term -> factor .)
    SINCETHAT       reduce using rule 43 (term -> factor .)
    COMMA           reduce using rule 43 (term -> factor .)
    RBRACKET        reduce using rule 43 (term -> factor .)
    NOT_EQUAL       reduce using rule 43 (term -> factor .)
    EQUAL           reduce using rule 43 (term -> factor .)
    LESS_EQUAL      reduce using rule 43 (term -> factor .)
    GREATER_EQUAL   reduce using rule 43 (term -> factor .)
    LESS_THAN       reduce using rule 43 (term -> factor .)
    GREATER_THAN    reduce using rule 43 (term -> factor .)
    AS              reduce using rule 43 (term -> factor .)
    IN              reduce using rule 43 (term -> factor .)
    ELSE            reduce using rule 43 (term -> factor .)
    ELIF            reduce using rule 43 (term -> factor .)
    AND             reduce using rule 43 (term -> factor .)
    MODULE          shift and go to state 108
    DIVIDE          shift and go to state 109
    MULTIPLY        shift and go to state 110
    ASTERPOWER      shift and go to state 111
    POWER           shift and go to state 112

58: 
state 58

    (166) build_in_print -> PRINT . LPAREN param RPAREN
    LPAREN          shift and go to state 113

59: 
state 59

    (165) build_in_range -> RANGE . LPAREN param COMMA param RPAREN
    LPAREN          shift and go to state 114

60: 
state 60

    (47) factor -> base_exponent .
    MODULE          reduce using rule 47 (factor -> base_exponent .)
    DIVIDE          reduce using rule 47 (factor -> base_exponent .)
    MULTIPLY        reduce using rule 47 (factor -> base_exponent .)
    ASTERPOWER      reduce using rule 47 (factor -> base_exponent .)
    POWER           reduce using rule 47 (factor -> base_exponent .)
    MINUS           reduce using rule 47 (factor -> base_exponent .)
    PLUS            reduce using rule 47 (factor -> base_exponent .)
    SEMICOLON       reduce using rule 47 (factor -> base_exponent .)
    $end            reduce using rule 47 (factor -> base_exponent .)
    RPAREN          reduce using rule 47 (factor -> base_exponent .)
    OR              reduce using rule 47 (factor -> base_exponent .)
    SINCETHAT       reduce using rule 47 (factor -> base_exponent .)
    COMMA           reduce using rule 47 (factor -> base_exponent .)
    RBRACKET        reduce using rule 47 (factor -> base_exponent .)
    NOT_EQUAL       reduce using rule 47 (factor -> base_exponent .)
    EQUAL           reduce using rule 47 (factor -> base_exponent .)
    LESS_EQUAL      reduce using rule 47 (factor -> base_exponent .)
    GREATER_EQUAL   reduce using rule 47 (factor -> base_exponent .)
    LESS_THAN       reduce using rule 47 (factor -> base_exponent .)
    GREATER_THAN    reduce using rule 47 (factor -> base_exponent .)
    AS              reduce using rule 47 (factor -> base_exponent .)
    IN              reduce using rule 47 (factor -> base_exponent .)
    ELSE            reduce using rule 47 (factor -> base_exponent .)
    ELIF            reduce using rule 47 (factor -> base_exponent .)
    AND             reduce using rule 47 (factor -> base_exponent .)

61: 
state 61

    (3) program_decl_list -> program_level_decl program_decl_list .
    $end            reduce using rule 3 (program_decl_list -> program_level_decl program_decl_list .)

62: 
state 62

    (10) inst_wrapper -> inst SEMICOLON .
    $end            reduce using rule 10 (inst_wrapper -> inst SEMICOLON .)

63: 
state 63

    (150) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER . EXTENDS IDENTIFIER protocol_body
    (152) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body SEMICOLON
    (153) protocol_declaration -> PROTOCOL IDENTIFIER . protocol_body
    (154) protocol_body -> . LBRACE virtual_method_list RBRACE
    EXTENDS         shift and go to state 115
    LBRACE          shift and go to state 117

    protocol_body                  shift and go to state 116
64: 
state 64

    (146) var_method -> IDENTIFIER DOT . function_call
    (144) var_attr -> IDENTIFIER DOT . var_attr
    (145) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 118

    function_call                  shift and go to state 119
    var_attr                       shift and go to state 120
65: 
state 65

    (131) function_call -> IDENTIFIER LPAREN . RPAREN
    (132) function_call -> IDENTIFIER LPAREN . param_list RPAREN
    (137) param_list -> . param COMMA param_list
    (138) param_list -> . param
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    RPAREN          shift and go to state 121
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param_list                     shift and go to state 122
    param                          shift and go to state 99
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
66: 
state 66

    (64) function_declaration -> func_decl_id LPAREN . RPAREN function_inline_declaration
    (65) function_declaration -> func_decl_id LPAREN . id_list RPAREN function_inline_declaration
    (66) function_declaration -> func_decl_id LPAREN . RPAREN function_full_declaration SEMICOLON
    (67) function_declaration -> func_decl_id LPAREN . id_list RPAREN function_full_declaration SEMICOLON
    (68) function_declaration -> func_decl_id LPAREN . RPAREN function_full_declaration
    (69) function_declaration -> func_decl_id LPAREN . id_list RPAREN function_full_declaration
    (25) id_list -> . identifier COMMA id_list
    (26) id_list -> . identifier
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RPAREN          shift and go to state 124
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    id_list                        shift and go to state 125
    identifier                     shift and go to state 126
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
67: 
state 67

    (50) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    aritmetic_operation            shift and go to state 69
    term                           shift and go to state 38
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
68: 
state 68

    (12) inst -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 127

69: 
state 69

    (50) base_exponent -> LPAREN aritmetic_operation . RPAREN
    RPAREN          shift and go to state 128

70: 
state 70

    (51) base_exponent -> atom .
    (142) var_use -> atom . LBRACKET expression RBRACKET
    MODULE          reduce using rule 51 (base_exponent -> atom .)
    DIVIDE          reduce using rule 51 (base_exponent -> atom .)
    MULTIPLY        reduce using rule 51 (base_exponent -> atom .)
    ASTERPOWER      reduce using rule 51 (base_exponent -> atom .)
    POWER           reduce using rule 51 (base_exponent -> atom .)
    MINUS           reduce using rule 51 (base_exponent -> atom .)
    PLUS            reduce using rule 51 (base_exponent -> atom .)
    RPAREN          reduce using rule 51 (base_exponent -> atom .)
    SEMICOLON       reduce using rule 51 (base_exponent -> atom .)
    $end            reduce using rule 51 (base_exponent -> atom .)
    OR              reduce using rule 51 (base_exponent -> atom .)
    SINCETHAT       reduce using rule 51 (base_exponent -> atom .)
    COMMA           reduce using rule 51 (base_exponent -> atom .)
    RBRACKET        reduce using rule 51 (base_exponent -> atom .)
    NOT_EQUAL       reduce using rule 51 (base_exponent -> atom .)
    EQUAL           reduce using rule 51 (base_exponent -> atom .)
    LESS_EQUAL      reduce using rule 51 (base_exponent -> atom .)
    GREATER_EQUAL   reduce using rule 51 (base_exponent -> atom .)
    LESS_THAN       reduce using rule 51 (base_exponent -> atom .)
    GREATER_THAN    reduce using rule 51 (base_exponent -> atom .)
    AS              reduce using rule 51 (base_exponent -> atom .)
    IN              reduce using rule 51 (base_exponent -> atom .)
    ELSE            reduce using rule 51 (base_exponent -> atom .)
    ELIF            reduce using rule 51 (base_exponent -> atom .)
    AND             reduce using rule 51 (base_exponent -> atom .)
    LBRACKET        shift and go to state 77

71: 
state 71

    (58) atom -> var_use .
    LBRACKET        reduce using rule 58 (atom -> var_use .)
    MODULE          reduce using rule 58 (atom -> var_use .)
    DIVIDE          reduce using rule 58 (atom -> var_use .)
    MULTIPLY        reduce using rule 58 (atom -> var_use .)
    ASTERPOWER      reduce using rule 58 (atom -> var_use .)
    POWER           reduce using rule 58 (atom -> var_use .)
    MINUS           reduce using rule 58 (atom -> var_use .)
    PLUS            reduce using rule 58 (atom -> var_use .)
    RPAREN          reduce using rule 58 (atom -> var_use .)
    ASSIGN          reduce using rule 58 (atom -> var_use .)
    COMMA           reduce using rule 58 (atom -> var_use .)
    SEMICOLON       reduce using rule 58 (atom -> var_use .)
    $end            reduce using rule 58 (atom -> var_use .)
    OR              reduce using rule 58 (atom -> var_use .)
    SINCETHAT       reduce using rule 58 (atom -> var_use .)
    RBRACKET        reduce using rule 58 (atom -> var_use .)
    NOT_EQUAL       reduce using rule 58 (atom -> var_use .)
    EQUAL           reduce using rule 58 (atom -> var_use .)
    LESS_EQUAL      reduce using rule 58 (atom -> var_use .)
    GREATER_EQUAL   reduce using rule 58 (atom -> var_use .)
    LESS_THAN       reduce using rule 58 (atom -> var_use .)
    GREATER_THAN    reduce using rule 58 (atom -> var_use .)
    AS              reduce using rule 58 (atom -> var_use .)
    IN              reduce using rule 58 (atom -> var_use .)
    ELSE            reduce using rule 58 (atom -> var_use .)
    ELIF            reduce using rule 58 (atom -> var_use .)
    AND             reduce using rule 58 (atom -> var_use .)

72: 
state 72

    (146) var_method -> IDENTIFIER . DOT function_call
    (143) var_use -> IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN param_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    DOT             shift and go to state 64
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    $end            reduce using rule 143 (var_use -> IDENTIFIER .)
    OR              reduce using rule 143 (var_use -> IDENTIFIER .)
    SINCETHAT       reduce using rule 143 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 143 (var_use -> IDENTIFIER .)
    RBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    AS              reduce using rule 143 (var_use -> IDENTIFIER .)
    IN              reduce using rule 143 (var_use -> IDENTIFIER .)
    ELSE            reduce using rule 143 (var_use -> IDENTIFIER .)
    ELIF            reduce using rule 143 (var_use -> IDENTIFIER .)
    AND             reduce using rule 143 (var_use -> IDENTIFIER .)
    LPAREN          shift and go to state 65

73: 
state 73

    (105) type_declaration -> TYPE IDENTIFIER . constructor inherits_type decl_body SEMICOLON
    (106) type_declaration -> TYPE IDENTIFIER . constructor decl_body SEMICOLON
    (107) type_declaration -> TYPE IDENTIFIER . constructor inherits_type decl_body
    (108) type_declaration -> TYPE IDENTIFIER . constructor decl_body
    (109) constructor -> . empty
    (110) constructor -> . LPAREN RPAREN
    (111) constructor -> . LPAREN param_list RPAREN
    (112) constructor -> . LPAREN id_list RPAREN
    (177) empty -> .
    LPAREN          shift and go to state 131
    INHERITS        reduce using rule 177 (empty -> .)
    LBRACE          reduce using rule 177 (empty -> .)

    constructor                    shift and go to state 129
    empty                          shift and go to state 130
74: 
state 74

    (70) func_decl_id -> FUNCTION IDENTIFIER .
    LPAREN          reduce using rule 70 (func_decl_id -> FUNCTION IDENTIFIER .)

75: 
state 75

    (37) expression -> atom ESPACEDCONCAT . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    atom                           shift and go to state 21
    expression                     shift and go to state 132
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
76: 
state 76

    (38) expression -> atom CONCAT . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    atom                           shift and go to state 21
    expression                     shift and go to state 133
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
77: 
state 77

    (142) var_use -> atom LBRACKET . expression RBRACKET
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    atom                           shift and go to state 21
    expression                     shift and go to state 134
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
78: 
state 78

    (33) scope -> LBRACE RBRACE .
    SEMICOLON       reduce using rule 33 (scope -> LBRACE RBRACE .)
    $end            reduce using rule 33 (scope -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 33 (scope -> LBRACE RBRACE .)
    TYPE            reduce using rule 33 (scope -> LBRACE RBRACE .)
    LPAREN          reduce using rule 33 (scope -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 33 (scope -> LBRACE RBRACE .)
    LBRACE          reduce using rule 33 (scope -> LBRACE RBRACE .)
    LET             reduce using rule 33 (scope -> LBRACE RBRACE .)
    STRING          reduce using rule 33 (scope -> LBRACE RBRACE .)
    NUMBER          reduce using rule 33 (scope -> LBRACE RBRACE .)
    FOR             reduce using rule 33 (scope -> LBRACE RBRACE .)
    IF              reduce using rule 33 (scope -> LBRACE RBRACE .)
    WHILE           reduce using rule 33 (scope -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 33 (scope -> LBRACE RBRACE .)
    E_CONST         reduce using rule 33 (scope -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 33 (scope -> LBRACE RBRACE .)
    RAND            reduce using rule 33 (scope -> LBRACE RBRACE .)
    LOG             reduce using rule 33 (scope -> LBRACE RBRACE .)
    EXP             reduce using rule 33 (scope -> LBRACE RBRACE .)
    COS             reduce using rule 33 (scope -> LBRACE RBRACE .)
    SIN             reduce using rule 33 (scope -> LBRACE RBRACE .)
    SQRT            reduce using rule 33 (scope -> LBRACE RBRACE .)
    FALSE           reduce using rule 33 (scope -> LBRACE RBRACE .)
    TRUE            reduce using rule 33 (scope -> LBRACE RBRACE .)
    NEW             reduce using rule 33 (scope -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 33 (scope -> LBRACE RBRACE .)
    PRINT           reduce using rule 33 (scope -> LBRACE RBRACE .)
    RANGE           reduce using rule 33 (scope -> LBRACE RBRACE .)
    COMMA           reduce using rule 33 (scope -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 33 (scope -> LBRACE RBRACE .)
    RPAREN          reduce using rule 33 (scope -> LBRACE RBRACE .)
    OR              reduce using rule 33 (scope -> LBRACE RBRACE .)
    SINCETHAT       reduce using rule 33 (scope -> LBRACE RBRACE .)
    NOT_EQUAL       reduce using rule 33 (scope -> LBRACE RBRACE .)
    EQUAL           reduce using rule 33 (scope -> LBRACE RBRACE .)
    LESS_EQUAL      reduce using rule 33 (scope -> LBRACE RBRACE .)
    GREATER_EQUAL   reduce using rule 33 (scope -> LBRACE RBRACE .)
    LESS_THAN       reduce using rule 33 (scope -> LBRACE RBRACE .)
    GREATER_THAN    reduce using rule 33 (scope -> LBRACE RBRACE .)
    AS              reduce using rule 33 (scope -> LBRACE RBRACE .)
    IN              reduce using rule 33 (scope -> LBRACE RBRACE .)
    ELSE            reduce using rule 33 (scope -> LBRACE RBRACE .)
    ELIF            reduce using rule 33 (scope -> LBRACE RBRACE .)
    AND             reduce using rule 33 (scope -> LBRACE RBRACE .)

79: 
state 79

    (34) scope -> LBRACE inst_list . RBRACE
    RBRACE          shift and go to state 135

80: 
state 80

    (8) inst_list -> inst . SEMICOLON inst_list
    (9) inst_list -> inst . SEMICOLON
    SEMICOLON       shift and go to state 136

81: 
state 81

    (16) var_dec -> LET var_init_list . IN var_decl_expr
    IN              shift and go to state 137

82: 
state 82

    (21) var_init_list -> var_init . COMMA var_init_list
    (22) var_init_list -> var_init .
    COMMA           shift and go to state 138
    IN              reduce using rule 22 (var_init_list -> var_init .)

83: 
state 83

    (23) var_init -> identifier . ASSIGN inst type_downcast
    (24) var_init -> identifier . ASSIGN inst
    ASSIGN          shift and go to state 139

84: 
state 84

    (27) identifier -> fully_typed_param .
    ASSIGN          reduce using rule 27 (identifier -> fully_typed_param .)
    COMMA           reduce using rule 27 (identifier -> fully_typed_param .)
    RPAREN          reduce using rule 27 (identifier -> fully_typed_param .)
    IN              reduce using rule 27 (identifier -> fully_typed_param .)
    OR              reduce using rule 27 (identifier -> fully_typed_param .)
    AND             reduce using rule 27 (identifier -> fully_typed_param .)
    SEMICOLON       reduce using rule 27 (identifier -> fully_typed_param .)

85: 
state 85

    (28) identifier -> atom .
    (142) var_use -> atom . LBRACKET expression RBRACKET
    ASSIGN          reduce using rule 28 (identifier -> atom .)
    COMMA           reduce using rule 28 (identifier -> atom .)
    RPAREN          reduce using rule 28 (identifier -> atom .)
    IN              reduce using rule 28 (identifier -> atom .)
    OR              reduce using rule 28 (identifier -> atom .)
    AND             reduce using rule 28 (identifier -> atom .)
    SEMICOLON       reduce using rule 28 (identifier -> atom .)
    LBRACKET        shift and go to state 77

86: 
state 86

    (29) fully_typed_param -> IDENTIFIER . type_anotation
    (146) var_method -> IDENTIFIER . DOT function_call
    (143) var_use -> IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN param_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    DOT             shift and go to state 64
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    COMMA           reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    IN              reduce using rule 143 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    OR              reduce using rule 143 (var_use -> IDENTIFIER .)
    AND             reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    LPAREN          shift and go to state 65
    COLON           shift and go to state 141

    type_anotation                 shift and go to state 140
87: 
state 87

    (62) var_asign -> var_use ASSIGN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    var_use                        shift and go to state 28
    expression                     shift and go to state 142
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
88: 
state 88

    (63) var_asign -> var_use DEST_ASSIGN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    var_use                        shift and go to state 28
    expression                     shift and go to state 143
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
89: 
state 89

    (41) aritmetic_operation -> term MINUS . aritmetic_operation
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    term                           shift and go to state 38
    aritmetic_operation            shift and go to state 144
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
90: 
state 90

    (42) aritmetic_operation -> term PLUS . aritmetic_operation
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    term                           shift and go to state 38
    aritmetic_operation            shift and go to state 145
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
91: 
state 91

    (88) for_loop -> FOR LPAREN . identifier IN expression RPAREN expression
    (89) for_loop -> FOR LPAREN . identifier IN expression RPAREN scope
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    identifier                     shift and go to state 146
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
92: 
state 92

    (74) conditional -> IF full_conditional .
    SEMICOLON       reduce using rule 74 (conditional -> IF full_conditional .)
    $end            reduce using rule 74 (conditional -> IF full_conditional .)
    COMMA           reduce using rule 74 (conditional -> IF full_conditional .)
    RBRACKET        reduce using rule 74 (conditional -> IF full_conditional .)
    RPAREN          reduce using rule 74 (conditional -> IF full_conditional .)
    OR              reduce using rule 74 (conditional -> IF full_conditional .)
    SINCETHAT       reduce using rule 74 (conditional -> IF full_conditional .)
    NOT_EQUAL       reduce using rule 74 (conditional -> IF full_conditional .)
    EQUAL           reduce using rule 74 (conditional -> IF full_conditional .)
    LESS_EQUAL      reduce using rule 74 (conditional -> IF full_conditional .)
    GREATER_EQUAL   reduce using rule 74 (conditional -> IF full_conditional .)
    LESS_THAN       reduce using rule 74 (conditional -> IF full_conditional .)
    GREATER_THAN    reduce using rule 74 (conditional -> IF full_conditional .)
    AS              reduce using rule 74 (conditional -> IF full_conditional .)
    IN              reduce using rule 74 (conditional -> IF full_conditional .)
    ELSE            reduce using rule 74 (conditional -> IF full_conditional .)
    ELIF            reduce using rule 74 (conditional -> IF full_conditional .)
    AND             reduce using rule 74 (conditional -> IF full_conditional .)

93: 
state 93

    (75) conditional -> IF inline_conditional .
    SEMICOLON       reduce using rule 75 (conditional -> IF inline_conditional .)
    $end            reduce using rule 75 (conditional -> IF inline_conditional .)
    COMMA           reduce using rule 75 (conditional -> IF inline_conditional .)
    RBRACKET        reduce using rule 75 (conditional -> IF inline_conditional .)
    RPAREN          reduce using rule 75 (conditional -> IF inline_conditional .)
    OR              reduce using rule 75 (conditional -> IF inline_conditional .)
    SINCETHAT       reduce using rule 75 (conditional -> IF inline_conditional .)
    NOT_EQUAL       reduce using rule 75 (conditional -> IF inline_conditional .)
    EQUAL           reduce using rule 75 (conditional -> IF inline_conditional .)
    LESS_EQUAL      reduce using rule 75 (conditional -> IF inline_conditional .)
    GREATER_EQUAL   reduce using rule 75 (conditional -> IF inline_conditional .)
    LESS_THAN       reduce using rule 75 (conditional -> IF inline_conditional .)
    GREATER_THAN    reduce using rule 75 (conditional -> IF inline_conditional .)
    AS              reduce using rule 75 (conditional -> IF inline_conditional .)
    IN              reduce using rule 75 (conditional -> IF inline_conditional .)
    ELSE            reduce using rule 75 (conditional -> IF inline_conditional .)
    ELIF            reduce using rule 75 (conditional -> IF inline_conditional .)
    AND             reduce using rule 75 (conditional -> IF inline_conditional .)

94: 
state 94

    (77) full_conditional -> LPAREN . conditional_expression RPAREN scope else_elif_statement
    (76) inline_conditional -> LPAREN . conditional_expression RPAREN expression else_elif_statement
    (90) conditional_expression -> . condition
    (91) conditional_expression -> . NOT condition
    (92) conditional_expression -> . condition OR conditional_expression
    (93) conditional_expression -> . condition AND conditional_expression
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    NOT             shift and go to state 151
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    conditional_expression         shift and go to state 148
    expression                     shift and go to state 149
    condition                      shift and go to state 150
    comparation                    shift and go to state 153
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
95: 
state 95

    (84) while_loop -> WHILE LPAREN . expression RPAREN expression
    (85) while_loop -> WHILE LPAREN . expression RPAREN scope
    (86) while_loop -> WHILE LPAREN . conditional_expression RPAREN expression
    (87) while_loop -> WHILE LPAREN . conditional_expression RPAREN scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (90) conditional_expression -> . condition
    (91) conditional_expression -> . NOT condition
    (92) conditional_expression -> . condition OR conditional_expression
    (93) conditional_expression -> . condition AND conditional_expression
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    NOT             shift and go to state 151
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    expression                     shift and go to state 154
    conditional_expression         shift and go to state 155
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    condition                      shift and go to state 150
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    comparation                    shift and go to state 153
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
96: 
state 96

    (161) vector -> LBRACKET vector_decl . RBRACKET
    RBRACKET        shift and go to state 156

97: 
state 97

    (162) vector_decl -> expression . OR identifier IN expression
    (163) vector_decl -> expression . SINCETHAT identifier IN expression
    (140) param -> expression .
    OR              shift and go to state 157
    SINCETHAT       shift and go to state 158
    COMMA           reduce using rule 140 (param -> expression .)
    RBRACKET        reduce using rule 140 (param -> expression .)

98: 
state 98

    (164) vector_decl -> param_list .
    RBRACKET        reduce using rule 164 (vector_decl -> param_list .)

99: 
state 99

    (137) param_list -> param . COMMA param_list
    (138) param_list -> param .
    COMMA           shift and go to state 159
    RBRACKET        reduce using rule 138 (param_list -> param .)
    RPAREN          reduce using rule 138 (param_list -> param .)

100: 
state 100

    (139) param -> conditional .
    COMMA           reduce using rule 139 (param -> conditional .)
    RBRACKET        reduce using rule 139 (param -> conditional .)
    RPAREN          reduce using rule 139 (param -> conditional .)

101: 
state 101

    (167) build_in_functions -> RAND LPAREN . RPAREN
    RPAREN          shift and go to state 160

102: 
state 102

    (168) build_in_functions -> LOG LPAREN . param COMMA param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 161
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
103: 
state 103

    (169) build_in_functions -> EXP LPAREN . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 162
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
104: 
state 104

    (170) build_in_functions -> COS LPAREN . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 163
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
105: 
state 105

    (171) build_in_functions -> SIN LPAREN . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 164
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
106: 
state 106

    (172) build_in_functions -> SQRT LPAREN . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 165
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
107: 
state 107

    (133) type_instanciation -> NEW IDENTIFIER . LPAREN RPAREN
    (134) type_instanciation -> NEW IDENTIFIER . LPAREN param_list RPAREN
    LPAREN          shift and go to state 166

108: 
state 108

    (44) term -> factor MODULE . term
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    factor                         shift and go to state 57
    term                           shift and go to state 167
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
109: 
state 109

    (45) term -> factor DIVIDE . term
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    factor                         shift and go to state 57
    term                           shift and go to state 168
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
110: 
state 110

    (46) term -> factor MULTIPLY . term
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    factor                         shift and go to state 57
    term                           shift and go to state 169
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
111: 
state 111

    (48) factor -> factor ASTERPOWER . base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    base_exponent                  shift and go to state 170
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
112: 
state 112

    (49) factor -> factor POWER . base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    base_exponent                  shift and go to state 171
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
113: 
state 113

    (166) build_in_print -> PRINT LPAREN . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 172
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
114: 
state 114

    (165) build_in_range -> RANGE LPAREN . param COMMA param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 173
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
115: 
state 115

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS . IDENTIFIER protocol_body
    IDENTIFIER      shift and go to state 174

116: 
state 116

    (152) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body . SEMICOLON
    (153) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 175
    PROTOCOL        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TYPE            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LET             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    STRING          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FOR             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IF              reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    WHILE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RAND            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LOG             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    EXP             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    COS             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SIN             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    SQRT            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    FALSE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    TRUE            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    NEW             reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    PRINT           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    RANGE           reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)
    $end            reduce using rule 153 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body .)

117: 
state 117

    (154) protocol_body -> LBRACE . virtual_method_list RBRACE
    (155) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (156) virtual_method_list -> . virtual_method SEMICOLON
    (157) virtual_method -> . IDENTIFIER LPAREN fully_typed_params RPAREN type_anotation
    (158) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    IDENTIFIER      shift and go to state 178

    virtual_method_list            shift and go to state 176
    virtual_method                 shift and go to state 177
118: 
state 118

    (145) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN param_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LPAREN          shift and go to state 65
    DOT             shift and go to state 179

119: 
state 119

    (146) var_method -> IDENTIFIER DOT function_call .
    ESPACEDCONCAT   reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    CONCAT          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    LBRACKET        reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    MODULE          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    DIVIDE          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    MULTIPLY        reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ASTERPOWER      reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    POWER           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    MINUS           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    PLUS            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    SEMICOLON       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    $end            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    RPAREN          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ASSIGN          reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    OR              reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    SINCETHAT       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    COMMA           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    RBRACKET        reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    NOT_EQUAL       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    EQUAL           reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    LESS_EQUAL      reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_EQUAL   reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    LESS_THAN       reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    GREATER_THAN    reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    AS              reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    IN              reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ELSE            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    ELIF            reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)
    AND             reduce using rule 146 (var_method -> IDENTIFIER DOT function_call .)

120: 
state 120

    (144) var_attr -> IDENTIFIER DOT var_attr .
    ASSIGN          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    DEST_ASSIGN     reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ESPACEDCONCAT   reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    CONCAT          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    LBRACKET        reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    MODULE          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    DIVIDE          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    MULTIPLY        reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ASTERPOWER      reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    POWER           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    MINUS           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    PLUS            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    SEMICOLON       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    $end            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    RPAREN          reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    OR              reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    SINCETHAT       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    COMMA           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    RBRACKET        reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    NOT_EQUAL       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    EQUAL           reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_EQUAL      reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_EQUAL   reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    LESS_THAN       reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    GREATER_THAN    reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    AS              reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    IN              reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ELSE            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    ELIF            reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)
    AND             reduce using rule 144 (var_attr -> IDENTIFIER DOT var_attr .)

121: 
state 121

    (131) function_call -> IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)

122: 
state 122

    (132) function_call -> IDENTIFIER LPAREN param_list . RPAREN
    RPAREN          shift and go to state 180

123: 
state 123

    (140) param -> expression .
    COMMA           reduce using rule 140 (param -> expression .)
    RPAREN          reduce using rule 140 (param -> expression .)
    RBRACKET        reduce using rule 140 (param -> expression .)

124: 
state 124

    (64) function_declaration -> func_decl_id LPAREN RPAREN . function_inline_declaration
    (66) function_declaration -> func_decl_id LPAREN RPAREN . function_full_declaration SEMICOLON
    (68) function_declaration -> func_decl_id LPAREN RPAREN . function_full_declaration
    (72) function_inline_declaration -> . type_anotation RETURN inst SEMICOLON
    (73) function_inline_declaration -> . RETURN inst SEMICOLON
    (71) function_full_declaration -> . scope
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 184
    COLON           shift and go to state 141
    LBRACE          shift and go to state 26

    function_inline_declaration    shift and go to state 181
    function_full_declaration      shift and go to state 182
    type_anotation                 shift and go to state 183
    scope                          shift and go to state 185
125: 
state 125

    (65) function_declaration -> func_decl_id LPAREN id_list . RPAREN function_inline_declaration
    (67) function_declaration -> func_decl_id LPAREN id_list . RPAREN function_full_declaration SEMICOLON
    (69) function_declaration -> func_decl_id LPAREN id_list . RPAREN function_full_declaration
    RPAREN          shift and go to state 186

126: 
state 126

    (25) id_list -> identifier . COMMA id_list
    (26) id_list -> identifier .
    COMMA           shift and go to state 187
    RPAREN          reduce using rule 26 (id_list -> identifier .)

127: 
state 127

    (12) inst -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 12 (inst -> LPAREN var_dec RPAREN .)

128: 
state 128

    (50) base_exponent -> LPAREN aritmetic_operation RPAREN .
    MODULE          reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    DIVIDE          reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MULTIPLY        reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ASTERPOWER      reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    POWER           reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    MINUS           reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    PLUS            reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SEMICOLON       reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    $end            reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RPAREN          reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    OR              reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    SINCETHAT       reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    COMMA           reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    RBRACKET        reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    NOT_EQUAL       reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    EQUAL           reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_EQUAL      reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_EQUAL   reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    LESS_THAN       reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    GREATER_THAN    reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AS              reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    IN              reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELSE            reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    ELIF            reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)
    AND             reduce using rule 50 (base_exponent -> LPAREN aritmetic_operation RPAREN .)

129: 
state 129

    (105) type_declaration -> TYPE IDENTIFIER constructor . inherits_type decl_body SEMICOLON
    (106) type_declaration -> TYPE IDENTIFIER constructor . decl_body SEMICOLON
    (107) type_declaration -> TYPE IDENTIFIER constructor . inherits_type decl_body
    (108) type_declaration -> TYPE IDENTIFIER constructor . decl_body
    (113) inherits_type -> . INHERITS IDENTIFIER constructor
    (114) decl_body -> . LBRACE decl_list RBRACE
    (115) decl_body -> . LBRACE RBRACE
    INHERITS        shift and go to state 190
    LBRACE          shift and go to state 191

    inherits_type                  shift and go to state 188
    decl_body                      shift and go to state 189
130: 
state 130

    (109) constructor -> empty .
    INHERITS        reduce using rule 109 (constructor -> empty .)
    LBRACE          reduce using rule 109 (constructor -> empty .)

131: 
state 131

    (110) constructor -> LPAREN . RPAREN
    (111) constructor -> LPAREN . param_list RPAREN
    (112) constructor -> LPAREN . id_list RPAREN
    (137) param_list -> . param COMMA param_list
    (138) param_list -> . param
    (25) id_list -> . identifier COMMA id_list
    (26) id_list -> . identifier
    (139) param -> . conditional
    (140) param -> . expression
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    RPAREN          shift and go to state 192
    IF              shift and go to state 40
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    LET             shift and go to state 27
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param_list                     shift and go to state 193
    id_list                        shift and go to state 194
    param                          shift and go to state 99
    identifier                     shift and go to state 126
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 195
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 196
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
132: 
state 132

    (37) expression -> atom ESPACEDCONCAT expression .
    SEMICOLON       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    $end            reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    OR              reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    SINCETHAT       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    COMMA           reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    RBRACKET        reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    RPAREN          reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    NOT_EQUAL       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    EQUAL           reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    LESS_EQUAL      reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_EQUAL   reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    LESS_THAN       reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    GREATER_THAN    reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    AS              reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    IN              reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    ELSE            reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    ELIF            reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)
    AND             reduce using rule 37 (expression -> atom ESPACEDCONCAT expression .)

133: 
state 133

    (38) expression -> atom CONCAT expression .
    SEMICOLON       reduce using rule 38 (expression -> atom CONCAT expression .)
    $end            reduce using rule 38 (expression -> atom CONCAT expression .)
    OR              reduce using rule 38 (expression -> atom CONCAT expression .)
    SINCETHAT       reduce using rule 38 (expression -> atom CONCAT expression .)
    COMMA           reduce using rule 38 (expression -> atom CONCAT expression .)
    RBRACKET        reduce using rule 38 (expression -> atom CONCAT expression .)
    RPAREN          reduce using rule 38 (expression -> atom CONCAT expression .)
    NOT_EQUAL       reduce using rule 38 (expression -> atom CONCAT expression .)
    EQUAL           reduce using rule 38 (expression -> atom CONCAT expression .)
    LESS_EQUAL      reduce using rule 38 (expression -> atom CONCAT expression .)
    GREATER_EQUAL   reduce using rule 38 (expression -> atom CONCAT expression .)
    LESS_THAN       reduce using rule 38 (expression -> atom CONCAT expression .)
    GREATER_THAN    reduce using rule 38 (expression -> atom CONCAT expression .)
    AS              reduce using rule 38 (expression -> atom CONCAT expression .)
    IN              reduce using rule 38 (expression -> atom CONCAT expression .)
    ELSE            reduce using rule 38 (expression -> atom CONCAT expression .)
    ELIF            reduce using rule 38 (expression -> atom CONCAT expression .)
    AND             reduce using rule 38 (expression -> atom CONCAT expression .)

134: 
state 134

    (142) var_use -> atom LBRACKET expression . RBRACKET
    RBRACKET        shift and go to state 197

135: 
state 135

    (34) scope -> LBRACE inst_list RBRACE .
    SEMICOLON       reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    $end            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    PROTOCOL        reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    TYPE            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LPAREN          reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    FUNCTION        reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LBRACE          reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LET             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    STRING          reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    NUMBER          reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    FOR             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    IF              reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    WHILE           reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    IDENTIFIER      reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    E_CONST         reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    PI_CONST        reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    RAND            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LOG             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    EXP             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    COS             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    SIN             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    SQRT            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    FALSE           reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    TRUE            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    NEW             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LBRACKET        reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    PRINT           reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    RANGE           reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    COMMA           reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    RBRACKET        reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    RPAREN          reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    OR              reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    SINCETHAT       reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    NOT_EQUAL       reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    EQUAL           reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LESS_EQUAL      reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    GREATER_EQUAL   reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    LESS_THAN       reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    GREATER_THAN    reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    AS              reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    IN              reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    ELSE            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    ELIF            reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)
    AND             reduce using rule 34 (scope -> LBRACE inst_list RBRACE .)

136: 
state 136

    (8) inst_list -> inst SEMICOLON . inst_list
    (9) inst_list -> inst SEMICOLON .
    (8) inst_list -> . inst SEMICOLON inst_list
    (9) inst_list -> . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    RBRACE          reduce using rule 9 (inst_list -> inst SEMICOLON .)
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    inst                           shift and go to state 80
    inst_list                      shift and go to state 198
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
137: 
state 137

    (16) var_dec -> LET var_init_list IN . var_decl_expr
    (17) var_decl_expr -> . LPAREN var_dec RPAREN
    (18) var_decl_expr -> . expression
    (19) var_decl_expr -> . flux_control
    (20) var_decl_expr -> . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LPAREN          shift and go to state 200
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    var_decl_expr                  shift and go to state 199
    var_dec                        shift and go to state 15
    expression                     shift and go to state 201
    flux_control                   shift and go to state 202
    scope                          shift and go to state 203
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
138: 
state 138

    (21) var_init_list -> var_init COMMA . var_init_list
    (21) var_init_list -> . var_init COMMA var_init_list
    (22) var_init_list -> . var_init
    (23) var_init -> . identifier ASSIGN inst type_downcast
    (24) var_init -> . identifier ASSIGN inst
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    var_init                       shift and go to state 82
    var_init_list                  shift and go to state 204
    identifier                     shift and go to state 83
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
139: 
state 139

    (23) var_init -> identifier ASSIGN . inst type_downcast
    (24) var_init -> identifier ASSIGN . inst
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    inst                           shift and go to state 205
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
140: 
state 140

    (29) fully_typed_param -> IDENTIFIER type_anotation .
    ASSIGN          reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)
    COMMA           reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)
    RPAREN          reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)
    IN              reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)
    OR              reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)
    AND             reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)
    SEMICOLON       reduce using rule 29 (fully_typed_param -> IDENTIFIER type_anotation .)

141: 
state 141

    (30) type_anotation -> COLON . BOOLEAN_TYPE
    (31) type_anotation -> COLON . NUMBER_TYPE
    (32) type_anotation -> COLON . IDENTIFIER
    BOOLEAN_TYPE    shift and go to state 206
    NUMBER_TYPE     shift and go to state 207
    IDENTIFIER      shift and go to state 208

142: 
state 142

    (62) var_asign -> var_use ASSIGN expression .
    SEMICOLON       reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    $end            reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    OR              reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    SINCETHAT       reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    COMMA           reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    RBRACKET        reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    RPAREN          reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    NOT_EQUAL       reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    EQUAL           reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    LESS_EQUAL      reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    LESS_THAN       reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    GREATER_THAN    reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    AS              reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    IN              reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    ELSE            reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    ELIF            reduce using rule 62 (var_asign -> var_use ASSIGN expression .)
    AND             reduce using rule 62 (var_asign -> var_use ASSIGN expression .)

143: 
state 143

    (63) var_asign -> var_use DEST_ASSIGN expression .
    SEMICOLON       reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    $end            reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    OR              reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    SINCETHAT       reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    COMMA           reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    RBRACKET        reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    RPAREN          reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    NOT_EQUAL       reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    EQUAL           reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_EQUAL      reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_EQUAL   reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    LESS_THAN       reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    GREATER_THAN    reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    AS              reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    IN              reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    ELSE            reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    ELIF            reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)
    AND             reduce using rule 63 (var_asign -> var_use DEST_ASSIGN expression .)

144: 
state 144

    (41) aritmetic_operation -> term MINUS aritmetic_operation .
    SEMICOLON       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    $end            reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RPAREN          reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    OR              reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    SINCETHAT       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    COMMA           reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    RBRACKET        reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    EQUAL           reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    LESS_THAN       reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AS              reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    IN              reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELSE            reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    ELIF            reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)
    AND             reduce using rule 41 (aritmetic_operation -> term MINUS aritmetic_operation .)

145: 
state 145

    (42) aritmetic_operation -> term PLUS aritmetic_operation .
    SEMICOLON       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    $end            reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RPAREN          reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    OR              reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    SINCETHAT       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    COMMA           reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    RBRACKET        reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    NOT_EQUAL       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    EQUAL           reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_EQUAL      reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    LESS_THAN       reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    GREATER_THAN    reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AS              reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    IN              reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELSE            reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    ELIF            reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)
    AND             reduce using rule 42 (aritmetic_operation -> term PLUS aritmetic_operation .)

146: 
state 146

    (88) for_loop -> FOR LPAREN identifier . IN expression RPAREN expression
    (89) for_loop -> FOR LPAREN identifier . IN expression RPAREN scope
    IN              shift and go to state 209

147: 
state 147

    (94) condition -> LPAREN . conditional_expression RPAREN
    (50) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (90) conditional_expression -> . condition
    (91) conditional_expression -> . NOT condition
    (92) conditional_expression -> . condition OR conditional_expression
    (93) conditional_expression -> . condition AND conditional_expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    NOT             shift and go to state 151
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    conditional_expression         shift and go to state 210
    aritmetic_operation            shift and go to state 211
    condition                      shift and go to state 150
    term                           shift and go to state 38
    comparation                    shift and go to state 153
    factor                         shift and go to state 57
    expression                     shift and go to state 149
    base_exponent                  shift and go to state 60
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 212
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
148: 
state 148

    (77) full_conditional -> LPAREN conditional_expression . RPAREN scope else_elif_statement
    (76) inline_conditional -> LPAREN conditional_expression . RPAREN expression else_elif_statement
    RPAREN          shift and go to state 213

149: 
state 149

    (97) comparation -> expression . NOT_EQUAL expression
    (98) comparation -> expression . EQUAL expression
    (99) comparation -> expression . LESS_EQUAL expression
    (100) comparation -> expression . GREATER_EQUAL expression
    (101) comparation -> expression . LESS_THAN expression
    (102) comparation -> expression . GREATER_THAN expression
    NOT_EQUAL       shift and go to state 214
    EQUAL           shift and go to state 215
    LESS_EQUAL      shift and go to state 216
    GREATER_EQUAL   shift and go to state 217
    LESS_THAN       shift and go to state 218
    GREATER_THAN    shift and go to state 219

150: 
state 150

    (90) conditional_expression -> condition .
    (92) conditional_expression -> condition . OR conditional_expression
    (93) conditional_expression -> condition . AND conditional_expression
    RPAREN          reduce using rule 90 (conditional_expression -> condition .)
    SEMICOLON       reduce using rule 90 (conditional_expression -> condition .)
    OR              shift and go to state 220
    AND             shift and go to state 221

151: 
state 151

    (91) conditional_expression -> NOT . condition
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    condition                      shift and go to state 222
    comparation                    shift and go to state 153
    expression                     shift and go to state 149
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
152: 
state 152

    (95) condition -> IDENTIFIER . type_conforming
    (143) var_use -> IDENTIFIER .
    (146) var_method -> IDENTIFIER . DOT function_call
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN param_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (135) type_conforming -> . IS identifier
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 143 (var_use -> IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 143 (var_use -> IDENTIFIER .)
    CONCAT          reduce using rule 143 (var_use -> IDENTIFIER .)
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    MODULE          reduce using rule 143 (var_use -> IDENTIFIER .)
    DIVIDE          reduce using rule 143 (var_use -> IDENTIFIER .)
    MULTIPLY        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASTERPOWER      reduce using rule 143 (var_use -> IDENTIFIER .)
    POWER           reduce using rule 143 (var_use -> IDENTIFIER .)
    MINUS           reduce using rule 143 (var_use -> IDENTIFIER .)
    PLUS            reduce using rule 143 (var_use -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 143 (var_use -> IDENTIFIER .)
    EQUAL           reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_EQUAL      reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 143 (var_use -> IDENTIFIER .)
    LESS_THAN       reduce using rule 143 (var_use -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 143 (var_use -> IDENTIFIER .)
    RPAREN          reduce using rule 143 (var_use -> IDENTIFIER .)
    SEMICOLON       reduce using rule 143 (var_use -> IDENTIFIER .)
    DOT             shift and go to state 64
    LPAREN          shift and go to state 65
    IS              shift and go to state 224

    type_conforming                shift and go to state 223
153: 
state 153

    (96) condition -> comparation .
    OR              reduce using rule 96 (condition -> comparation .)
    AND             reduce using rule 96 (condition -> comparation .)
    RPAREN          reduce using rule 96 (condition -> comparation .)
    SEMICOLON       reduce using rule 96 (condition -> comparation .)

154: 
state 154

    (84) while_loop -> WHILE LPAREN expression . RPAREN expression
    (85) while_loop -> WHILE LPAREN expression . RPAREN scope
    (97) comparation -> expression . NOT_EQUAL expression
    (98) comparation -> expression . EQUAL expression
    (99) comparation -> expression . LESS_EQUAL expression
    (100) comparation -> expression . GREATER_EQUAL expression
    (101) comparation -> expression . LESS_THAN expression
    (102) comparation -> expression . GREATER_THAN expression
    RPAREN          shift and go to state 225
    NOT_EQUAL       shift and go to state 214
    EQUAL           shift and go to state 215
    LESS_EQUAL      shift and go to state 216
    GREATER_EQUAL   shift and go to state 217
    LESS_THAN       shift and go to state 218
    GREATER_THAN    shift and go to state 219

155: 
state 155

    (86) while_loop -> WHILE LPAREN conditional_expression . RPAREN expression
    (87) while_loop -> WHILE LPAREN conditional_expression . RPAREN scope
    RPAREN          shift and go to state 226

156: 
state 156

    (161) vector -> LBRACKET vector_decl RBRACKET .
    ESPACEDCONCAT   reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    CONCAT          reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    LBRACKET        reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    MODULE          reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    DIVIDE          reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    MULTIPLY        reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    ASTERPOWER      reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    POWER           reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    MINUS           reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    PLUS            reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    SEMICOLON       reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    $end            reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    RPAREN          reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    ASSIGN          reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    OR              reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    SINCETHAT       reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    COMMA           reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    RBRACKET        reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    NOT_EQUAL       reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    EQUAL           reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_EQUAL      reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_EQUAL   reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    LESS_THAN       reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    GREATER_THAN    reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    AS              reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    IN              reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    ELSE            reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    ELIF            reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)
    AND             reduce using rule 161 (vector -> LBRACKET vector_decl RBRACKET .)

157: 
state 157

    (162) vector_decl -> expression OR . identifier IN expression
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    identifier                     shift and go to state 227
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
158: 
state 158

    (163) vector_decl -> expression SINCETHAT . identifier IN expression
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    identifier                     shift and go to state 228
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
159: 
state 159

    (137) param_list -> param COMMA . param_list
    (137) param_list -> . param COMMA param_list
    (138) param_list -> . param
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 99
    param_list                     shift and go to state 229
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
160: 
state 160

    (167) build_in_functions -> RAND LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    CONCAT          reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    LBRACKET        reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    MODULE          reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    DIVIDE          reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    MULTIPLY        reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    POWER           reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    MINUS           reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    PLUS            reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    SEMICOLON       reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    $end            reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    RPAREN          reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    ASSIGN          reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    OR              reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    SINCETHAT       reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    COMMA           reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    RBRACKET        reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    EQUAL           reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    LESS_THAN       reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    AS              reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    IN              reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    ELSE            reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    ELIF            reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)
    AND             reduce using rule 167 (build_in_functions -> RAND LPAREN RPAREN .)

161: 
state 161

    (168) build_in_functions -> LOG LPAREN param . COMMA param RPAREN
    COMMA           shift and go to state 230

162: 
state 162

    (169) build_in_functions -> EXP LPAREN param . RPAREN
    RPAREN          shift and go to state 231

163: 
state 163

    (170) build_in_functions -> COS LPAREN param . RPAREN
    RPAREN          shift and go to state 232

164: 
state 164

    (171) build_in_functions -> SIN LPAREN param . RPAREN
    RPAREN          shift and go to state 233

165: 
state 165

    (172) build_in_functions -> SQRT LPAREN param . RPAREN
    RPAREN          shift and go to state 234

166: 
state 166

    (133) type_instanciation -> NEW IDENTIFIER LPAREN . RPAREN
    (134) type_instanciation -> NEW IDENTIFIER LPAREN . param_list RPAREN
    (137) param_list -> . param COMMA param_list
    (138) param_list -> . param
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    RPAREN          shift and go to state 235
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param_list                     shift and go to state 236
    param                          shift and go to state 99
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
167: 
state 167

    (44) term -> factor MODULE term .
    MINUS           reduce using rule 44 (term -> factor MODULE term .)
    PLUS            reduce using rule 44 (term -> factor MODULE term .)
    SEMICOLON       reduce using rule 44 (term -> factor MODULE term .)
    $end            reduce using rule 44 (term -> factor MODULE term .)
    RPAREN          reduce using rule 44 (term -> factor MODULE term .)
    OR              reduce using rule 44 (term -> factor MODULE term .)
    SINCETHAT       reduce using rule 44 (term -> factor MODULE term .)
    COMMA           reduce using rule 44 (term -> factor MODULE term .)
    RBRACKET        reduce using rule 44 (term -> factor MODULE term .)
    NOT_EQUAL       reduce using rule 44 (term -> factor MODULE term .)
    EQUAL           reduce using rule 44 (term -> factor MODULE term .)
    LESS_EQUAL      reduce using rule 44 (term -> factor MODULE term .)
    GREATER_EQUAL   reduce using rule 44 (term -> factor MODULE term .)
    LESS_THAN       reduce using rule 44 (term -> factor MODULE term .)
    GREATER_THAN    reduce using rule 44 (term -> factor MODULE term .)
    AS              reduce using rule 44 (term -> factor MODULE term .)
    IN              reduce using rule 44 (term -> factor MODULE term .)
    ELSE            reduce using rule 44 (term -> factor MODULE term .)
    ELIF            reduce using rule 44 (term -> factor MODULE term .)
    AND             reduce using rule 44 (term -> factor MODULE term .)

168: 
state 168

    (45) term -> factor DIVIDE term .
    MINUS           reduce using rule 45 (term -> factor DIVIDE term .)
    PLUS            reduce using rule 45 (term -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 45 (term -> factor DIVIDE term .)
    $end            reduce using rule 45 (term -> factor DIVIDE term .)
    RPAREN          reduce using rule 45 (term -> factor DIVIDE term .)
    OR              reduce using rule 45 (term -> factor DIVIDE term .)
    SINCETHAT       reduce using rule 45 (term -> factor DIVIDE term .)
    COMMA           reduce using rule 45 (term -> factor DIVIDE term .)
    RBRACKET        reduce using rule 45 (term -> factor DIVIDE term .)
    NOT_EQUAL       reduce using rule 45 (term -> factor DIVIDE term .)
    EQUAL           reduce using rule 45 (term -> factor DIVIDE term .)
    LESS_EQUAL      reduce using rule 45 (term -> factor DIVIDE term .)
    GREATER_EQUAL   reduce using rule 45 (term -> factor DIVIDE term .)
    LESS_THAN       reduce using rule 45 (term -> factor DIVIDE term .)
    GREATER_THAN    reduce using rule 45 (term -> factor DIVIDE term .)
    AS              reduce using rule 45 (term -> factor DIVIDE term .)
    IN              reduce using rule 45 (term -> factor DIVIDE term .)
    ELSE            reduce using rule 45 (term -> factor DIVIDE term .)
    ELIF            reduce using rule 45 (term -> factor DIVIDE term .)
    AND             reduce using rule 45 (term -> factor DIVIDE term .)

169: 
state 169

    (46) term -> factor MULTIPLY term .
    MINUS           reduce using rule 46 (term -> factor MULTIPLY term .)
    PLUS            reduce using rule 46 (term -> factor MULTIPLY term .)
    SEMICOLON       reduce using rule 46 (term -> factor MULTIPLY term .)
    $end            reduce using rule 46 (term -> factor MULTIPLY term .)
    RPAREN          reduce using rule 46 (term -> factor MULTIPLY term .)
    OR              reduce using rule 46 (term -> factor MULTIPLY term .)
    SINCETHAT       reduce using rule 46 (term -> factor MULTIPLY term .)
    COMMA           reduce using rule 46 (term -> factor MULTIPLY term .)
    RBRACKET        reduce using rule 46 (term -> factor MULTIPLY term .)
    NOT_EQUAL       reduce using rule 46 (term -> factor MULTIPLY term .)
    EQUAL           reduce using rule 46 (term -> factor MULTIPLY term .)
    LESS_EQUAL      reduce using rule 46 (term -> factor MULTIPLY term .)
    GREATER_EQUAL   reduce using rule 46 (term -> factor MULTIPLY term .)
    LESS_THAN       reduce using rule 46 (term -> factor MULTIPLY term .)
    GREATER_THAN    reduce using rule 46 (term -> factor MULTIPLY term .)
    AS              reduce using rule 46 (term -> factor MULTIPLY term .)
    IN              reduce using rule 46 (term -> factor MULTIPLY term .)
    ELSE            reduce using rule 46 (term -> factor MULTIPLY term .)
    ELIF            reduce using rule 46 (term -> factor MULTIPLY term .)
    AND             reduce using rule 46 (term -> factor MULTIPLY term .)

170: 
state 170

    (48) factor -> factor ASTERPOWER base_exponent .
    MODULE          reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    DIVIDE          reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    MULTIPLY        reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    ASTERPOWER      reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    POWER           reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    MINUS           reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    PLUS            reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    SEMICOLON       reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    $end            reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    RPAREN          reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    OR              reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    SINCETHAT       reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    COMMA           reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    RBRACKET        reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    NOT_EQUAL       reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    EQUAL           reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    LESS_EQUAL      reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_EQUAL   reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    LESS_THAN       reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    GREATER_THAN    reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    AS              reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    IN              reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    ELSE            reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    ELIF            reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)
    AND             reduce using rule 48 (factor -> factor ASTERPOWER base_exponent .)

171: 
state 171

    (49) factor -> factor POWER base_exponent .
    MODULE          reduce using rule 49 (factor -> factor POWER base_exponent .)
    DIVIDE          reduce using rule 49 (factor -> factor POWER base_exponent .)
    MULTIPLY        reduce using rule 49 (factor -> factor POWER base_exponent .)
    ASTERPOWER      reduce using rule 49 (factor -> factor POWER base_exponent .)
    POWER           reduce using rule 49 (factor -> factor POWER base_exponent .)
    MINUS           reduce using rule 49 (factor -> factor POWER base_exponent .)
    PLUS            reduce using rule 49 (factor -> factor POWER base_exponent .)
    SEMICOLON       reduce using rule 49 (factor -> factor POWER base_exponent .)
    $end            reduce using rule 49 (factor -> factor POWER base_exponent .)
    RPAREN          reduce using rule 49 (factor -> factor POWER base_exponent .)
    OR              reduce using rule 49 (factor -> factor POWER base_exponent .)
    SINCETHAT       reduce using rule 49 (factor -> factor POWER base_exponent .)
    COMMA           reduce using rule 49 (factor -> factor POWER base_exponent .)
    RBRACKET        reduce using rule 49 (factor -> factor POWER base_exponent .)
    NOT_EQUAL       reduce using rule 49 (factor -> factor POWER base_exponent .)
    EQUAL           reduce using rule 49 (factor -> factor POWER base_exponent .)
    LESS_EQUAL      reduce using rule 49 (factor -> factor POWER base_exponent .)
    GREATER_EQUAL   reduce using rule 49 (factor -> factor POWER base_exponent .)
    LESS_THAN       reduce using rule 49 (factor -> factor POWER base_exponent .)
    GREATER_THAN    reduce using rule 49 (factor -> factor POWER base_exponent .)
    AS              reduce using rule 49 (factor -> factor POWER base_exponent .)
    IN              reduce using rule 49 (factor -> factor POWER base_exponent .)
    ELSE            reduce using rule 49 (factor -> factor POWER base_exponent .)
    ELIF            reduce using rule 49 (factor -> factor POWER base_exponent .)
    AND             reduce using rule 49 (factor -> factor POWER base_exponent .)

172: 
state 172

    (166) build_in_print -> PRINT LPAREN param . RPAREN
    RPAREN          shift and go to state 237

173: 
state 173

    (165) build_in_range -> RANGE LPAREN param . COMMA param RPAREN
    COMMA           shift and go to state 238

174: 
state 174

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER . protocol_body
    (154) protocol_body -> . LBRACE virtual_method_list RBRACE
    LBRACE          shift and go to state 117

    protocol_body                  shift and go to state 239
175: 
state 175

    (152) protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 152 (protocol_declaration -> PROTOCOL IDENTIFIER protocol_body SEMICOLON .)

176: 
state 176

    (154) protocol_body -> LBRACE virtual_method_list . RBRACE
    RBRACE          shift and go to state 240

177: 
state 177

    (155) virtual_method_list -> virtual_method . SEMICOLON virtual_method_list
    (156) virtual_method_list -> virtual_method . SEMICOLON
    SEMICOLON       shift and go to state 241

178: 
state 178

    (157) virtual_method -> IDENTIFIER . LPAREN fully_typed_params RPAREN type_anotation
    (158) virtual_method -> IDENTIFIER . LPAREN RPAREN type_anotation
    LPAREN          shift and go to state 242

179: 
state 179

    (144) var_attr -> IDENTIFIER DOT . var_attr
    (145) var_attr -> IDENTIFIER DOT . IDENTIFIER
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 243

    var_attr                       shift and go to state 120
180: 
state 180

    (132) function_call -> IDENTIFIER LPAREN param_list RPAREN .
    ESPACEDCONCAT   reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    CONCAT          reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    LBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    MODULE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    DIVIDE          reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    MULTIPLY        reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    ASTERPOWER      reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    POWER           reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    MINUS           reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    PLUS            reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    SEMICOLON       reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    $end            reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    RPAREN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    ASSIGN          reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    OR              reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    SINCETHAT       reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    COMMA           reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    RBRACKET        reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    NOT_EQUAL       reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    EQUAL           reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    LESS_EQUAL      reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    GREATER_EQUAL   reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    LESS_THAN       reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    GREATER_THAN    reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    AS              reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    IN              reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    ELSE            reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    ELIF            reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)
    AND             reduce using rule 132 (function_call -> IDENTIFIER LPAREN param_list RPAREN .)

181: 
state 181

    (64) function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .
    PROTOCOL        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    TYPE            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LPAREN          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FUNCTION        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LBRACE          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LET             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    STRING          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    NUMBER          reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FOR             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    IF              reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    WHILE           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    IDENTIFIER      reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    E_CONST         reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    PI_CONST        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    RAND            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LOG             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    EXP             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    COS             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    SIN             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    SQRT            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    FALSE           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    TRUE            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    NEW             reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    LBRACKET        reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    PRINT           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    RANGE           reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)
    $end            reduce using rule 64 (function_declaration -> func_decl_id LPAREN RPAREN function_inline_declaration .)

182: 
state 182

    (66) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration . SEMICOLON
    (68) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .
    SEMICOLON       shift and go to state 244
    PROTOCOL        reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    TYPE            reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LPAREN          reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FUNCTION        reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LBRACE          reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LET             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    STRING          reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    NUMBER          reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FOR             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    IF              reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    WHILE           reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    IDENTIFIER      reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    E_CONST         reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    PI_CONST        reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    RAND            reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LOG             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    EXP             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    COS             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    SIN             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    SQRT            reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    FALSE           reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    TRUE            reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    NEW             reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    LBRACKET        reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    PRINT           reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    RANGE           reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)
    $end            reduce using rule 68 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration .)

183: 
state 183

    (72) function_inline_declaration -> type_anotation . RETURN inst SEMICOLON
    RETURN          shift and go to state 245

184: 
state 184

    (73) function_inline_declaration -> RETURN . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    inst                           shift and go to state 246
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
185: 
state 185

    (71) function_full_declaration -> scope .
    SEMICOLON       reduce using rule 71 (function_full_declaration -> scope .)
    PROTOCOL        reduce using rule 71 (function_full_declaration -> scope .)
    TYPE            reduce using rule 71 (function_full_declaration -> scope .)
    LPAREN          reduce using rule 71 (function_full_declaration -> scope .)
    FUNCTION        reduce using rule 71 (function_full_declaration -> scope .)
    LBRACE          reduce using rule 71 (function_full_declaration -> scope .)
    LET             reduce using rule 71 (function_full_declaration -> scope .)
    STRING          reduce using rule 71 (function_full_declaration -> scope .)
    NUMBER          reduce using rule 71 (function_full_declaration -> scope .)
    FOR             reduce using rule 71 (function_full_declaration -> scope .)
    IF              reduce using rule 71 (function_full_declaration -> scope .)
    WHILE           reduce using rule 71 (function_full_declaration -> scope .)
    IDENTIFIER      reduce using rule 71 (function_full_declaration -> scope .)
    E_CONST         reduce using rule 71 (function_full_declaration -> scope .)
    PI_CONST        reduce using rule 71 (function_full_declaration -> scope .)
    RAND            reduce using rule 71 (function_full_declaration -> scope .)
    LOG             reduce using rule 71 (function_full_declaration -> scope .)
    EXP             reduce using rule 71 (function_full_declaration -> scope .)
    COS             reduce using rule 71 (function_full_declaration -> scope .)
    SIN             reduce using rule 71 (function_full_declaration -> scope .)
    SQRT            reduce using rule 71 (function_full_declaration -> scope .)
    FALSE           reduce using rule 71 (function_full_declaration -> scope .)
    TRUE            reduce using rule 71 (function_full_declaration -> scope .)
    NEW             reduce using rule 71 (function_full_declaration -> scope .)
    LBRACKET        reduce using rule 71 (function_full_declaration -> scope .)
    PRINT           reduce using rule 71 (function_full_declaration -> scope .)
    RANGE           reduce using rule 71 (function_full_declaration -> scope .)
    $end            reduce using rule 71 (function_full_declaration -> scope .)

186: 
state 186

    (65) function_declaration -> func_decl_id LPAREN id_list RPAREN . function_inline_declaration
    (67) function_declaration -> func_decl_id LPAREN id_list RPAREN . function_full_declaration SEMICOLON
    (69) function_declaration -> func_decl_id LPAREN id_list RPAREN . function_full_declaration
    (72) function_inline_declaration -> . type_anotation RETURN inst SEMICOLON
    (73) function_inline_declaration -> . RETURN inst SEMICOLON
    (71) function_full_declaration -> . scope
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 184
    COLON           shift and go to state 141
    LBRACE          shift and go to state 26

    function_inline_declaration    shift and go to state 247
    function_full_declaration      shift and go to state 248
    type_anotation                 shift and go to state 183
    scope                          shift and go to state 185
187: 
state 187

    (25) id_list -> identifier COMMA . id_list
    (25) id_list -> . identifier COMMA id_list
    (26) id_list -> . identifier
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    identifier                     shift and go to state 126
    id_list                        shift and go to state 249
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
188: 
state 188

    (105) type_declaration -> TYPE IDENTIFIER constructor inherits_type . decl_body SEMICOLON
    (107) type_declaration -> TYPE IDENTIFIER constructor inherits_type . decl_body
    (114) decl_body -> . LBRACE decl_list RBRACE
    (115) decl_body -> . LBRACE RBRACE
    LBRACE          shift and go to state 191

    decl_body                      shift and go to state 250
189: 
state 189

    (106) type_declaration -> TYPE IDENTIFIER constructor decl_body . SEMICOLON
    (108) type_declaration -> TYPE IDENTIFIER constructor decl_body .
    SEMICOLON       shift and go to state 251
    PROTOCOL        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    TYPE            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    LPAREN          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    FUNCTION        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    LBRACE          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    LET             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    STRING          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    NUMBER          reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    FOR             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    IF              reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    WHILE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    IDENTIFIER      reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    E_CONST         reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    PI_CONST        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    RAND            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    LOG             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    EXP             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    COS             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    SIN             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    SQRT            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    FALSE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    TRUE            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    NEW             reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    LBRACKET        reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    PRINT           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    RANGE           reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)
    $end            reduce using rule 108 (type_declaration -> TYPE IDENTIFIER constructor decl_body .)

190: 
state 190

    (113) inherits_type -> INHERITS . IDENTIFIER constructor
    IDENTIFIER      shift and go to state 252

191: 
state 191

    (114) decl_body -> LBRACE . decl_list RBRACE
    (115) decl_body -> LBRACE . RBRACE
    (116) decl_list -> . decl SEMICOLON decl_list
    (117) decl_list -> . decl SEMICOLON
    (118) decl -> . method_declaration
    (119) decl -> . atribute_declaration
    (122) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (123) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (125) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN type_anotation function_full_declaration
    (126) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN type_anotation RETURN expression
    (127) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (128) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (129) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN function_full_declaration
    (130) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN RETURN expression
    (120) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (121) atribute_declaration -> . identifier ASSIGN expression
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          shift and go to state 254
    IDENTIFIER      shift and go to state 258
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    decl_list                      shift and go to state 253
    decl                           shift and go to state 255
    method_declaration             shift and go to state 256
    atribute_declaration           shift and go to state 257
    identifier                     shift and go to state 259
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
192: 
state 192

    (110) constructor -> LPAREN RPAREN .
    INHERITS        reduce using rule 110 (constructor -> LPAREN RPAREN .)
    LBRACE          reduce using rule 110 (constructor -> LPAREN RPAREN .)

193: 
state 193

    (111) constructor -> LPAREN param_list . RPAREN
    RPAREN          shift and go to state 260

194: 
state 194

    (112) constructor -> LPAREN id_list . RPAREN
    RPAREN          shift and go to state 261

195: 
state 195

    (28) identifier -> atom .
    (37) expression -> atom . ESPACEDCONCAT expression
    (38) expression -> atom . CONCAT expression
    (142) var_use -> atom . LBRACKET expression RBRACKET
    (51) base_exponent -> atom .
  ! reduce/reduce conflict for COMMA resolved using rule 28 (identifier -> atom .)
  ! reduce/reduce conflict for RPAREN resolved using rule 28 (identifier -> atom .)
    COMMA           reduce using rule 28 (identifier -> atom .)
    RPAREN          reduce using rule 28 (identifier -> atom .)
    ESPACEDCONCAT   shift and go to state 75
    CONCAT          shift and go to state 76
    LBRACKET        shift and go to state 77
    MODULE          reduce using rule 51 (base_exponent -> atom .)
    DIVIDE          reduce using rule 51 (base_exponent -> atom .)
    MULTIPLY        reduce using rule 51 (base_exponent -> atom .)
    ASTERPOWER      reduce using rule 51 (base_exponent -> atom .)
    POWER           reduce using rule 51 (base_exponent -> atom .)
    MINUS           reduce using rule 51 (base_exponent -> atom .)
    PLUS            reduce using rule 51 (base_exponent -> atom .)

196: 
state 196

    (58) atom -> var_use .
    (62) var_asign -> var_use . ASSIGN expression
    (63) var_asign -> var_use . DEST_ASSIGN expression
    ESPACEDCONCAT   reduce using rule 58 (atom -> var_use .)
    CONCAT          reduce using rule 58 (atom -> var_use .)
    LBRACKET        reduce using rule 58 (atom -> var_use .)
    COMMA           reduce using rule 58 (atom -> var_use .)
    RPAREN          reduce using rule 58 (atom -> var_use .)
    MODULE          reduce using rule 58 (atom -> var_use .)
    DIVIDE          reduce using rule 58 (atom -> var_use .)
    MULTIPLY        reduce using rule 58 (atom -> var_use .)
    ASTERPOWER      reduce using rule 58 (atom -> var_use .)
    POWER           reduce using rule 58 (atom -> var_use .)
    MINUS           reduce using rule 58 (atom -> var_use .)
    PLUS            reduce using rule 58 (atom -> var_use .)
    ASSIGN          shift and go to state 87
    DEST_ASSIGN     shift and go to state 88

197: 
state 197

    (142) var_use -> atom LBRACKET expression RBRACKET .
    ASSIGN          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    DEST_ASSIGN     reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ESPACEDCONCAT   reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    CONCAT          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    MODULE          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    MULTIPLY        reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ASTERPOWER      reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    POWER           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    $end            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    OR              reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    SINCETHAT       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    NOT_EQUAL       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_EQUAL      reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_EQUAL   reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    LESS_THAN       reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    GREATER_THAN    reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    AS              reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    IN              reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    ELIF            reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)
    AND             reduce using rule 142 (var_use -> atom LBRACKET expression RBRACKET .)

198: 
state 198

    (8) inst_list -> inst SEMICOLON inst_list .
    RBRACE          reduce using rule 8 (inst_list -> inst SEMICOLON inst_list .)

199: 
state 199

    (16) var_dec -> LET var_init_list IN var_decl_expr .
    SEMICOLON       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    $end            reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    RPAREN          reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    OR              reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    SINCETHAT       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    COMMA           reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    RBRACKET        reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    NOT_EQUAL       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    EQUAL           reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_EQUAL      reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_EQUAL   reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    LESS_THAN       reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    GREATER_THAN    reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    AS              reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    IN              reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELSE            reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    ELIF            reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)
    AND             reduce using rule 16 (var_dec -> LET var_init_list IN var_decl_expr .)

200: 
state 200

    (17) var_decl_expr -> LPAREN . var_dec RPAREN
    (50) base_exponent -> LPAREN . aritmetic_operation RPAREN
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    LET             shift and go to state 27
    LPAREN          shift and go to state 67
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    IDENTIFIER      shift and go to state 72
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    var_dec                        shift and go to state 262
    aritmetic_operation            shift and go to state 69
    term                           shift and go to state 38
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
    atom                           shift and go to state 70
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
201: 
state 201

    (18) var_decl_expr -> expression .
    SEMICOLON       reduce using rule 18 (var_decl_expr -> expression .)
    $end            reduce using rule 18 (var_decl_expr -> expression .)
    COMMA           reduce using rule 18 (var_decl_expr -> expression .)
    RBRACKET        reduce using rule 18 (var_decl_expr -> expression .)
    RPAREN          reduce using rule 18 (var_decl_expr -> expression .)
    OR              reduce using rule 18 (var_decl_expr -> expression .)
    SINCETHAT       reduce using rule 18 (var_decl_expr -> expression .)
    NOT_EQUAL       reduce using rule 18 (var_decl_expr -> expression .)
    EQUAL           reduce using rule 18 (var_decl_expr -> expression .)
    LESS_EQUAL      reduce using rule 18 (var_decl_expr -> expression .)
    GREATER_EQUAL   reduce using rule 18 (var_decl_expr -> expression .)
    LESS_THAN       reduce using rule 18 (var_decl_expr -> expression .)
    GREATER_THAN    reduce using rule 18 (var_decl_expr -> expression .)
    AS              reduce using rule 18 (var_decl_expr -> expression .)
    IN              reduce using rule 18 (var_decl_expr -> expression .)
    ELSE            reduce using rule 18 (var_decl_expr -> expression .)
    ELIF            reduce using rule 18 (var_decl_expr -> expression .)
    AND             reduce using rule 18 (var_decl_expr -> expression .)

202: 
state 202

    (19) var_decl_expr -> flux_control .
    SEMICOLON       reduce using rule 19 (var_decl_expr -> flux_control .)
    $end            reduce using rule 19 (var_decl_expr -> flux_control .)
    COMMA           reduce using rule 19 (var_decl_expr -> flux_control .)
    RBRACKET        reduce using rule 19 (var_decl_expr -> flux_control .)
    RPAREN          reduce using rule 19 (var_decl_expr -> flux_control .)
    OR              reduce using rule 19 (var_decl_expr -> flux_control .)
    SINCETHAT       reduce using rule 19 (var_decl_expr -> flux_control .)
    NOT_EQUAL       reduce using rule 19 (var_decl_expr -> flux_control .)
    EQUAL           reduce using rule 19 (var_decl_expr -> flux_control .)
    LESS_EQUAL      reduce using rule 19 (var_decl_expr -> flux_control .)
    GREATER_EQUAL   reduce using rule 19 (var_decl_expr -> flux_control .)
    LESS_THAN       reduce using rule 19 (var_decl_expr -> flux_control .)
    GREATER_THAN    reduce using rule 19 (var_decl_expr -> flux_control .)
    AS              reduce using rule 19 (var_decl_expr -> flux_control .)
    IN              reduce using rule 19 (var_decl_expr -> flux_control .)
    ELSE            reduce using rule 19 (var_decl_expr -> flux_control .)
    ELIF            reduce using rule 19 (var_decl_expr -> flux_control .)
    AND             reduce using rule 19 (var_decl_expr -> flux_control .)

203: 
state 203

    (20) var_decl_expr -> scope .
    SEMICOLON       reduce using rule 20 (var_decl_expr -> scope .)
    $end            reduce using rule 20 (var_decl_expr -> scope .)
    COMMA           reduce using rule 20 (var_decl_expr -> scope .)
    RBRACKET        reduce using rule 20 (var_decl_expr -> scope .)
    RPAREN          reduce using rule 20 (var_decl_expr -> scope .)
    OR              reduce using rule 20 (var_decl_expr -> scope .)
    SINCETHAT       reduce using rule 20 (var_decl_expr -> scope .)
    NOT_EQUAL       reduce using rule 20 (var_decl_expr -> scope .)
    EQUAL           reduce using rule 20 (var_decl_expr -> scope .)
    LESS_EQUAL      reduce using rule 20 (var_decl_expr -> scope .)
    GREATER_EQUAL   reduce using rule 20 (var_decl_expr -> scope .)
    LESS_THAN       reduce using rule 20 (var_decl_expr -> scope .)
    GREATER_THAN    reduce using rule 20 (var_decl_expr -> scope .)
    AS              reduce using rule 20 (var_decl_expr -> scope .)
    IN              reduce using rule 20 (var_decl_expr -> scope .)
    ELSE            reduce using rule 20 (var_decl_expr -> scope .)
    ELIF            reduce using rule 20 (var_decl_expr -> scope .)
    AND             reduce using rule 20 (var_decl_expr -> scope .)

204: 
state 204

    (21) var_init_list -> var_init COMMA var_init_list .
    IN              reduce using rule 21 (var_init_list -> var_init COMMA var_init_list .)

205: 
state 205

    (23) var_init -> identifier ASSIGN inst . type_downcast
    (24) var_init -> identifier ASSIGN inst .
    (136) type_downcast -> . AS identifier
    COMMA           reduce using rule 24 (var_init -> identifier ASSIGN inst .)
    IN              reduce using rule 24 (var_init -> identifier ASSIGN inst .)
    AS              shift and go to state 264

    type_downcast                  shift and go to state 263
206: 
state 206

    (30) type_anotation -> COLON BOOLEAN_TYPE .
    ASSIGN          reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    COMMA           reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    RPAREN          reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    IN              reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    OR              reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    AND             reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    SEMICOLON       reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    RETURN          reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)
    LBRACE          reduce using rule 30 (type_anotation -> COLON BOOLEAN_TYPE .)

207: 
state 207

    (31) type_anotation -> COLON NUMBER_TYPE .
    ASSIGN          reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    COMMA           reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    RPAREN          reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    IN              reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    OR              reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    AND             reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    SEMICOLON       reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    RETURN          reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)
    LBRACE          reduce using rule 31 (type_anotation -> COLON NUMBER_TYPE .)

208: 
state 208

    (32) type_anotation -> COLON IDENTIFIER .
    ASSIGN          reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    COMMA           reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    RPAREN          reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    IN              reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    OR              reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    AND             reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    SEMICOLON       reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    RETURN          reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)
    LBRACE          reduce using rule 32 (type_anotation -> COLON IDENTIFIER .)

209: 
state 209

    (88) for_loop -> FOR LPAREN identifier IN . expression RPAREN expression
    (89) for_loop -> FOR LPAREN identifier IN . expression RPAREN scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 265
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
210: 
state 210

    (94) condition -> LPAREN conditional_expression . RPAREN
    RPAREN          shift and go to state 266

211: 
state 211

    (50) base_exponent -> LPAREN aritmetic_operation . RPAREN
    (39) expression -> aritmetic_operation .
    RPAREN          shift and go to state 128
    NOT_EQUAL       reduce using rule 39 (expression -> aritmetic_operation .)
    EQUAL           reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_EQUAL      reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_EQUAL   reduce using rule 39 (expression -> aritmetic_operation .)
    LESS_THAN       reduce using rule 39 (expression -> aritmetic_operation .)
    GREATER_THAN    reduce using rule 39 (expression -> aritmetic_operation .)

212: 
state 212

    (37) expression -> atom . ESPACEDCONCAT expression
    (38) expression -> atom . CONCAT expression
    (51) base_exponent -> atom .
    (142) var_use -> atom . LBRACKET expression RBRACKET
    ESPACEDCONCAT   shift and go to state 75
    CONCAT          shift and go to state 76
    MODULE          reduce using rule 51 (base_exponent -> atom .)
    DIVIDE          reduce using rule 51 (base_exponent -> atom .)
    MULTIPLY        reduce using rule 51 (base_exponent -> atom .)
    ASTERPOWER      reduce using rule 51 (base_exponent -> atom .)
    POWER           reduce using rule 51 (base_exponent -> atom .)
    MINUS           reduce using rule 51 (base_exponent -> atom .)
    PLUS            reduce using rule 51 (base_exponent -> atom .)
    RPAREN          reduce using rule 51 (base_exponent -> atom .)
    NOT_EQUAL       reduce using rule 51 (base_exponent -> atom .)
    EQUAL           reduce using rule 51 (base_exponent -> atom .)
    LESS_EQUAL      reduce using rule 51 (base_exponent -> atom .)
    GREATER_EQUAL   reduce using rule 51 (base_exponent -> atom .)
    LESS_THAN       reduce using rule 51 (base_exponent -> atom .)
    GREATER_THAN    reduce using rule 51 (base_exponent -> atom .)
    LBRACKET        shift and go to state 77

213: 
state 213

    (77) full_conditional -> LPAREN conditional_expression RPAREN . scope else_elif_statement
    (76) inline_conditional -> LPAREN conditional_expression RPAREN . expression else_elif_statement
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    scope                          shift and go to state 267
    expression                     shift and go to state 268
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
214: 
state 214

    (97) comparation -> expression NOT_EQUAL . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 269
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
215: 
state 215

    (98) comparation -> expression EQUAL . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 270
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
216: 
state 216

    (99) comparation -> expression LESS_EQUAL . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 271
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
217: 
state 217

    (100) comparation -> expression GREATER_EQUAL . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 272
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
218: 
state 218

    (101) comparation -> expression LESS_THAN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 273
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
219: 
state 219

    (102) comparation -> expression GREATER_THAN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 274
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
220: 
state 220

    (92) conditional_expression -> condition OR . conditional_expression
    (90) conditional_expression -> . condition
    (91) conditional_expression -> . NOT condition
    (92) conditional_expression -> . condition OR conditional_expression
    (93) conditional_expression -> . condition AND conditional_expression
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    NOT             shift and go to state 151
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    condition                      shift and go to state 150
    conditional_expression         shift and go to state 275
    comparation                    shift and go to state 153
    expression                     shift and go to state 149
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
221: 
state 221

    (93) conditional_expression -> condition AND . conditional_expression
    (90) conditional_expression -> . condition
    (91) conditional_expression -> . NOT condition
    (92) conditional_expression -> . condition OR conditional_expression
    (93) conditional_expression -> . condition AND conditional_expression
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    NOT             shift and go to state 151
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    condition                      shift and go to state 150
    conditional_expression         shift and go to state 276
    comparation                    shift and go to state 153
    expression                     shift and go to state 149
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
222: 
state 222

    (91) conditional_expression -> NOT condition .
    RPAREN          reduce using rule 91 (conditional_expression -> NOT condition .)
    SEMICOLON       reduce using rule 91 (conditional_expression -> NOT condition .)

223: 
state 223

    (95) condition -> IDENTIFIER type_conforming .
    OR              reduce using rule 95 (condition -> IDENTIFIER type_conforming .)
    AND             reduce using rule 95 (condition -> IDENTIFIER type_conforming .)
    RPAREN          reduce using rule 95 (condition -> IDENTIFIER type_conforming .)
    SEMICOLON       reduce using rule 95 (condition -> IDENTIFIER type_conforming .)

224: 
state 224

    (135) type_conforming -> IS . identifier
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    identifier                     shift and go to state 277
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
225: 
state 225

    (84) while_loop -> WHILE LPAREN expression RPAREN . expression
    (85) while_loop -> WHILE LPAREN expression RPAREN . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 278
    scope                          shift and go to state 279
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
226: 
state 226

    (86) while_loop -> WHILE LPAREN conditional_expression RPAREN . expression
    (87) while_loop -> WHILE LPAREN conditional_expression RPAREN . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 280
    scope                          shift and go to state 281
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
227: 
state 227

    (162) vector_decl -> expression OR identifier . IN expression
    IN              shift and go to state 282

228: 
state 228

    (163) vector_decl -> expression SINCETHAT identifier . IN expression
    IN              shift and go to state 283

229: 
state 229

    (137) param_list -> param COMMA param_list .
    RBRACKET        reduce using rule 137 (param_list -> param COMMA param_list .)
    RPAREN          reduce using rule 137 (param_list -> param COMMA param_list .)

230: 
state 230

    (168) build_in_functions -> LOG LPAREN param COMMA . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 284
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
231: 
state 231

    (169) build_in_functions -> EXP LPAREN param RPAREN .
    ESPACEDCONCAT   reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    CONCAT          reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    LBRACKET        reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    MODULE          reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    DIVIDE          reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    MULTIPLY        reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    ASTERPOWER      reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    POWER           reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    MINUS           reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    PLUS            reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    SEMICOLON       reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    $end            reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    RPAREN          reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    ASSIGN          reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    OR              reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    SINCETHAT       reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    COMMA           reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    RBRACKET        reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    NOT_EQUAL       reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    EQUAL           reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    LESS_EQUAL      reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    GREATER_EQUAL   reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    LESS_THAN       reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    GREATER_THAN    reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    AS              reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    IN              reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    ELSE            reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    ELIF            reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)
    AND             reduce using rule 169 (build_in_functions -> EXP LPAREN param RPAREN .)

232: 
state 232

    (170) build_in_functions -> COS LPAREN param RPAREN .
    ESPACEDCONCAT   reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    CONCAT          reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    LBRACKET        reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    MODULE          reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    DIVIDE          reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    MULTIPLY        reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    ASTERPOWER      reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    POWER           reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    MINUS           reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    PLUS            reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    SEMICOLON       reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    $end            reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    RPAREN          reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    ASSIGN          reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    OR              reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    SINCETHAT       reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    COMMA           reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    RBRACKET        reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    NOT_EQUAL       reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    EQUAL           reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    LESS_EQUAL      reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    GREATER_EQUAL   reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    LESS_THAN       reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    GREATER_THAN    reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    AS              reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    IN              reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    ELSE            reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    ELIF            reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)
    AND             reduce using rule 170 (build_in_functions -> COS LPAREN param RPAREN .)

233: 
state 233

    (171) build_in_functions -> SIN LPAREN param RPAREN .
    ESPACEDCONCAT   reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    CONCAT          reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    LBRACKET        reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    MODULE          reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    DIVIDE          reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    MULTIPLY        reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    ASTERPOWER      reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    POWER           reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    MINUS           reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    PLUS            reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    SEMICOLON       reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    $end            reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    RPAREN          reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    ASSIGN          reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    OR              reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    SINCETHAT       reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    COMMA           reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    RBRACKET        reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    NOT_EQUAL       reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    EQUAL           reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    LESS_EQUAL      reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    GREATER_EQUAL   reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    LESS_THAN       reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    GREATER_THAN    reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    AS              reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    IN              reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    ELSE            reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    ELIF            reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)
    AND             reduce using rule 171 (build_in_functions -> SIN LPAREN param RPAREN .)

234: 
state 234

    (172) build_in_functions -> SQRT LPAREN param RPAREN .
    ESPACEDCONCAT   reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    CONCAT          reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    LBRACKET        reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    MODULE          reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    DIVIDE          reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    MULTIPLY        reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    ASTERPOWER      reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    POWER           reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    MINUS           reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    PLUS            reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    SEMICOLON       reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    $end            reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    RPAREN          reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    ASSIGN          reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    OR              reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    SINCETHAT       reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    COMMA           reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    RBRACKET        reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    NOT_EQUAL       reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    EQUAL           reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    LESS_EQUAL      reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    GREATER_EQUAL   reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    LESS_THAN       reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    GREATER_THAN    reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    AS              reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    IN              reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    ELSE            reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    ELIF            reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)
    AND             reduce using rule 172 (build_in_functions -> SQRT LPAREN param RPAREN .)

235: 
state 235

    (133) type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .
    ESPACEDCONCAT   reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    CONCAT          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LBRACKET        reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MODULE          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MULTIPLY        reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASTERPOWER      reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    POWER           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SEMICOLON       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    $end            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    SINCETHAT       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_EQUAL   reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    LESS_THAN       reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AS              reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    IN              reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELSE            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    ELIF            reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 133 (type_instanciation -> NEW IDENTIFIER LPAREN RPAREN .)

236: 
state 236

    (134) type_instanciation -> NEW IDENTIFIER LPAREN param_list . RPAREN
    RPAREN          shift and go to state 285

237: 
state 237

    (166) build_in_print -> PRINT LPAREN param RPAREN .
    ESPACEDCONCAT   reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    CONCAT          reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    LBRACKET        reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    MODULE          reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    DIVIDE          reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    MULTIPLY        reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    ASTERPOWER      reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    POWER           reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    MINUS           reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    PLUS            reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    SEMICOLON       reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    $end            reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    RPAREN          reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    ASSIGN          reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    OR              reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    SINCETHAT       reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    COMMA           reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    RBRACKET        reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    NOT_EQUAL       reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    EQUAL           reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    LESS_EQUAL      reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    GREATER_EQUAL   reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    LESS_THAN       reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    GREATER_THAN    reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    AS              reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    IN              reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    ELSE            reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    ELIF            reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)
    AND             reduce using rule 166 (build_in_print -> PRINT LPAREN param RPAREN .)

238: 
state 238

    (165) build_in_range -> RANGE LPAREN param COMMA . param RPAREN
    (139) param -> . conditional
    (140) param -> . expression
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    IF              shift and go to state 40
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    param                          shift and go to state 286
    conditional                    shift and go to state 100
    expression                     shift and go to state 123
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
239: 
state 239

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body . SEMICOLON
    (151) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .
    SEMICOLON       shift and go to state 287
    PROTOCOL        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TYPE            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LPAREN          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FUNCTION        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACE          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LET             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    STRING          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NUMBER          reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FOR             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IF              reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    WHILE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    IDENTIFIER      reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    E_CONST         reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PI_CONST        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RAND            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LOG             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    EXP             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    COS             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SIN             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    SQRT            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    FALSE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    TRUE            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    NEW             reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    LBRACKET        reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    PRINT           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    RANGE           reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)
    $end            reduce using rule 151 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body .)

240: 
state 240

    (154) protocol_body -> LBRACE virtual_method_list RBRACE .
    SEMICOLON       reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PROTOCOL        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TYPE            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LPAREN          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FUNCTION        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACE          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LET             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    STRING          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NUMBER          reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FOR             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IF              reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    WHILE           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    IDENTIFIER      reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    E_CONST         reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PI_CONST        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RAND            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LOG             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    EXP             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    COS             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SIN             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    SQRT            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    FALSE           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    TRUE            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    NEW             reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    LBRACKET        reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    PRINT           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    RANGE           reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)
    $end            reduce using rule 154 (protocol_body -> LBRACE virtual_method_list RBRACE .)

241: 
state 241

    (155) virtual_method_list -> virtual_method SEMICOLON . virtual_method_list
    (156) virtual_method_list -> virtual_method SEMICOLON .
    (155) virtual_method_list -> . virtual_method SEMICOLON virtual_method_list
    (156) virtual_method_list -> . virtual_method SEMICOLON
    (157) virtual_method -> . IDENTIFIER LPAREN fully_typed_params RPAREN type_anotation
    (158) virtual_method -> . IDENTIFIER LPAREN RPAREN type_anotation
    RBRACE          reduce using rule 156 (virtual_method_list -> virtual_method SEMICOLON .)
    IDENTIFIER      shift and go to state 178

    virtual_method                 shift and go to state 177
    virtual_method_list            shift and go to state 288
242: 
state 242

    (157) virtual_method -> IDENTIFIER LPAREN . fully_typed_params RPAREN type_anotation
    (158) virtual_method -> IDENTIFIER LPAREN . RPAREN type_anotation
    (159) fully_typed_params -> . fully_typed_param COMMA fully_typed_params
    (160) fully_typed_params -> . fully_typed_param
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    RPAREN          shift and go to state 291
    IDENTIFIER      shift and go to state 289

    fully_typed_params             shift and go to state 290
    fully_typed_param              shift and go to state 292
243: 
state 243

    (145) var_attr -> IDENTIFIER DOT IDENTIFIER .
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    ASSIGN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DEST_ASSIGN     reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ESPACEDCONCAT   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    CONCAT          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MODULE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DIVIDE          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MULTIPLY        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ASTERPOWER      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    POWER           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    MINUS           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    PLUS            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    $end            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RPAREN          reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    OR              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    SINCETHAT       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    COMMA           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    RBRACKET        reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    NOT_EQUAL       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    EQUAL           reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_EQUAL      reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    LESS_THAN       reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    GREATER_THAN    reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AS              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    IN              reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELSE            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    ELIF            reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    AND             reduce using rule 145 (var_attr -> IDENTIFIER DOT IDENTIFIER .)
    DOT             shift and go to state 179

244: 
state 244

    (66) function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LET             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    STRING          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FOR             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    IF              reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    RAND            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LOG             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    EXP             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    COS             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    SIN             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    NEW             reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)
    $end            reduce using rule 66 (function_declaration -> func_decl_id LPAREN RPAREN function_full_declaration SEMICOLON .)

245: 
state 245

    (72) function_inline_declaration -> type_anotation RETURN . inst SEMICOLON
    (12) inst -> . LPAREN var_dec RPAREN
    (13) inst -> . expression
    (14) inst -> . flux_control
    (15) inst -> . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (147) flux_control -> . for_loop
    (148) flux_control -> . conditional
    (149) flux_control -> . while_loop
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (88) for_loop -> . FOR LPAREN identifier IN expression RPAREN expression
    (89) for_loop -> . FOR LPAREN identifier IN expression RPAREN scope
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (84) while_loop -> . WHILE LPAREN expression RPAREN expression
    (85) while_loop -> . WHILE LPAREN expression RPAREN scope
    (86) while_loop -> . WHILE LPAREN conditional_expression RPAREN expression
    (87) while_loop -> . WHILE LPAREN conditional_expression RPAREN scope
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LPAREN          shift and go to state 13
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    FOR             shift and go to state 39
    IF              shift and go to state 40
    WHILE           shift and go to state 41
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    inst                           shift and go to state 293
    var_dec                        shift and go to state 15
    expression                     shift and go to state 16
    flux_control                   shift and go to state 17
    scope                          shift and go to state 18
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    for_loop                       shift and go to state 23
    conditional                    shift and go to state 24
    while_loop                     shift and go to state 25
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
246: 
state 246

    (73) function_inline_declaration -> RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 294

247: 
state 247

    (65) function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .
    PROTOCOL        reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    TYPE            reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    LPAREN          reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    FUNCTION        reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    LBRACE          reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    LET             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    STRING          reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    NUMBER          reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    FOR             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    IF              reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    WHILE           reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    IDENTIFIER      reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    E_CONST         reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    PI_CONST        reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    RAND            reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    LOG             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    EXP             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    COS             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    SIN             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    SQRT            reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    FALSE           reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    TRUE            reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    NEW             reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    LBRACKET        reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    PRINT           reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    RANGE           reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)
    $end            reduce using rule 65 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_inline_declaration .)

248: 
state 248

    (67) function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration . SEMICOLON
    (69) function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .
    SEMICOLON       shift and go to state 295
    PROTOCOL        reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    TYPE            reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    LPAREN          reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    FUNCTION        reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    LBRACE          reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    LET             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    STRING          reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    NUMBER          reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    FOR             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    IF              reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    WHILE           reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    IDENTIFIER      reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    E_CONST         reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    PI_CONST        reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    RAND            reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    LOG             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    EXP             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    COS             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    SIN             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    SQRT            reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    FALSE           reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    TRUE            reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    NEW             reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    LBRACKET        reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    PRINT           reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    RANGE           reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)
    $end            reduce using rule 69 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration .)

249: 
state 249

    (25) id_list -> identifier COMMA id_list .
    RPAREN          reduce using rule 25 (id_list -> identifier COMMA id_list .)

250: 
state 250

    (105) type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body . SEMICOLON
    (107) type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .
    SEMICOLON       shift and go to state 296
    PROTOCOL        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    TYPE            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    LPAREN          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    FUNCTION        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    LBRACE          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    LET             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    STRING          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    NUMBER          reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    FOR             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    IF              reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    WHILE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    IDENTIFIER      reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    E_CONST         reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    PI_CONST        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    RAND            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    LOG             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    EXP             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    COS             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    SIN             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    SQRT            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    FALSE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    TRUE            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    NEW             reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    LBRACKET        reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    PRINT           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    RANGE           reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)
    $end            reduce using rule 107 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body .)

251: 
state 251

    (106) type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .
    PROTOCOL        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    TYPE            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    LPAREN          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    FUNCTION        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    LBRACE          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    LET             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    STRING          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    NUMBER          reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    FOR             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    IF              reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    WHILE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    E_CONST         reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    PI_CONST        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    RAND            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    LOG             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    EXP             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    COS             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    SIN             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    SQRT            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    FALSE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    TRUE            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    NEW             reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    LBRACKET        reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    PRINT           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    RANGE           reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)
    $end            reduce using rule 106 (type_declaration -> TYPE IDENTIFIER constructor decl_body SEMICOLON .)

252: 
state 252

    (113) inherits_type -> INHERITS IDENTIFIER . constructor
    (109) constructor -> . empty
    (110) constructor -> . LPAREN RPAREN
    (111) constructor -> . LPAREN param_list RPAREN
    (112) constructor -> . LPAREN id_list RPAREN
    (177) empty -> .
    LPAREN          shift and go to state 131
    LBRACE          reduce using rule 177 (empty -> .)

    constructor                    shift and go to state 297
    empty                          shift and go to state 130
253: 
state 253

    (114) decl_body -> LBRACE decl_list . RBRACE
    RBRACE          shift and go to state 298

254: 
state 254

    (115) decl_body -> LBRACE RBRACE .
    SEMICOLON       reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    PROTOCOL        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    TYPE            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LPAREN          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LBRACE          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LET             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    STRING          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    NUMBER          reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    FOR             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    IF              reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    WHILE           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    E_CONST         reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    PI_CONST        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    RAND            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LOG             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    EXP             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    COS             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    SIN             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    SQRT            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    FALSE           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    TRUE            reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    NEW             reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    PRINT           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    RANGE           reduce using rule 115 (decl_body -> LBRACE RBRACE .)
    $end            reduce using rule 115 (decl_body -> LBRACE RBRACE .)

255: 
state 255

    (116) decl_list -> decl . SEMICOLON decl_list
    (117) decl_list -> decl . SEMICOLON
    SEMICOLON       shift and go to state 299

256: 
state 256

    (118) decl -> method_declaration .
    SEMICOLON       reduce using rule 118 (decl -> method_declaration .)

257: 
state 257

    (119) decl -> atribute_declaration .
    SEMICOLON       reduce using rule 119 (decl -> atribute_declaration .)

258: 
state 258

    (122) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation function_full_declaration
    (123) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER . LPAREN RPAREN type_anotation RETURN expression
    (125) method_declaration -> IDENTIFIER . LPAREN id_list RPAREN type_anotation function_full_declaration
    (126) method_declaration -> IDENTIFIER . LPAREN id_list RPAREN type_anotation RETURN expression
    (127) method_declaration -> IDENTIFIER . LPAREN RPAREN function_full_declaration
    (128) method_declaration -> IDENTIFIER . LPAREN RPAREN RETURN expression
    (129) method_declaration -> IDENTIFIER . LPAREN id_list RPAREN function_full_declaration
    (130) method_declaration -> IDENTIFIER . LPAREN id_list RPAREN RETURN expression
    (29) fully_typed_param -> IDENTIFIER . type_anotation
    (146) var_method -> IDENTIFIER . DOT function_call
    (143) var_use -> IDENTIFIER .
    (131) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) function_call -> IDENTIFIER . LPAREN param_list RPAREN
    (144) var_attr -> IDENTIFIER . DOT var_attr
    (145) var_attr -> IDENTIFIER . DOT IDENTIFIER
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    LPAREN          shift and go to state 300
    DOT             shift and go to state 64
    LBRACKET        reduce using rule 143 (var_use -> IDENTIFIER .)
    ASSIGN          reduce using rule 143 (var_use -> IDENTIFIER .)
    COLON           shift and go to state 141

    type_anotation                 shift and go to state 140
259: 
state 259

    (120) atribute_declaration -> identifier . ASSIGN expression type_downcast
    (121) atribute_declaration -> identifier . ASSIGN expression
    ASSIGN          shift and go to state 301

260: 
state 260

    (111) constructor -> LPAREN param_list RPAREN .
    INHERITS        reduce using rule 111 (constructor -> LPAREN param_list RPAREN .)
    LBRACE          reduce using rule 111 (constructor -> LPAREN param_list RPAREN .)

261: 
state 261

    (112) constructor -> LPAREN id_list RPAREN .
    INHERITS        reduce using rule 112 (constructor -> LPAREN id_list RPAREN .)
    LBRACE          reduce using rule 112 (constructor -> LPAREN id_list RPAREN .)

262: 
state 262

    (17) var_decl_expr -> LPAREN var_dec . RPAREN
    RPAREN          shift and go to state 302

263: 
state 263

    (23) var_init -> identifier ASSIGN inst type_downcast .
    COMMA           reduce using rule 23 (var_init -> identifier ASSIGN inst type_downcast .)
    IN              reduce using rule 23 (var_init -> identifier ASSIGN inst type_downcast .)

264: 
state 264

    (136) type_downcast -> AS . identifier
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    identifier                     shift and go to state 303
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
265: 
state 265

    (88) for_loop -> FOR LPAREN identifier IN expression . RPAREN expression
    (89) for_loop -> FOR LPAREN identifier IN expression . RPAREN scope
    RPAREN          shift and go to state 304

266: 
state 266

    (94) condition -> LPAREN conditional_expression RPAREN .
    OR              reduce using rule 94 (condition -> LPAREN conditional_expression RPAREN .)
    AND             reduce using rule 94 (condition -> LPAREN conditional_expression RPAREN .)
    RPAREN          reduce using rule 94 (condition -> LPAREN conditional_expression RPAREN .)
    SEMICOLON       reduce using rule 94 (condition -> LPAREN conditional_expression RPAREN .)

267: 
state 267

    (77) full_conditional -> LPAREN conditional_expression RPAREN scope . else_elif_statement
    (78) else_elif_statement -> . ELSE full_else
    (79) else_elif_statement -> . ELSE inline_else
    (80) else_elif_statement -> . ELIF full_conditional
    (81) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 306
    ELIF            shift and go to state 307

    else_elif_statement            shift and go to state 305
268: 
state 268

    (76) inline_conditional -> LPAREN conditional_expression RPAREN expression . else_elif_statement
    (78) else_elif_statement -> . ELSE full_else
    (79) else_elif_statement -> . ELSE inline_else
    (80) else_elif_statement -> . ELIF full_conditional
    (81) else_elif_statement -> . ELIF inline_conditional
    ELSE            shift and go to state 306
    ELIF            shift and go to state 307

    else_elif_statement            shift and go to state 308
269: 
state 269

    (97) comparation -> expression NOT_EQUAL expression .
    OR              reduce using rule 97 (comparation -> expression NOT_EQUAL expression .)
    AND             reduce using rule 97 (comparation -> expression NOT_EQUAL expression .)
    RPAREN          reduce using rule 97 (comparation -> expression NOT_EQUAL expression .)
    SEMICOLON       reduce using rule 97 (comparation -> expression NOT_EQUAL expression .)

270: 
state 270

    (98) comparation -> expression EQUAL expression .
    OR              reduce using rule 98 (comparation -> expression EQUAL expression .)
    AND             reduce using rule 98 (comparation -> expression EQUAL expression .)
    RPAREN          reduce using rule 98 (comparation -> expression EQUAL expression .)
    SEMICOLON       reduce using rule 98 (comparation -> expression EQUAL expression .)

271: 
state 271

    (99) comparation -> expression LESS_EQUAL expression .
    OR              reduce using rule 99 (comparation -> expression LESS_EQUAL expression .)
    AND             reduce using rule 99 (comparation -> expression LESS_EQUAL expression .)
    RPAREN          reduce using rule 99 (comparation -> expression LESS_EQUAL expression .)
    SEMICOLON       reduce using rule 99 (comparation -> expression LESS_EQUAL expression .)

272: 
state 272

    (100) comparation -> expression GREATER_EQUAL expression .
    OR              reduce using rule 100 (comparation -> expression GREATER_EQUAL expression .)
    AND             reduce using rule 100 (comparation -> expression GREATER_EQUAL expression .)
    RPAREN          reduce using rule 100 (comparation -> expression GREATER_EQUAL expression .)
    SEMICOLON       reduce using rule 100 (comparation -> expression GREATER_EQUAL expression .)

273: 
state 273

    (101) comparation -> expression LESS_THAN expression .
    OR              reduce using rule 101 (comparation -> expression LESS_THAN expression .)
    AND             reduce using rule 101 (comparation -> expression LESS_THAN expression .)
    RPAREN          reduce using rule 101 (comparation -> expression LESS_THAN expression .)
    SEMICOLON       reduce using rule 101 (comparation -> expression LESS_THAN expression .)

274: 
state 274

    (102) comparation -> expression GREATER_THAN expression .
    OR              reduce using rule 102 (comparation -> expression GREATER_THAN expression .)
    AND             reduce using rule 102 (comparation -> expression GREATER_THAN expression .)
    RPAREN          reduce using rule 102 (comparation -> expression GREATER_THAN expression .)
    SEMICOLON       reduce using rule 102 (comparation -> expression GREATER_THAN expression .)

275: 
state 275

    (92) conditional_expression -> condition OR conditional_expression .
    RPAREN          reduce using rule 92 (conditional_expression -> condition OR conditional_expression .)
    SEMICOLON       reduce using rule 92 (conditional_expression -> condition OR conditional_expression .)

276: 
state 276

    (93) conditional_expression -> condition AND conditional_expression .
    RPAREN          reduce using rule 93 (conditional_expression -> condition AND conditional_expression .)
    SEMICOLON       reduce using rule 93 (conditional_expression -> condition AND conditional_expression .)

277: 
state 277

    (135) type_conforming -> IS identifier .
    OR              reduce using rule 135 (type_conforming -> IS identifier .)
    AND             reduce using rule 135 (type_conforming -> IS identifier .)
    RPAREN          reduce using rule 135 (type_conforming -> IS identifier .)
    SEMICOLON       reduce using rule 135 (type_conforming -> IS identifier .)

278: 
state 278

    (84) while_loop -> WHILE LPAREN expression RPAREN expression .
    SEMICOLON       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    $end            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    COMMA           reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RBRACKET        reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    RPAREN          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    OR              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    SINCETHAT       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    EQUAL           reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    LESS_THAN       reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AS              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    IN              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELSE            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    ELIF            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)
    AND             reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN expression .)

279: 
state 279

    (85) while_loop -> WHILE LPAREN expression RPAREN scope .
    SEMICOLON       reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    $end            reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    COMMA           reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RBRACKET        reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    RPAREN          reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    OR              reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    SINCETHAT       reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    EQUAL           reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    LESS_THAN       reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AS              reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    IN              reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELSE            reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    ELIF            reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)
    AND             reduce using rule 85 (while_loop -> WHILE LPAREN expression RPAREN scope .)

280: 
state 280

    (86) while_loop -> WHILE LPAREN conditional_expression RPAREN expression .
    SEMICOLON       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    $end            reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    COMMA           reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RBRACKET        reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    RPAREN          reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    OR              reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    SINCETHAT       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    EQUAL           reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    LESS_THAN       reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    GREATER_THAN    reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AS              reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    IN              reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELSE            reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    ELIF            reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)
    AND             reduce using rule 86 (while_loop -> WHILE LPAREN conditional_expression RPAREN expression .)

281: 
state 281

    (87) while_loop -> WHILE LPAREN conditional_expression RPAREN scope .
    SEMICOLON       reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    $end            reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    COMMA           reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RBRACKET        reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    RPAREN          reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    OR              reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    SINCETHAT       reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    EQUAL           reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    LESS_THAN       reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    GREATER_THAN    reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AS              reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    IN              reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELSE            reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    ELIF            reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)
    AND             reduce using rule 87 (while_loop -> WHILE LPAREN conditional_expression RPAREN scope .)

282: 
state 282

    (162) vector_decl -> expression OR identifier IN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 309
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
283: 
state 283

    (163) vector_decl -> expression SINCETHAT identifier IN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 310
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
284: 
state 284

    (168) build_in_functions -> LOG LPAREN param COMMA param . RPAREN
    RPAREN          shift and go to state 311

285: 
state 285

    (134) type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .
    ESPACEDCONCAT   reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    CONCAT          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    LBRACKET        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    MODULE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    DIVIDE          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    MULTIPLY        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    ASTERPOWER      reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    POWER           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    MINUS           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    PLUS            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    SEMICOLON       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    $end            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    RPAREN          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    ASSIGN          reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    OR              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    SINCETHAT       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    COMMA           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    RBRACKET        reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    NOT_EQUAL       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    EQUAL           reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    LESS_EQUAL      reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    GREATER_EQUAL   reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    LESS_THAN       reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    GREATER_THAN    reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    AS              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    IN              reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    ELSE            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    ELIF            reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)
    AND             reduce using rule 134 (type_instanciation -> NEW IDENTIFIER LPAREN param_list RPAREN .)

286: 
state 286

    (165) build_in_range -> RANGE LPAREN param COMMA param . RPAREN
    RPAREN          shift and go to state 312

287: 
state 287

    (150) protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .
    PROTOCOL        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TYPE            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LPAREN          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FUNCTION        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACE          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LET             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    STRING          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NUMBER          reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FOR             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IF              reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    WHILE           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    IDENTIFIER      reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    E_CONST         reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PI_CONST        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RAND            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LOG             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    EXP             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    COS             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SIN             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    SQRT            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    FALSE           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    TRUE            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    NEW             reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    LBRACKET        reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    PRINT           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    RANGE           reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)
    $end            reduce using rule 150 (protocol_declaration -> PROTOCOL IDENTIFIER EXTENDS IDENTIFIER protocol_body SEMICOLON .)

288: 
state 288

    (155) virtual_method_list -> virtual_method SEMICOLON virtual_method_list .
    RBRACE          reduce using rule 155 (virtual_method_list -> virtual_method SEMICOLON virtual_method_list .)

289: 
state 289

    (29) fully_typed_param -> IDENTIFIER . type_anotation
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 141

    type_anotation                 shift and go to state 140
290: 
state 290

    (157) virtual_method -> IDENTIFIER LPAREN fully_typed_params . RPAREN type_anotation
    RPAREN          shift and go to state 313

291: 
state 291

    (158) virtual_method -> IDENTIFIER LPAREN RPAREN . type_anotation
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 141

    type_anotation                 shift and go to state 314
292: 
state 292

    (159) fully_typed_params -> fully_typed_param . COMMA fully_typed_params
    (160) fully_typed_params -> fully_typed_param .
    COMMA           shift and go to state 315
    RPAREN          reduce using rule 160 (fully_typed_params -> fully_typed_param .)

293: 
state 293

    (72) function_inline_declaration -> type_anotation RETURN inst . SEMICOLON
    SEMICOLON       shift and go to state 316

294: 
state 294

    (73) function_inline_declaration -> RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TYPE            reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LET             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    STRING          reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FOR             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IF              reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    WHILE           reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RAND            reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LOG             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    EXP             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    COS             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SIN             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    SQRT            reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    FALSE           reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    TRUE            reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    NEW             reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    PRINT           reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    RANGE           reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)
    $end            reduce using rule 73 (function_inline_declaration -> RETURN inst SEMICOLON .)

295: 
state 295

    (67) function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .
    PROTOCOL        reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    TYPE            reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    LPAREN          reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    FUNCTION        reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    LBRACE          reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    LET             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    STRING          reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    NUMBER          reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    FOR             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    IF              reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    WHILE           reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    E_CONST         reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    PI_CONST        reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    RAND            reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    LOG             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    EXP             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    COS             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    SIN             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    SQRT            reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    FALSE           reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    TRUE            reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    NEW             reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    LBRACKET        reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    PRINT           reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    RANGE           reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)
    $end            reduce using rule 67 (function_declaration -> func_decl_id LPAREN id_list RPAREN function_full_declaration SEMICOLON .)

296: 
state 296

    (105) type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .
    PROTOCOL        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    TYPE            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    LPAREN          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    FUNCTION        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    LBRACE          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    LET             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    STRING          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    NUMBER          reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    FOR             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    IF              reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    WHILE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    IDENTIFIER      reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    E_CONST         reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    PI_CONST        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    RAND            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    LOG             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    EXP             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    COS             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    SIN             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    SQRT            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    FALSE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    TRUE            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    NEW             reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    LBRACKET        reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    PRINT           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    RANGE           reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)
    $end            reduce using rule 105 (type_declaration -> TYPE IDENTIFIER constructor inherits_type decl_body SEMICOLON .)

297: 
state 297

    (113) inherits_type -> INHERITS IDENTIFIER constructor .
    LBRACE          reduce using rule 113 (inherits_type -> INHERITS IDENTIFIER constructor .)

298: 
state 298

    (114) decl_body -> LBRACE decl_list RBRACE .
    SEMICOLON       reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    PROTOCOL        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    TYPE            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LPAREN          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    FUNCTION        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACE          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LET             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    STRING          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    NUMBER          reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    FOR             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    IF              reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    WHILE           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    IDENTIFIER      reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    E_CONST         reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    PI_CONST        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    RAND            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LOG             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    EXP             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    COS             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    SIN             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    SQRT            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    FALSE           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    TRUE            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    NEW             reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    LBRACKET        reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    PRINT           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    RANGE           reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)
    $end            reduce using rule 114 (decl_body -> LBRACE decl_list RBRACE .)

299: 
state 299

    (116) decl_list -> decl SEMICOLON . decl_list
    (117) decl_list -> decl SEMICOLON .
    (116) decl_list -> . decl SEMICOLON decl_list
    (117) decl_list -> . decl SEMICOLON
    (118) decl -> . method_declaration
    (119) decl -> . atribute_declaration
    (122) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration
    (123) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> . IDENTIFIER LPAREN RPAREN type_anotation RETURN expression
    (125) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN type_anotation function_full_declaration
    (126) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN type_anotation RETURN expression
    (127) method_declaration -> . IDENTIFIER LPAREN RPAREN function_full_declaration
    (128) method_declaration -> . IDENTIFIER LPAREN RPAREN RETURN expression
    (129) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN function_full_declaration
    (130) method_declaration -> . IDENTIFIER LPAREN id_list RPAREN RETURN expression
    (120) atribute_declaration -> . identifier ASSIGN expression type_downcast
    (121) atribute_declaration -> . identifier ASSIGN expression
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    RBRACE          reduce using rule 117 (decl_list -> decl SEMICOLON .)
    IDENTIFIER      shift and go to state 258
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    decl                           shift and go to state 255
    decl_list                      shift and go to state 317
    method_declaration             shift and go to state 256
    atribute_declaration           shift and go to state 257
    identifier                     shift and go to state 259
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 85
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 71
    function_call                  shift and go to state 35
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
300: 
state 300

    (122) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation function_full_declaration
    (123) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN . RPAREN type_anotation RETURN expression
    (125) method_declaration -> IDENTIFIER LPAREN . id_list RPAREN type_anotation function_full_declaration
    (126) method_declaration -> IDENTIFIER LPAREN . id_list RPAREN type_anotation RETURN expression
    (127) method_declaration -> IDENTIFIER LPAREN . RPAREN function_full_declaration
    (128) method_declaration -> IDENTIFIER LPAREN . RPAREN RETURN expression
    (129) method_declaration -> IDENTIFIER LPAREN . id_list RPAREN function_full_declaration
    (130) method_declaration -> IDENTIFIER LPAREN . id_list RPAREN RETURN expression
    (131) function_call -> IDENTIFIER LPAREN . RPAREN
    (132) function_call -> IDENTIFIER LPAREN . param_list RPAREN
    (25) id_list -> . identifier COMMA id_list
    (26) id_list -> . identifier
    (137) param_list -> . param COMMA param_list
    (138) param_list -> . param
    (27) identifier -> . fully_typed_param
    (28) identifier -> . atom
    (139) param -> . conditional
    (140) param -> . expression
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (74) conditional -> . IF full_conditional
    (75) conditional -> . IF inline_conditional
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    RPAREN          shift and go to state 318
    IDENTIFIER      shift and go to state 86
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IF              shift and go to state 40
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    LET             shift and go to state 27
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 123
    id_list                        shift and go to state 319
    param_list                     shift and go to state 122
    identifier                     shift and go to state 126
    param                          shift and go to state 99
    fully_typed_param              shift and go to state 84
    atom                           shift and go to state 195
    conditional                    shift and go to state 100
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    var_use                        shift and go to state 196
    function_call                  shift and go to state 35
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    aritmetic_operation            shift and go to state 22
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    var_attr                       shift and go to state 42
    term                           shift and go to state 38
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
301: 
state 301

    (120) atribute_declaration -> identifier ASSIGN . expression type_downcast
    (121) atribute_declaration -> identifier ASSIGN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 320
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
302: 
state 302

    (17) var_decl_expr -> LPAREN var_dec RPAREN .
    SEMICOLON       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    $end            reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    COMMA           reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RBRACKET        reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    RPAREN          reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    OR              reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    SINCETHAT       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    NOT_EQUAL       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    EQUAL           reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_EQUAL      reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_EQUAL   reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    LESS_THAN       reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    GREATER_THAN    reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AS              reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    IN              reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELSE            reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    ELIF            reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)
    AND             reduce using rule 17 (var_decl_expr -> LPAREN var_dec RPAREN .)

303: 
state 303

    (136) type_downcast -> AS identifier .
    COMMA           reduce using rule 136 (type_downcast -> AS identifier .)
    IN              reduce using rule 136 (type_downcast -> AS identifier .)
    SEMICOLON       reduce using rule 136 (type_downcast -> AS identifier .)

304: 
state 304

    (88) for_loop -> FOR LPAREN identifier IN expression RPAREN . expression
    (89) for_loop -> FOR LPAREN identifier IN expression RPAREN . scope
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 321
    scope                          shift and go to state 322
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
305: 
state 305

    (77) full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .
    SEMICOLON       reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    $end            reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    COMMA           reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    RBRACKET        reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    RPAREN          reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    OR              reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    SINCETHAT       reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    NOT_EQUAL       reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    EQUAL           reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    LESS_EQUAL      reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    GREATER_EQUAL   reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    LESS_THAN       reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    GREATER_THAN    reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    AS              reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    IN              reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    ELSE            reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    ELIF            reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)
    AND             reduce using rule 77 (full_conditional -> LPAREN conditional_expression RPAREN scope else_elif_statement .)

306: 
state 306

    (78) else_elif_statement -> ELSE . full_else
    (79) else_elif_statement -> ELSE . inline_else
    (83) full_else -> . scope
    (82) inline_else -> . expression
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LBRACE          shift and go to state 26
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    full_else                      shift and go to state 323
    inline_else                    shift and go to state 324
    scope                          shift and go to state 325
    expression                     shift and go to state 326
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
307: 
state 307

    (80) else_elif_statement -> ELIF . full_conditional
    (81) else_elif_statement -> ELIF . inline_conditional
    (77) full_conditional -> . LPAREN conditional_expression RPAREN scope else_elif_statement
    (76) inline_conditional -> . LPAREN conditional_expression RPAREN expression else_elif_statement
    LPAREN          shift and go to state 94

    full_conditional               shift and go to state 327
    inline_conditional             shift and go to state 328
308: 
state 308

    (76) inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .
    SEMICOLON       reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    $end            reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    COMMA           reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RBRACKET        reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    RPAREN          reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    OR              reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    SINCETHAT       reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    NOT_EQUAL       reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    EQUAL           reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_EQUAL      reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_EQUAL   reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    LESS_THAN       reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    GREATER_THAN    reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AS              reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    IN              reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELSE            reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    ELIF            reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)
    AND             reduce using rule 76 (inline_conditional -> LPAREN conditional_expression RPAREN expression else_elif_statement .)

309: 
state 309

    (162) vector_decl -> expression OR identifier IN expression .
    RBRACKET        reduce using rule 162 (vector_decl -> expression OR identifier IN expression .)

310: 
state 310

    (163) vector_decl -> expression SINCETHAT identifier IN expression .
    RBRACKET        reduce using rule 163 (vector_decl -> expression SINCETHAT identifier IN expression .)

311: 
state 311

    (168) build_in_functions -> LOG LPAREN param COMMA param RPAREN .
    ESPACEDCONCAT   reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    CONCAT          reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    LBRACKET        reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    MODULE          reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    DIVIDE          reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    MULTIPLY        reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    ASTERPOWER      reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    POWER           reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    MINUS           reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    PLUS            reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    SEMICOLON       reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    $end            reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    RPAREN          reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    ASSIGN          reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    OR              reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    SINCETHAT       reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    COMMA           reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    RBRACKET        reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    NOT_EQUAL       reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    EQUAL           reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    LESS_EQUAL      reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    GREATER_EQUAL   reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    LESS_THAN       reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    GREATER_THAN    reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    AS              reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    IN              reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    ELSE            reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    ELIF            reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)
    AND             reduce using rule 168 (build_in_functions -> LOG LPAREN param COMMA param RPAREN .)

312: 
state 312

    (165) build_in_range -> RANGE LPAREN param COMMA param RPAREN .
    ESPACEDCONCAT   reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    CONCAT          reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    LBRACKET        reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    MODULE          reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    DIVIDE          reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    MULTIPLY        reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    ASTERPOWER      reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    POWER           reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    MINUS           reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    PLUS            reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    SEMICOLON       reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    $end            reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    RPAREN          reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    ASSIGN          reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    OR              reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    SINCETHAT       reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    COMMA           reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    RBRACKET        reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    NOT_EQUAL       reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    EQUAL           reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    LESS_EQUAL      reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    GREATER_EQUAL   reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    LESS_THAN       reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    GREATER_THAN    reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    AS              reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    IN              reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    ELSE            reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    ELIF            reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)
    AND             reduce using rule 165 (build_in_range -> RANGE LPAREN param COMMA param RPAREN .)

313: 
state 313

    (157) virtual_method -> IDENTIFIER LPAREN fully_typed_params RPAREN . type_anotation
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    COLON           shift and go to state 141

    type_anotation                 shift and go to state 329
314: 
state 314

    (158) virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .
    SEMICOLON       reduce using rule 158 (virtual_method -> IDENTIFIER LPAREN RPAREN type_anotation .)

315: 
state 315

    (159) fully_typed_params -> fully_typed_param COMMA . fully_typed_params
    (159) fully_typed_params -> . fully_typed_param COMMA fully_typed_params
    (160) fully_typed_params -> . fully_typed_param
    (29) fully_typed_param -> . IDENTIFIER type_anotation
    IDENTIFIER      shift and go to state 289

    fully_typed_param              shift and go to state 292
    fully_typed_params             shift and go to state 330
316: 
state 316

    (72) function_inline_declaration -> type_anotation RETURN inst SEMICOLON .
    PROTOCOL        reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    TYPE            reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LPAREN          reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FUNCTION        reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LBRACE          reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LET             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    STRING          reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    NUMBER          reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FOR             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    IF              reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    WHILE           reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    IDENTIFIER      reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    E_CONST         reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    PI_CONST        reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    RAND            reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LOG             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    EXP             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    COS             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    SIN             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    SQRT            reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    FALSE           reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    TRUE            reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    NEW             reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    LBRACKET        reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    PRINT           reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    RANGE           reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)
    $end            reduce using rule 72 (function_inline_declaration -> type_anotation RETURN inst SEMICOLON .)

317: 
state 317

    (116) decl_list -> decl SEMICOLON decl_list .
    RBRACE          reduce using rule 116 (decl_list -> decl SEMICOLON decl_list .)

318: 
state 318

    (122) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation function_full_declaration
    (123) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN . type_anotation RETURN expression
    (127) method_declaration -> IDENTIFIER LPAREN RPAREN . function_full_declaration
    (128) method_declaration -> IDENTIFIER LPAREN RPAREN . RETURN expression
    (131) function_call -> IDENTIFIER LPAREN RPAREN .
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    (71) function_full_declaration -> . scope
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 333
    LBRACKET        reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    ASSIGN          reduce using rule 131 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           shift and go to state 141
    LBRACE          shift and go to state 26

    type_anotation                 shift and go to state 331
    function_full_declaration      shift and go to state 332
    scope                          shift and go to state 185
319: 
state 319

    (125) method_declaration -> IDENTIFIER LPAREN id_list . RPAREN type_anotation function_full_declaration
    (126) method_declaration -> IDENTIFIER LPAREN id_list . RPAREN type_anotation RETURN expression
    (129) method_declaration -> IDENTIFIER LPAREN id_list . RPAREN function_full_declaration
    (130) method_declaration -> IDENTIFIER LPAREN id_list . RPAREN RETURN expression
    RPAREN          shift and go to state 334

320: 
state 320

    (120) atribute_declaration -> identifier ASSIGN expression . type_downcast
    (121) atribute_declaration -> identifier ASSIGN expression .
    (136) type_downcast -> . AS identifier
    SEMICOLON       reduce using rule 121 (atribute_declaration -> identifier ASSIGN expression .)
    AS              shift and go to state 264

    type_downcast                  shift and go to state 335
321: 
state 321

    (88) for_loop -> FOR LPAREN identifier IN expression RPAREN expression .
    SEMICOLON       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    $end            reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    COMMA           reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RBRACKET        reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    RPAREN          reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    OR              reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    SINCETHAT       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    NOT_EQUAL       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    EQUAL           reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_EQUAL      reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_EQUAL   reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    LESS_THAN       reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    GREATER_THAN    reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AS              reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    IN              reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELSE            reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    ELIF            reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)
    AND             reduce using rule 88 (for_loop -> FOR LPAREN identifier IN expression RPAREN expression .)

322: 
state 322

    (89) for_loop -> FOR LPAREN identifier IN expression RPAREN scope .
    SEMICOLON       reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    $end            reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    COMMA           reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RBRACKET        reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    RPAREN          reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    OR              reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    SINCETHAT       reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    NOT_EQUAL       reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    EQUAL           reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_EQUAL      reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_EQUAL   reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    LESS_THAN       reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    GREATER_THAN    reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AS              reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    IN              reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELSE            reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    ELIF            reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)
    AND             reduce using rule 89 (for_loop -> FOR LPAREN identifier IN expression RPAREN scope .)

323: 
state 323

    (78) else_elif_statement -> ELSE full_else .
    SEMICOLON       reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    $end            reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    COMMA           reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    RBRACKET        reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    RPAREN          reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    OR              reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    SINCETHAT       reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    NOT_EQUAL       reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    EQUAL           reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    LESS_EQUAL      reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    GREATER_EQUAL   reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    LESS_THAN       reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    GREATER_THAN    reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    AS              reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    IN              reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    ELSE            reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    ELIF            reduce using rule 78 (else_elif_statement -> ELSE full_else .)
    AND             reduce using rule 78 (else_elif_statement -> ELSE full_else .)

324: 
state 324

    (79) else_elif_statement -> ELSE inline_else .
    SEMICOLON       reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    $end            reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    COMMA           reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    RBRACKET        reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    RPAREN          reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    OR              reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    SINCETHAT       reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    NOT_EQUAL       reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    EQUAL           reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    LESS_EQUAL      reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    GREATER_EQUAL   reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    LESS_THAN       reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    GREATER_THAN    reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    AS              reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    IN              reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    ELSE            reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    ELIF            reduce using rule 79 (else_elif_statement -> ELSE inline_else .)
    AND             reduce using rule 79 (else_elif_statement -> ELSE inline_else .)

325: 
state 325

    (83) full_else -> scope .
    SEMICOLON       reduce using rule 83 (full_else -> scope .)
    $end            reduce using rule 83 (full_else -> scope .)
    COMMA           reduce using rule 83 (full_else -> scope .)
    RBRACKET        reduce using rule 83 (full_else -> scope .)
    RPAREN          reduce using rule 83 (full_else -> scope .)
    OR              reduce using rule 83 (full_else -> scope .)
    SINCETHAT       reduce using rule 83 (full_else -> scope .)
    NOT_EQUAL       reduce using rule 83 (full_else -> scope .)
    EQUAL           reduce using rule 83 (full_else -> scope .)
    LESS_EQUAL      reduce using rule 83 (full_else -> scope .)
    GREATER_EQUAL   reduce using rule 83 (full_else -> scope .)
    LESS_THAN       reduce using rule 83 (full_else -> scope .)
    GREATER_THAN    reduce using rule 83 (full_else -> scope .)
    AS              reduce using rule 83 (full_else -> scope .)
    IN              reduce using rule 83 (full_else -> scope .)
    ELSE            reduce using rule 83 (full_else -> scope .)
    ELIF            reduce using rule 83 (full_else -> scope .)
    AND             reduce using rule 83 (full_else -> scope .)

326: 
state 326

    (82) inline_else -> expression .
    SEMICOLON       reduce using rule 82 (inline_else -> expression .)
    $end            reduce using rule 82 (inline_else -> expression .)
    COMMA           reduce using rule 82 (inline_else -> expression .)
    RBRACKET        reduce using rule 82 (inline_else -> expression .)
    RPAREN          reduce using rule 82 (inline_else -> expression .)
    OR              reduce using rule 82 (inline_else -> expression .)
    SINCETHAT       reduce using rule 82 (inline_else -> expression .)
    NOT_EQUAL       reduce using rule 82 (inline_else -> expression .)
    EQUAL           reduce using rule 82 (inline_else -> expression .)
    LESS_EQUAL      reduce using rule 82 (inline_else -> expression .)
    GREATER_EQUAL   reduce using rule 82 (inline_else -> expression .)
    LESS_THAN       reduce using rule 82 (inline_else -> expression .)
    GREATER_THAN    reduce using rule 82 (inline_else -> expression .)
    AS              reduce using rule 82 (inline_else -> expression .)
    IN              reduce using rule 82 (inline_else -> expression .)
    ELSE            reduce using rule 82 (inline_else -> expression .)
    ELIF            reduce using rule 82 (inline_else -> expression .)
    AND             reduce using rule 82 (inline_else -> expression .)

327: 
state 327

    (80) else_elif_statement -> ELIF full_conditional .
    SEMICOLON       reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    $end            reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    COMMA           reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    RBRACKET        reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    RPAREN          reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    OR              reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    SINCETHAT       reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    NOT_EQUAL       reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    EQUAL           reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    LESS_EQUAL      reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    GREATER_EQUAL   reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    LESS_THAN       reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    GREATER_THAN    reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    AS              reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    IN              reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    ELSE            reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    ELIF            reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)
    AND             reduce using rule 80 (else_elif_statement -> ELIF full_conditional .)

328: 
state 328

    (81) else_elif_statement -> ELIF inline_conditional .
    SEMICOLON       reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    $end            reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    COMMA           reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    RBRACKET        reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    RPAREN          reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    OR              reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    SINCETHAT       reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    NOT_EQUAL       reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    EQUAL           reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    LESS_EQUAL      reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_EQUAL   reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    LESS_THAN       reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    GREATER_THAN    reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    AS              reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    IN              reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    ELSE            reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    ELIF            reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)
    AND             reduce using rule 81 (else_elif_statement -> ELIF inline_conditional .)

329: 
state 329

    (157) virtual_method -> IDENTIFIER LPAREN fully_typed_params RPAREN type_anotation .
    SEMICOLON       reduce using rule 157 (virtual_method -> IDENTIFIER LPAREN fully_typed_params RPAREN type_anotation .)

330: 
state 330

    (159) fully_typed_params -> fully_typed_param COMMA fully_typed_params .
    RPAREN          reduce using rule 159 (fully_typed_params -> fully_typed_param COMMA fully_typed_params .)

331: 
state 331

    (122) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . function_full_declaration
    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation . RETURN expression
    (71) function_full_declaration -> . scope
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 337
    LBRACE          shift and go to state 26

    function_full_declaration      shift and go to state 336
    scope                          shift and go to state 185
332: 
state 332

    (127) method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .
    SEMICOLON       reduce using rule 127 (method_declaration -> IDENTIFIER LPAREN RPAREN function_full_declaration .)

333: 
state 333

    (128) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 338
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
334: 
state 334

    (125) method_declaration -> IDENTIFIER LPAREN id_list RPAREN . type_anotation function_full_declaration
    (126) method_declaration -> IDENTIFIER LPAREN id_list RPAREN . type_anotation RETURN expression
    (129) method_declaration -> IDENTIFIER LPAREN id_list RPAREN . function_full_declaration
    (130) method_declaration -> IDENTIFIER LPAREN id_list RPAREN . RETURN expression
    (30) type_anotation -> . COLON BOOLEAN_TYPE
    (31) type_anotation -> . COLON NUMBER_TYPE
    (32) type_anotation -> . COLON IDENTIFIER
    (71) function_full_declaration -> . scope
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 341
    COLON           shift and go to state 141
    LBRACE          shift and go to state 26

    type_anotation                 shift and go to state 339
    function_full_declaration      shift and go to state 340
    scope                          shift and go to state 185
335: 
state 335

    (120) atribute_declaration -> identifier ASSIGN expression type_downcast .
    SEMICOLON       reduce using rule 120 (atribute_declaration -> identifier ASSIGN expression type_downcast .)

336: 
state 336

    (122) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 122 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation function_full_declaration .)

337: 
state 337

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . conditional_expression
    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN . expression
    (90) conditional_expression -> . condition
    (91) conditional_expression -> . NOT condition
    (92) conditional_expression -> . condition OR conditional_expression
    (93) conditional_expression -> . condition AND conditional_expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (94) condition -> . LPAREN conditional_expression RPAREN
    (95) condition -> . IDENTIFIER type_conforming
    (96) condition -> . comparation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (97) comparation -> . expression NOT_EQUAL expression
    (98) comparation -> . expression EQUAL expression
    (99) comparation -> . expression LESS_EQUAL expression
    (100) comparation -> . expression GREATER_EQUAL expression
    (101) comparation -> . expression LESS_THAN expression
    (102) comparation -> . expression GREATER_THAN expression
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    NOT             shift and go to state 151
    LPAREN          shift and go to state 147
    IDENTIFIER      shift and go to state 152
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59

    conditional_expression         shift and go to state 342
    expression                     shift and go to state 343
    condition                      shift and go to state 150
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    comparation                    shift and go to state 153
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
338: 
state 338

    (128) method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .
    SEMICOLON       reduce using rule 128 (method_declaration -> IDENTIFIER LPAREN RPAREN RETURN expression .)

339: 
state 339

    (125) method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation . function_full_declaration
    (126) method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation . RETURN expression
    (71) function_full_declaration -> . scope
    (33) scope -> . LBRACE RBRACE
    (34) scope -> . LBRACE inst_list RBRACE
    RETURN          shift and go to state 345
    LBRACE          shift and go to state 26

    function_full_declaration      shift and go to state 344
    scope                          shift and go to state 185
340: 
state 340

    (129) method_declaration -> IDENTIFIER LPAREN id_list RPAREN function_full_declaration .
    SEMICOLON       reduce using rule 129 (method_declaration -> IDENTIFIER LPAREN id_list RPAREN function_full_declaration .)

341: 
state 341

    (130) method_declaration -> IDENTIFIER LPAREN id_list RPAREN RETURN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 346
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
342: 
state 342

    (123) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .
    SEMICOLON       reduce using rule 123 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN conditional_expression .)

343: 
state 343

    (124) method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .
    (97) comparation -> expression . NOT_EQUAL expression
    (98) comparation -> expression . EQUAL expression
    (99) comparation -> expression . LESS_EQUAL expression
    (100) comparation -> expression . GREATER_EQUAL expression
    (101) comparation -> expression . LESS_THAN expression
    (102) comparation -> expression . GREATER_THAN expression
    SEMICOLON       reduce using rule 124 (method_declaration -> IDENTIFIER LPAREN RPAREN type_anotation RETURN expression .)
    NOT_EQUAL       shift and go to state 214
    EQUAL           shift and go to state 215
    LESS_EQUAL      shift and go to state 216
    GREATER_EQUAL   shift and go to state 217
    LESS_THAN       shift and go to state 218
    GREATER_THAN    shift and go to state 219

344: 
state 344

    (125) method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation function_full_declaration .
    SEMICOLON       reduce using rule 125 (method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation function_full_declaration .)

345: 
state 345

    (126) method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation RETURN . expression
    (35) expression -> . var_dec
    (36) expression -> . var_asign
    (37) expression -> . atom ESPACEDCONCAT expression
    (38) expression -> . atom CONCAT expression
    (39) expression -> . aritmetic_operation
    (16) var_dec -> . LET var_init_list IN var_decl_expr
    (62) var_asign -> . var_use ASSIGN expression
    (63) var_asign -> . var_use DEST_ASSIGN expression
    (52) atom -> . build_in_consts
    (53) atom -> . build_in_functions
    (54) atom -> . boolean_value
    (55) atom -> . type_instanciation
    (56) atom -> . var_method
    (57) atom -> . vector
    (58) atom -> . var_use
    (59) atom -> . function_call
    (60) atom -> . STRING
    (61) atom -> . NUMBER
    (40) aritmetic_operation -> . term
    (41) aritmetic_operation -> . term MINUS aritmetic_operation
    (42) aritmetic_operation -> . term PLUS aritmetic_operation
    (141) var_use -> . var_attr
    (142) var_use -> . atom LBRACKET expression RBRACKET
    (143) var_use -> . IDENTIFIER
    (175) build_in_consts -> . E_CONST
    (176) build_in_consts -> . PI_CONST
    (167) build_in_functions -> . RAND LPAREN RPAREN
    (168) build_in_functions -> . LOG LPAREN param COMMA param RPAREN
    (169) build_in_functions -> . EXP LPAREN param RPAREN
    (170) build_in_functions -> . COS LPAREN param RPAREN
    (171) build_in_functions -> . SIN LPAREN param RPAREN
    (172) build_in_functions -> . SQRT LPAREN param RPAREN
    (173) build_in_functions -> . build_in_print
    (174) build_in_functions -> . build_in_range
    (103) boolean_value -> . FALSE
    (104) boolean_value -> . TRUE
    (133) type_instanciation -> . NEW IDENTIFIER LPAREN RPAREN
    (134) type_instanciation -> . NEW IDENTIFIER LPAREN param_list RPAREN
    (146) var_method -> . IDENTIFIER DOT function_call
    (161) vector -> . LBRACKET vector_decl RBRACKET
    (131) function_call -> . IDENTIFIER LPAREN RPAREN
    (132) function_call -> . IDENTIFIER LPAREN param_list RPAREN
    (43) term -> . factor
    (44) term -> . factor MODULE term
    (45) term -> . factor DIVIDE term
    (46) term -> . factor MULTIPLY term
    (144) var_attr -> . IDENTIFIER DOT var_attr
    (145) var_attr -> . IDENTIFIER DOT IDENTIFIER
    (166) build_in_print -> . PRINT LPAREN param RPAREN
    (165) build_in_range -> . RANGE LPAREN param COMMA param RPAREN
    (47) factor -> . base_exponent
    (48) factor -> . factor ASTERPOWER base_exponent
    (49) factor -> . factor POWER base_exponent
    (50) base_exponent -> . LPAREN aritmetic_operation RPAREN
    (51) base_exponent -> . atom
    LET             shift and go to state 27
    STRING          shift and go to state 36
    NUMBER          shift and go to state 37
    IDENTIFIER      shift and go to state 11
    E_CONST         shift and go to state 44
    PI_CONST        shift and go to state 45
    RAND            shift and go to state 46
    LOG             shift and go to state 47
    EXP             shift and go to state 48
    COS             shift and go to state 49
    SIN             shift and go to state 50
    SQRT            shift and go to state 51
    FALSE           shift and go to state 54
    TRUE            shift and go to state 55
    NEW             shift and go to state 56
    LBRACKET        shift and go to state 43
    PRINT           shift and go to state 58
    RANGE           shift and go to state 59
    LPAREN          shift and go to state 67

    expression                     shift and go to state 347
    var_dec                        shift and go to state 15
    var_asign                      shift and go to state 20
    atom                           shift and go to state 21
    aritmetic_operation            shift and go to state 22
    var_use                        shift and go to state 28
    build_in_consts                shift and go to state 29
    build_in_functions             shift and go to state 30
    boolean_value                  shift and go to state 31
    type_instanciation             shift and go to state 32
    var_method                     shift and go to state 33
    vector                         shift and go to state 34
    function_call                  shift and go to state 35
    term                           shift and go to state 38
    var_attr                       shift and go to state 42
    build_in_print                 shift and go to state 52
    build_in_range                 shift and go to state 53
    factor                         shift and go to state 57
    base_exponent                  shift and go to state 60
346: 
state 346

    (130) method_declaration -> IDENTIFIER LPAREN id_list RPAREN RETURN expression .
    SEMICOLON       reduce using rule 130 (method_declaration -> IDENTIFIER LPAREN id_list RPAREN RETURN expression .)

347: 
state 347

    (126) method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation RETURN expression .
    SEMICOLON       reduce using rule 126 (method_declaration -> IDENTIFIER LPAREN id_list RPAREN type_anotation RETURN expression .)

